/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/SwiftUI.framework/SwiftUI
 */

@interface SwiftUI.AccessibilityNode : UIResponder <AXChart, AXContainerDataSeries, UIAccessibilityContainerDataTable, UIAccessibilityContainerDataTableCell> {
    void attachmentsStorage;
    void bridgedChild;
    void cachedCombinedAttachment;
    void cachedIsPlaceholderOrIgnored;
    void children;
    void environment;
    void id;
    void parent;
    void platformElementPropertiesDirty;
    void platformRotorStorage;
    void relationshipScope;
    void version;
    void viewRendererHost;
}

@property (nonatomic, readonly) bool _accessibilityExplicitlyNonInteractable;
@property (nonatomic, readonly) bool _accessibilityIsHostNode;
@property (nonatomic, readonly) NSArray *_accessibilityNodeChildrenUnsorted;
@property (nonatomic, readonly) <_TtP7SwiftUI28PlatformAccessibilityElement_> *_accessibilityNodeRepresentedElement;
@property (nonatomic, readonly) NSArray *_accessibilityUserDefinedLinkedUIElements;
@property (nonatomic) struct CGPoint { double x1; double x2; } accessibilityActivationPoint;
@property (nonatomic, retain) NSAttributedString *accessibilityAttributedHint;
@property (nonatomic, retain) NSAttributedString *accessibilityAttributedLabel;
@property (nonatomic, copy) NSArray *accessibilityAttributedUserInputLabels;
@property (nonatomic, retain) NSAttributedString *accessibilityAttributedValue;
@property (nonatomic, retain) AXChartDescriptor *accessibilityChartDescriptor;
@property (nonatomic) long long accessibilityContainerType;
@property (nonatomic, copy) NSArray *accessibilityCustomActions;
@property (nonatomic, copy) NSArray *accessibilityCustomRotors;
@property (nonatomic) unsigned long long accessibilityDirectTouchOptions;
@property (nonatomic, copy) NSArray *accessibilityDragSourceDescriptors;
@property (nonatomic, copy) NSArray *accessibilityDropPointDescriptors;
@property (nonatomic, copy) NSArray *accessibilityElements;
@property (nonatomic) bool accessibilityElementsHidden;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } accessibilityFrame;
@property (nonatomic, copy) NSString *accessibilityHint;
@property (nonatomic, copy) NSString *accessibilityIdentifier;
@property (nonatomic, copy) NSString *accessibilityLabel;
@property (nonatomic, copy) NSString *accessibilityLanguage;
@property (nonatomic) long long accessibilityNavigationStyle;
@property (nonatomic, retain) UIBezierPath *accessibilityPath;
@property (nonatomic) bool accessibilityRespondsToUserInteraction;
@property (nonatomic, copy) NSString *accessibilityTextualContext;
@property (nonatomic) unsigned long long accessibilityTraits;
@property (nonatomic, copy) NSArray *accessibilityUserInputLabels;
@property (nonatomic, copy) NSString *accessibilityValue;
@property (nonatomic) bool accessibilityViewIsModal;
@property (nonatomic) bool isAccessibilityElement;
@property (nonatomic, readonly) UIResponder *nextResponder;
@property (nonatomic) bool shouldGroupAccessibilityChildren;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/SwiftUI.framework/SwiftUI

- (void).cxx_destruct;
- (unsigned long long)_accessibilityAutomationType;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessibilityBoundsForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)_accessibilityCanPerformAction:(int)arg1;
- (bool)_accessibilityCanPerformEscapeAction;
- (id)_accessibilityDataSeriesGridlinePositionsForAxis:(long long)arg1;
- (bool)_accessibilityDataSeriesIncludesTrendlineInSonification;
- (id)_accessibilityDataSeriesMaximumValueForAxis:(long long)arg1;
- (id)_accessibilityDataSeriesMinimumValueForAxis:(long long)arg1;
- (id)_accessibilityDataSeriesName;
- (double)_accessibilityDataSeriesSonificationDuration;
- (bool)_accessibilityDataSeriesSupportsSonification;
- (bool)_accessibilityDataSeriesSupportsSummarization;
- (id)_accessibilityDataSeriesTitleForAxis:(long long)arg1;
- (long long)_accessibilityDataSeriesType;
- (id)_accessibilityDataSeriesUnitLabelForAxis:(long long)arg1;
- (id)_accessibilityDataSeriesValueDescriptionForPosition:(double)arg1 axis:(long long)arg2;
- (id)_accessibilityDataSeriesValuesForAxis:(long long)arg1;
- (long long)_accessibilityExpandedStatus;
- (bool)_accessibilityExplicitlyNonInteractable;
- (id)_accessibilityHeadingLevel;
- (bool)_accessibilityIsChartElement;
- (bool)_accessibilityIsFirstSiblingForType:(unsigned long long)arg1;
- (bool)_accessibilityIsHostNode;
- (bool)_accessibilityIsRTL;
- (double)_accessibilityMaxValue;
- (double)_accessibilityMinValue;
- (id)_accessibilityNodeChildrenUnsorted;
- (id)_accessibilityNodeRepresentedElement;
- (double)_accessibilityNumberValue;
- (id)_accessibilityRoleDescription;
- (bool)_accessibilitySupportsActivateAction;
- (id)_accessibilityUserDefinedLinkedUIElements;
- (id)_accessibilityUserTestingChildren;
- (id)_accessibilityUserTestingParent;
- (id)_accessibilityUserTestingVisibleAncestor;
- (bool)accessibilityActivate;
- (struct CGPoint { double x1; double x2; })accessibilityActivationPoint;
- (id)accessibilityAttributedHint;
- (id)accessibilityAttributedLabel;
- (id)accessibilityAttributedUserInputLabels;
- (id)accessibilityAttributedValue;
- (id)accessibilityChartDescriptor;
- (long long)accessibilityColumnCount;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityColumnRange;
- (id)accessibilityContainer;
- (long long)accessibilityContainerType;
- (id)accessibilityCustomActions;
- (id)accessibilityCustomAttribute:(id)arg1;
- (id)accessibilityCustomContent;
- (id)accessibilityCustomRotors;
- (id)accessibilityDataTableCellElementForRow:(long long)arg1 column:(long long)arg2;
- (void)accessibilityDecrement;
- (unsigned long long)accessibilityDirectTouchOptions;
- (id)accessibilityDragSourceDescriptors;
- (id)accessibilityDropPointDescriptors;
- (void)accessibilityElementDidBecomeFocused;
- (void)accessibilityElementDidLoseFocus;
- (id)accessibilityElements;
- (bool)accessibilityElementsHidden;
- (id)accessibilityHeaderElementsForColumn:(long long)arg1;
- (id)accessibilityHeaderElementsForRow:(long long)arg1;
- (id)accessibilityHint;
- (id)accessibilityIdentifier;
- (void)accessibilityIncrement;
- (id)accessibilityLabel;
- (id)accessibilityLanguage;
- (long long)accessibilityNavigationStyle;
- (bool)accessibilityPerformEscape;
- (bool)accessibilityPerformMagicTap;
- (bool)accessibilityRespondsToUserInteraction;
- (long long)accessibilityRowCount;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityRowRange;
- (bool)accessibilityScroll:(long long)arg1;
- (id)accessibilityTextualContext;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityURL;
- (id)accessibilityUserInputLabels;
- (id)accessibilityValue;
- (bool)accessibilityViewIsModal;
- (bool)accessibilityZoomInAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)accessibilityZoomOutAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)init;
- (bool)isAccessibilityElement;
- (id)nextResponder;
- (void)setAccessibilityActivationPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setAccessibilityAttributedHint:(id)arg1;
- (void)setAccessibilityAttributedLabel:(id)arg1;
- (void)setAccessibilityAttributedUserInputLabels:(id)arg1;
- (void)setAccessibilityAttributedValue:(id)arg1;
- (void)setAccessibilityChartDescriptor:(id)arg1;
- (void)setAccessibilityContainerType:(long long)arg1;
- (void)setAccessibilityCustomActions:(id)arg1;
- (void)setAccessibilityCustomRotors:(id)arg1;
- (void)setAccessibilityDirectTouchOptions:(unsigned long long)arg1;
- (void)setAccessibilityDragSourceDescriptors:(id)arg1;
- (void)setAccessibilityDropPointDescriptors:(id)arg1;
- (void)setAccessibilityElements:(id)arg1;
- (void)setAccessibilityElementsHidden:(bool)arg1;
- (void)setAccessibilityFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setAccessibilityHint:(id)arg1;
- (void)setAccessibilityIdentifier:(id)arg1;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setAccessibilityLanguage:(id)arg1;
- (void)setAccessibilityNavigationStyle:(long long)arg1;
- (void)setAccessibilityPath:(id)arg1;
- (void)setAccessibilityRespondsToUserInteraction:(bool)arg1;
- (void)setAccessibilityTextualContext:(id)arg1;
- (void)setAccessibilityTraits:(unsigned long long)arg1;
- (void)setAccessibilityUserInputLabels:(id)arg1;
- (void)setAccessibilityValue:(id)arg1;
- (void)setAccessibilityViewIsModal:(bool)arg1;
- (void)setIsAccessibilityElement:(bool)arg1;
- (void)setShouldGroupAccessibilityChildren:(bool)arg1;
- (bool)shouldGroupAccessibilityChildren;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/AccessibilityBundles/SwiftUI.axbundle/SwiftUI

+ (bool)_isSerializableAccessibilityElement;

- (bool)_accessibilityAutomationHitTestReverseOrder;
- (bool)_accessibilityFKAShouldIncludeViewsAsElements;
- (bool)_accessibilityHasOrderedChildren;
- (bool)_accessibilityIsMacVisualAppearance;
- (bool)_accessibilityIsSingleLeafItemInCell;
- (id)_accessibilityMediaAnalysisElement;
- (bool)_accessibilityPrefersNonAttributedAttributeWithOverrideSelector:(SEL)arg1 nonAttributedSelector:(SEL)arg2 attributedSelector:(SEL)arg3;
- (void)_accessibilityUpdateContainerElementReferencesIfNeededForNewElements:(id)arg1;
- (bool)_accessibilityUserTestingIsElementClassAcceptable;
- (id)_accessibilityVisualExpansionProxy;
- (id)_accessibilityWindow;
- (long long)accessibilityElementCount;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrame;
- (id)accessibilityPath;
- (bool)accessibilityShouldEnumerateContainerElementsArrayDirectly;
- (void)dealloc;
- (id)description;

// SwiftUI.AccessibilityNode (SafeCategory)

+ (Class)safeCategoryBaseClass;

// SwiftUI.AccessibilityNode (UIFocusConformance)

- (bool)_axAreChildrenFocused;
- (void)_axSetAreChildrenFocused:(bool)arg1;
- (void)_destroyFocusLayer;
- (id)_preferredFocusRegionCoordinateSpace;
- (void)_searchForFocusRegionsInContext:(id)arg1;
- (void)_updateFocusLayerFrame;
- (bool)areChildrenFocused;
- (bool)canBecomeFocused;
- (bool)conformsToProtocol:(id)arg1;
- (id)coordinateSpace;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)focusGroupIdentifier;
- (id)focusItemContainer;
- (id)focusItemsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)parentFocusEnvironment;
- (id)preferredFocusEnvironments;
- (void)setAreChildrenFocused:(bool)arg1;
- (void)setNeedsFocusUpdate;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (void)updateFocusIfNeeded;

// SwiftUI.AccessibilityNode (UIFocusConformanceFrame)

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;

@end
