/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/Foundation.framework/Foundation
 */

@interface NSDateInterval : NSObject <HKDateInterval, NSCopying, NSSecureCoding, _HKDateBounded>

@property (nonatomic, readonly) unsigned long long bls_machContinuousEndTime;
@property (nonatomic, readonly) unsigned long long bls_machContinuousStartTime;
@property (nonatomic, readonly) unsigned long long bls_machDuration;
@property (nonatomic, readonly) bool crk_containsCurrentDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) double duration;
@property (readonly, copy) NSDate *endDate;
@property (nonatomic, readonly, copy) NSDate *endDate;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSDate *startDate;
@property (readonly, copy) NSDate *startDate;
@property (readonly) Class superclass;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/Foundation.framework/Foundation

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (bool)supportsSecureCoding;

- (long long)compare:(id)arg1;
- (bool)containsDate:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (double)duration;
- (void)encodeWithCoder:(id)arg1;
- (id)endDate;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithStartDate:(id)arg1 duration:(double)arg2;
- (id)initWithStartDate:(id)arg1 endDate:(id)arg2;
- (id)intersectionWithDateInterval:(id)arg1;
- (bool)intersectsDateInterval:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToDateInterval:(id)arg1;
- (id)startDate;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/HealthKit.framework/HealthKit

// NSDateInterval (HKSleepDayIndex)

+ (id)hk_sleepDayIntervalForMorningIndex:(long long)arg1 calendar:(id)arg2;
+ (id)hk_sleepDayIntervalForMorningIndexRange:(struct { long long x1; long long x2; })arg1 calendar:(id)arg2;
+ (id)hk_sleepWeekIntervalForMorningIndex:(long long)arg1 calendar:(id)arg2;

- (id)_hk_dateForYearMonthDayComponents:(id)arg1 hourMinuteSecondComponents:(id)arg2 calendar:(id)arg3;
- (id)hk_dateIntervalByMappingToSleepDayWithMorningIndex:(long long)arg1 calendar:(id)arg2;

// NSDateInterval (HealthKit)

+ (id)hk_allTime;
+ (id)hk_dateIntervalForDayFromDate:(id)arg1 calendar:(id)arg2;
+ (id)hk_dateIntervalWithAnchor:(id)arg1 startOffset:(double)arg2 endOffset:(double)arg3;
+ (id)hk_dateIntervalWithStart:(double)arg1 end:(double)arg2;
+ (id)hk_instantaneousDateIntervalWithDate:(id)arg1;

- (bool)hk_containsTime:(double)arg1;
- (bool)hk_intersectsDateIntervalWithStartDate:(id)arg1 endDate:(id)arg2;
- (id)hk_prettyString;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/BacklightServices.framework/BacklightServices

// NSDateInterval (BacklightServices)

- (bool)bls_containsDate:(id)arg1 withEpsilon:(double)arg2;
- (bool)bls_containsDate:(id)arg1 withEpsilon:(double)arg2 outDelta:(double*)arg3;
- (id)bls_initWithStartMachContinuousTime:(unsigned long long)arg1 endMachContinuousTime:(unsigned long long)arg2;
- (id)bls_loggingString;
- (unsigned long long)bls_machContinuousEndTime;
- (unsigned long long)bls_machContinuousStartTime;
- (unsigned long long)bls_machDuration;
- (id)bls_shortLoggingString;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/ClassroomKit.framework/ClassroomKit

// NSDateInterval (CRKAdditions)

- (bool)crk_containsCurrentDate;
- (id)crk_dateIntervalByAddingTimeInterval:(double)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/ContentKit.framework/ContentKit

// NSDateInterval (WFDays)

- (id)wf_initWithDaysAfterCurrentDate:(unsigned long long)arg1;
- (id)wf_initWithDaysBeforeAndAfterCurrentDate:(unsigned long long)arg1;
- (id)wf_initWithDaysBeforeCurrentDate:(unsigned long long)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer

// NSDateInterval (MTUtilities)

+ (id)mtDateIntervalWithEndDate:(id)arg1 duration:(double)arg2;

- (bool)mtContainsDate:(id)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/Sleep.framework/Sleep

// NSDateInterval (HKSPSleep)

- (id)hkspDescription;
- (bool)hksp_containsDate:(id)arg1;
- (bool)hksp_containsDate:(id)arg1 searchOptions:(unsigned long long)arg2;
- (bool)hksp_overlapsInterval:(id)arg1;
- (bool)hksp_overlapsInterval:(id)arg1 searchOptions:(unsigned long long)arg2;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

// NSDateInterval (UICalendarAdditions)

- (bool)_ui_containsDay:(id)arg1;
- (bool)_ui_containsMonth:(id)arg1;
- (id)_ui_dateInRangeForDate:(id)arg1;

@end
