/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHFace : PHObject <PFPhotosFaceRepresentation, PNFaceProtocol> {
    id  _adjustmentVersion;
    unsigned short  _ageType;
    double  _blurScore;
    double  _bodyCenterX;
    double  _bodyCenterY;
    double  _bodyHeight;
    double  _bodyWidth;
    double  _centerX;
    double  _centerY;
    long long  _clusterSequenceNumber;
    short  _confirmedFaceCropGenerationState;
    short  _detectionType;
    double  _duration;
    unsigned short  _ethnicityType;
    unsigned short  _eyeMakeupType;
    unsigned short  _eyesState;
    long long  _faceAlgorithmVersion;
    unsigned short  _faceExpressionType;
    unsigned short  _facialHairType;
    float  _gazeAngle;
    double  _gazeCenterX;
    double  _gazeCenterY;
    float  _gazeConfidence;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _gazeRect;
    unsigned short  _gazeType;
    unsigned short  _glassesType;
    unsigned short  _hairColorType;
    unsigned short  _hairType;
    bool  _hasFaceMask;
    bool  _hasSmile;
    unsigned short  _headgearType;
    bool  _hidden;
    bool  _inTrash;
    bool  _isInVIPModel;
    bool  _leftEyeClosed;
    unsigned short  _lipMakeupType;
    bool  _manual;
    long long  _nameSource;
    NSString * _personUUID;
    unsigned short  _poseType;
    double  _poseYaw;
    double  _quality;
    long long  _qualityMeasure;
    bool  _rightEyeClosed;
    double  _roll;
    unsigned short  _sexType;
    double  _size;
    unsigned short  _skintoneType;
    unsigned short  _smileType;
    long long  _sourceHeight;
    long long  _sourceWidth;
    double  _startTime;
    int  _trainingType;
    long long  _vuObservationID;
}

@property (nonatomic, readonly, copy) id adjustmentVersion;
@property (nonatomic, readonly) unsigned short ageType;
@property (nonatomic, readonly) double blurScore;
@property (nonatomic, readonly) double bodyCenterX;
@property (nonatomic, readonly) double bodyCenterY;
@property (nonatomic, readonly) double bodyHeight;
@property (nonatomic, readonly) double bodyWidth;
@property (nonatomic, readonly) double centerX;
@property (nonatomic, readonly) double centerY;
@property (nonatomic, readonly) long long clusterSequenceNumber;
@property (getter=isConfirmedFaceCropGenerationPending, nonatomic, readonly) bool confirmedFaceCropGenerationPending;
@property (nonatomic, readonly) short confirmedFaceCropGenerationState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) short detectionType;
@property (nonatomic, readonly) double duration;
@property (nonatomic, readonly) unsigned short ethnicityType;
@property (nonatomic, readonly) unsigned short eyeMakeupType;
@property (nonatomic, readonly) unsigned short eyesState;
@property (nonatomic) long long faceAlgorithmVersion;
@property (nonatomic, readonly) unsigned short faceExpressionType;
@property (nonatomic, readonly) NSData *faceprintData;
@property (nonatomic, readonly) unsigned short facialHairType;
@property (nonatomic, readonly) float gazeAngle;
@property (nonatomic, readonly) double gazeCenterX;
@property (nonatomic, readonly) double gazeCenterY;
@property (nonatomic, readonly) float gazeConfidence;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } gazeRect;
@property (nonatomic, readonly) unsigned short gazeType;
@property (nonatomic, readonly) unsigned short glassesType;
@property (nonatomic, readonly) unsigned short hairColorType;
@property (nonatomic, readonly) unsigned short hairType;
@property (nonatomic, readonly) bool hasFaceMask;
@property (nonatomic, readonly) bool hasSmile;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned short headgearType;
@property (getter=isHidden, nonatomic, readonly) bool hidden;
@property (getter=isInTrash, nonatomic, readonly) bool inTrash;
@property (nonatomic, readonly) bool isInVIPModel;
@property (getter=isLeftEyeClosed, nonatomic, readonly) bool leftEyeClosed;
@property (nonatomic, readonly) unsigned short lipMakeupType;
@property (nonatomic, readonly) NSString *localIdentifier;
@property (nonatomic, readonly) bool manual;
@property (nonatomic, readonly) long long nameSource;
@property (nonatomic, readonly) NSString *personLocalIdentifier;
@property (nonatomic, readonly) NSString *personUUID;
@property (nonatomic, readonly) unsigned short poseType;
@property (nonatomic, readonly) double poseYaw;
@property (nonatomic) double poseYaw;
@property (nonatomic, readonly) double quality;
@property (nonatomic) long long qualityMeasure;
@property (nonatomic, readonly) long long qualityMeasure;
@property (getter=isRightEyeClosed, nonatomic, readonly) bool rightEyeClosed;
@property (nonatomic, readonly) double roll;
@property (nonatomic, readonly) unsigned short sexType;
@property (nonatomic, readonly) double size;
@property (nonatomic, readonly) unsigned short skintoneType;
@property (nonatomic, readonly) unsigned short smileType;
@property (nonatomic, readonly) long long sourceHeight;
@property (nonatomic, readonly) long long sourceWidth;
@property (nonatomic, readonly) double startTime;
@property (readonly) Class superclass;
@property (getter=isTorsoOnly, nonatomic, readonly) bool torsoOnly;
@property (nonatomic, readonly) int trainingType;
@property (nonatomic, readonly) long long vuObservationID;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/Photos.framework/Photos

+ (id)_composePropertiesToFetchWithHint:(unsigned long long)arg1;
+ (id)analyticsPropertiesToFetch;
+ (id)corePropertiesToFetch;
+ (id)croppingPropertiesToFetch;
+ (id)entityKeyMap;
+ (long long)faceFetchTypeForOptions:(id)arg1;
+ (id)fetchFacesForFaceCrop:(id)arg1 options:(id)arg2;
+ (id)fetchFacesForPerson:(id)arg1 options:(id)arg2;
+ (id)fetchFacesGroupedByAssetLocalIdentifierForAssets:(id)arg1 options:(id)arg2;
+ (id)fetchFacesInAsset:(id)arg1 options:(id)arg2;
+ (id)fetchFacesInAssets:(id)arg1 options:(id)arg2;
+ (id)fetchFacesInFaceGroup:(id)arg1 options:(id)arg2;
+ (id)fetchFacesOnAssetWithFace:(id)arg1 options:(id)arg2;
+ (id)fetchFacesWithLocalIdentifiers:(id)arg1 options:(id)arg2;
+ (id)fetchFacesWithOptions:(id)arg1;
+ (id)fetchFacesWithVuObservationIDs:(id)arg1 options:(id)arg2;
+ (id)fetchKeyFaceByPersonLocalIdentifierForPersons:(id)arg1 options:(id)arg2;
+ (id)fetchKeyFaceForFaceGroup:(id)arg1 options:(id)arg2;
+ (id)fetchKeyFaceForPerson:(id)arg1 options:(id)arg2;
+ (id)fetchRejectedFacesForPerson:(id)arg1 options:(id)arg2;
+ (id)fetchSingletonFacesWithOptions:(id)arg1;
+ (id)fetchSuggestedFacesForPerson:(id)arg1 options:(id)arg2;
+ (id)fetchType;
+ (id)genderAgePropertiesToFetch;
+ (id)identifierCode;
+ (id)managedEntityName;
+ (bool)managedObjectSupportsBodyDetection;
+ (bool)managedObjectSupportsDetectionType;
+ (bool)managedObjectSupportsFaceState;
+ (id)personBuilderPropertiesToFetch;
+ (id)propertiesToFetchWithHint:(unsigned long long)arg1;
+ (unsigned long long)propertyFetchHintsForPropertySets:(id)arg1;
+ (id)propertySetAccessorsByPropertySet;
+ (Class)propertySetClassForPropertySet:(id)arg1;
+ (id)propertySetsForPropertyFetchHints:(unsigned long long)arg1;
+ (id)transformValueExpression:(id)arg1 forKeyPath:(id)arg2;

- (void).cxx_destruct;
- (id)_createPropertyObjectOfClass:(Class)arg1;
- (id)_createPropertyObjectOfClass:(Class)arg1 preFetchedProperties:(id)arg2;
- (id)adjustmentVersion;
- (unsigned short)ageType;
- (double)blurScore;
- (double)bodyCenterX;
- (double)bodyCenterY;
- (double)bodyHeight;
- (double)bodyWidth;
- (double)centerX;
- (double)centerY;
- (Class)changeRequestClass;
- (long long)clusterSequenceNumber;
- (short)confirmedFaceCropGenerationState;
- (short)detectionType;
- (double)duration;
- (unsigned short)ethnicityType;
- (unsigned short)eyeMakeupType;
- (unsigned short)eyesState;
- (long long)faceAlgorithmVersion;
- (id)faceClusteringProperties;
- (unsigned short)faceExpressionType;
- (unsigned short)facialHairType;
- (float)gazeAngle;
- (double)gazeCenterX;
- (double)gazeCenterY;
- (float)gazeConfidence;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })gazeRect;
- (unsigned short)gazeType;
- (unsigned short)glassesType;
- (unsigned short)hairColorType;
- (unsigned short)hairType;
- (bool)hasFaceMask;
- (bool)hasSmile;
- (unsigned short)headgearType;
- (id)initWithFetchDictionary:(id)arg1 propertyHint:(unsigned long long)arg2 photoLibrary:(id)arg3;
- (bool)isConfirmedFaceCropGenerationPending;
- (bool)isHidden;
- (bool)isInTrash;
- (bool)isInVIPModel;
- (bool)isLeftEyeClosed;
- (bool)isRightEyeClosed;
- (bool)isTorsoOnly;
- (unsigned short)lipMakeupType;
- (bool)manual;
- (long long)nameSource;
- (id)personLocalIdentifier;
- (id)personUUID;
- (unsigned short)poseType;
- (double)poseYaw;
- (double)quality;
- (long long)qualityMeasure;
- (double)roll;
- (void)setFaceAlgorithmVersion:(long long)arg1;
- (void)setPoseYaw:(double)arg1;
- (unsigned short)sexType;
- (double)size;
- (unsigned short)skintoneType;
- (unsigned short)smileType;
- (long long)sourceHeight;
- (long long)sourceWidth;
- (double)startTime;
- (int)trainingType;
- (long long)vuObservationID;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/MediaAnalysis.framework/MediaAnalysis

// PHFace (MediaAnalysis)

- (bool)vcp_hasBody;
- (bool)vcp_hasFace;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })vcp_normalizedBodyBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })vcp_normalizedFaceBounds;

// PHFace (PFPhotosFaceRepresentation)

- (double)photosFaceRepresentationBlurScore;
- (double)photosFaceRepresentationCenterX;
- (double)photosFaceRepresentationCenterY;
- (long long)photosFaceRepresentationClusterSequenceNumber;
- (bool)photosFaceRepresentationHasSmile;
- (bool)photosFaceRepresentationIsLeftEyeClosed;
- (bool)photosFaceRepresentationIsRightEyeClosed;
- (id)photosFaceRepresentationLocalIdentifier;
- (double)photosFaceRepresentationQuality;
- (long long)photosFaceRepresentationQualityMeasure;
- (double)photosFaceRepresentationRoll;
- (double)photosFaceRepresentationSize;
- (long long)photosFaceRepresentationSourceHeight;
- (long long)photosFaceRepresentationSourceWidth;

// PHFace (PNFaceProtocol)

- (id)faceprintData;
- (void)setQualityMeasure:(long long)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/PhotosIntelligence.framework/PhotosIntelligence

// PHFace (PNFaceProtocol)

- (id)faceprintData;
- (void)setQualityMeasure:(long long)arg1;

@end
