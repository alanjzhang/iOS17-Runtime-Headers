/* Generated by RuntimeBrowser.
 */

@protocol MTLDeserializerObjectDelegate <NSObject>

@required

- (void)deleteArgumentBufferLayoutForReference:(unsigned int)arg1;
- (void)deleteArgumentEncoderForReference:(unsigned int)arg1;
- (void)deleteBufferForReference:(unsigned int)arg1;
- (void)deleteCommandQueueForReference:(unsigned int)arg1;
- (void)deleteComputePipelineStateForReference:(unsigned int)arg1;
- (void)deleteDepthStencilStateForReference:(unsigned int)arg1;
- (void)deleteEventForReference:(unsigned int)arg1;
- (void)deleteFenceForReference:(unsigned int)arg1;
- (void)deleteFunctionForReference:(unsigned int)arg1;
- (void)deleteHeapForReference:(unsigned int)arg1;
- (void)deleteRenderPipelineStateForReference:(unsigned int)arg1;
- (void)deleteResourceForReference:(unsigned int)arg1;
- (void)deleteSamplerStateForReference:(unsigned int)arg1;
- (void)deleteTextureForReference:(unsigned int)arg1;
- (_MTLIndirectArgumentBufferLayout *)getArgumentBufferLayoutForReference:(unsigned int)arg1;
- (<MTLArgumentEncoder> *)getArgumentEncoderForReference:(unsigned int)arg1;
- (<MTLBuffer> *)getBufferForReference:(unsigned int)arg1;
- (<MTLCommandQueue> *)getCommandQueueForReference:(unsigned int)arg1;
- (<MTLComputePipelineState> *)getComputePipelineStateForReference:(unsigned int)arg1;
- (<MTLDepthStencilState> *)getDepthStencilStateForReference:(unsigned int)arg1;
- (<MTLEvent> *)getEventForReference:(unsigned int)arg1;
- (<MTLFence> *)getFenceForReference:(unsigned int)arg1;
- (<MTLFunction> *)getFunctionForReference:(unsigned int)arg1;
- (<MTLHeap> *)getHeapForReference:(unsigned int)arg1;
- (<MTLRenderPipelineState> *)getRenderPipelineStateForReference:(unsigned int)arg1;
- (<MTLResource> *)getResourceForReference:(unsigned int)arg1;
- (<MTLSamplerState> *)getSamplerStateForReference:(unsigned int)arg1;
- (<MTLTexture> *)getTextureForReference:(unsigned int)arg1;
- (unsigned int)registerArgumentBufferLayoutForReference:(unsigned int)arg1 argumentBufferLayout:(_MTLIndirectArgumentBufferLayout *)arg2;
- (unsigned int)registerArgumentEncoderForReference:(unsigned int)arg1 argumentEncoder:(id <MTLArgumentEncoder>)arg2;
- (unsigned int)registerBufferForReference:(unsigned int)arg1 buffer:(id <MTLBuffer>)arg2;
- (unsigned int)registerCommandQueueForReference:(unsigned int)arg1 commandQueue:(id <MTLCommandQueue>)arg2;
- (unsigned int)registerComputePipelineStateForReference:(unsigned int)arg1 computePipeline:(id <MTLComputePipelineState>)arg2;
- (unsigned int)registerDepthStencilStateForReference:(unsigned int)arg1 depthStencil:(id <MTLDepthStencilState>)arg2;
- (unsigned int)registerEventForReference:(unsigned int)arg1 event:(id <MTLEvent>)arg2;
- (unsigned int)registerFenceForReference:(unsigned int)arg1 fence:(id <MTLFence>)arg2;
- (unsigned int)registerFunctionForReference:(unsigned int)arg1 function:(id <MTLFunction>)arg2;
- (unsigned int)registerHeapForReference:(unsigned int)arg1 heap:(id <MTLHeap>)arg2;
- (unsigned int)registerRenderPipelineStateForReference:(unsigned int)arg1 renderPipeline:(id <MTLRenderPipelineState>)arg2;
- (unsigned int)registerSamplerStateForReference:(unsigned int)arg1 sampler:(id <MTLSamplerState>)arg2;
- (unsigned int)registerTextureForReference:(unsigned int)arg1 texture:(id <MTLTexture>)arg2;

@end
