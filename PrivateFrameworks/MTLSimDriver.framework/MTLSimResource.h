/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/MTLSimDriver.framework/MTLSimDriver
 */

@interface MTLSimResource : NSObject <MTLResourceSPI, MTLSerializerResource> {
    unsigned long long  _cpuCacheMode;
    MTLSimDevice * _device;
    unsigned long long  _hazardTrackingMode;
    MTLSimHeap * _heap;
    unsigned long long  _heapOffset;
    bool  _isAliasable;
    NSString * _label;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _labelLock;
    unsigned long long  _options;
    unsigned long long  _purgeableState;
    unsigned int  _resourceRef;
    unsigned long long  _storageMode;
    unsigned long long  allocatedSize;
    unsigned long long  allocationID;
    unsigned long long  protectionOptions;
    int  responsibleProcess;
}

@property (readonly) unsigned long long allocatedSize;
@property (readonly) unsigned long long allocationID;
@property (readonly) unsigned long long cpuCacheMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) <MTLDevice> *device;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hazardTrackingMode;
@property (readonly) <MTLHeap> *heap;
@property (readonly) unsigned long long heapOffset;
@property (copy) NSString *label;
@property (readonly) unsigned long long protectionOptions;
@property (readonly) unsigned long long resourceOptions;
@property int responsibleProcess;
@property (readonly) unsigned int serializerResourceRef;
@property (readonly) unsigned long long storageMode;
@property (readonly) Class superclass;
@property (readonly) unsigned long long unfilteredResourceOptions;

- (unsigned long long)allocatedSize;
- (unsigned long long)allocationID;
- (unsigned long long)cpuCacheMode;
- (void)dealloc;
- (id)device;
- (bool)doesAliasAllResources:(const id*)arg1 count:(unsigned long long)arg2;
- (bool)doesAliasAnyResources:(const id*)arg1 count:(unsigned long long)arg2;
- (bool)doesAliasResource:(id)arg1;
- (bool)doesAliasResources:(const id*)arg1 count:(unsigned long long)arg2 all:(bool)arg3;
- (unsigned long long)hazardTrackingMode;
- (id)heap;
- (unsigned long long)heapOffset;
- (id)initWithResourceRef:(unsigned int)arg1 options:(unsigned long long)arg2 device:(id)arg3 heap:(id)arg4;
- (bool)isAliasable;
- (bool)isComplete;
- (bool)isPurgeable;
- (id)label;
- (void)makeAliasable;
- (unsigned long long)protectionOptions;
- (unsigned long long)resourceOptions;
- (int)responsibleProcess;
- (id)retainedLabel;
- (unsigned int)serializerResourceRef;
- (void)setHeapOffset:(unsigned long long)arg1;
- (void)setLabel:(id)arg1;
- (unsigned long long)setPurgeableState:(unsigned long long)arg1;
- (void)setResponsibleProcess:(int)arg1;
- (unsigned long long)storageMode;
- (unsigned long long)unfilteredResourceOptions;
- (void)waitUntilComplete;

@end
