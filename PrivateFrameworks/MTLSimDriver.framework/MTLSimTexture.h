/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/MTLSimDriver.framework/MTLSimDriver
 */

@interface MTLSimTexture : MTLSimResource <MTLSerializerResource, MTLSerializerTexture, MTLTextureImplementation, MTLTextureSPI> {
    bool  _allowGPUOptimizedContents;
    unsigned long long  _arrayLength;
    MTLSimBuffer * _backingBuffer;
    unsigned long long  _backingBufferSize;
    MTLSimBuffer * _buffer;
    unsigned long long  _bufferBytesPerRow;
    unsigned long long  _bufferOffset;
    unsigned long long  _decompressedPixelFormat;
    <MTLTexture> * _decompressedTextureView;
    unsigned long long  _depth;
    unsigned long long  _firstMipmapInTail;
    bool  _framebufferOnly;
    unsigned long long  _height;
    struct __IOSurface { } * _iosurface;
    unsigned long long  _iosurfacePlane;
    bool  _isDrawable;
    bool  _isInternalTextureView;
    unsigned long long  _mipmapLevelCount;
    unsigned long long  _numFaces;
    unsigned long long  _parentRelativeLevel;
    unsigned long long  _parentRelativeSlice;
    MTLSimTexture * _parentTexture;
    unsigned long long  _pixelFormat;
    unsigned long long  _sampleCount;
    bool  _shareable;
    unsigned int  _swizzle;
    unsigned long long  _tailSizeInBytes;
    unsigned long long  _textureType;
    unsigned long long  _uniqueIdentifier;
    unsigned long long  _usage;
    unsigned long long  _width;
    unsigned long long  iosurfacePlane;
    unsigned long long  parentRelativeSlice;
    <MTLResource> * rootResource;
    unsigned long long  rotation;
}

@property (readonly) unsigned long long allocatedSize;
@property (readonly) unsigned long long allocationID;
@property (readonly) bool allowGPUOptimizedContents;
@property (readonly) unsigned long long arrayLength;
@property (readonly) <MTLBuffer> *backingBuffer;
@property (readonly) <MTLBuffer> *buffer;
@property (readonly) unsigned long long bufferBytesPerRow;
@property (readonly) unsigned long long bufferOffset;
@property (nonatomic, readonly) unsigned long long colorSpaceConversionMatrix;
@property (readonly) long long compressionFeedback;
@property (nonatomic, readonly) unsigned long long compressionFootprint;
@property (readonly) long long compressionType;
@property (readonly) unsigned long long cpuCacheMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long decompressedPixelFormat;
@property (readonly) <MTLTexture> *decompressedTextureView;
@property (readonly) unsigned long long depth;
@property (readonly, copy) NSString *description;
@property (readonly) <MTLDevice> *device;
@property (readonly) unsigned long long firstMipmapInTail;
@property (getter=isFramebufferOnly, readonly) bool framebufferOnly;
@property (nonatomic, readonly) unsigned long long gpuAddress;
@property (readonly) unsigned long long gpuHandle;
@property (readonly) struct MTLResourceID { unsigned long long x1; } gpuResourceID;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hazardTrackingMode;
@property (readonly) <MTLHeap> *heap;
@property (readonly) unsigned long long heapOffset;
@property (readonly) unsigned long long height;
@property (readonly) struct __IOSurface { }*iosurface;
@property (readonly) unsigned long long iosurfacePlane;
@property (readonly) bool isCompressed;
@property (readonly) bool isDrawable;
@property (readonly) bool isSparse;
@property (copy) NSString *label;
@property (readonly) unsigned long long mipmapLevelCount;
@property (readonly) unsigned long long numFaces;
@property (readonly) unsigned long long parentRelativeLevel;
@property (readonly) unsigned long long parentRelativeSlice;
@property (setter=_simSetParentTexture:, retain) <MTLTexture> *parentTexture;
@property (readonly) unsigned long long pixelFormat;
@property (readonly) unsigned long long protectionOptions;
@property (nonatomic, readonly) unsigned long long resourceIndex;
@property (readonly) unsigned long long resourceOptions;
@property int responsibleProcess;
@property (readonly) <MTLResource> *rootResource;
@property (readonly) unsigned long long rotation;
@property (readonly) unsigned long long sampleCount;
@property (readonly) unsigned int serializerResourceRef;
@property (getter=isShareable, setter=_simSetShareable:) bool shareable;
@property (readonly) unsigned long long sparseSurfaceDefaultValue;
@property (readonly) unsigned long long storageMode;
@property (readonly) Class superclass;
@property (nonatomic, readonly) struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; } swizzle;
@property (readonly) unsigned int swizzleKey;
@property (readonly) unsigned long long tailSizeInBytes;
@property (readonly) unsigned int textureRef;
@property (readonly) unsigned long long textureType;
@property (readonly) unsigned long long unfilteredResourceOptions;
@property (readonly) unsigned long long uniqueIdentifier;
@property (readonly) unsigned long long usage;
@property (readonly) unsigned long long width;

+ (void)decompress:(const char *)arg1 expandedTex:(char *)arg2 srcFormat:(unsigned long long)arg3 destFormat:(unsigned long long)arg4 width:(unsigned long long)arg5 height:(unsigned long long)arg6 destRowBytes:(unsigned long long)arg7 srcRowBytes:(unsigned long long)arg8;
+ (unsigned long long)getDecompressedFormat:(unsigned long long)arg1;

- (void)_simSetParentTexture:(id)arg1;
- (void)_simSetShareable:(bool)arg1;
- (void)_swapDecompressedPropertiesWith:(id)arg1;
- (bool)allowGPUOptimizedContents;
- (unsigned long long)arrayLength;
- (id)backingBuffer;
- (id)buffer;
- (unsigned long long)bufferBytesPerRow;
- (unsigned long long)bufferOffset;
- (unsigned long long)calculateOffsetToRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1 level:(unsigned long long)arg2 slice:(unsigned long long)arg3;
- (unsigned long long)colorSpaceConversionMatrix;
- (long long)compressionFeedback;
- (unsigned long long)compressionFootprint;
- (long long)compressionType;
- (void)dealloc;
- (void)decompressPlaceholder:(const char *)arg1 expandedTex:(char *)arg2 srcFormat:(unsigned long long)arg3 destFormat:(unsigned long long)arg4 width:(unsigned long long)arg5 height:(unsigned long long)arg6 destRowBytes:(unsigned long long)arg7 srcRowBytes:(unsigned long long)arg8;
- (unsigned long long)decompressedPixelFormat;
- (id)decompressedTextureView;
- (unsigned long long)depth;
- (id)description;
- (void)didModifyData;
- (unsigned long long)firstMipmapInTail;
- (id)formattedDescription:(unsigned long long)arg1;
- (void)getBytes:(void*)arg1 bytesPerRow:(unsigned long long)arg2 bytesPerImage:(unsigned long long)arg3 fromRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg4 mipmapLevel:(unsigned long long)arg5 slice:(unsigned long long)arg6;
- (void)getBytes:(void*)arg1 bytesPerRow:(unsigned long long)arg2 fromRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg3 mipmapLevel:(unsigned long long)arg4;
- (unsigned long long)gpuHandle;
- (struct MTLResourceID { unsigned long long x1; })gpuResourceID;
- (unsigned long long)hazardTrackingMode;
- (unsigned long long)height;
- (id)initWithBuffer:(id)arg1 offset:(unsigned long long)arg2 bytesPerRow:(unsigned long long)arg3 descriptor:(id)arg4 textureRef:(unsigned int)arg5;
- (id)initWithDescriptor:(id)arg1 decompressedPixelFormat:(unsigned long long)arg2 iosurface:(struct __IOSurface { }*)arg3 plane:(unsigned long long)arg4 textureRef:(unsigned int)arg5 heap:(id)arg6 device:(id)arg7;
- (id)initWithDescriptor:(id)arg1 decompressedPixelFormat:(unsigned long long)arg2 iosurface:(struct __IOSurface { }*)arg3 plane:(unsigned long long)arg4 textureRef:(unsigned int)arg5 heap:(id)arg6 device:(id)arg7 shareable:(bool)arg8;
- (id)initWithTexture:(id)arg1 device:(id)arg2;
- (id)initWithTexture:(id)arg1 pixelFormat:(unsigned long long)arg2 decompressedPixelFormat:(unsigned long long)arg3 textureRef:(unsigned int)arg4 isInternalTextureView:(bool)arg5;
- (id)initWithTexture:(id)arg1 pixelFormat:(unsigned long long)arg2 decompressedPixelFormat:(unsigned long long)arg3 textureType:(unsigned long long)arg4 levels:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg5 slices:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6 swizzle:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; })arg7 textureRef:(unsigned int)arg8 isInternalTextureView:(bool)arg9;
- (id)initWithTextureInternal:(id)arg1 pixelFormat:(unsigned long long)arg2 decompressedPixelFormat:(unsigned long long)arg3 textureType:(unsigned long long)arg4 levels:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg5 slices:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6 swizzle:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; })arg7 compressedView:(bool)arg8 textureRef:(unsigned int)arg9 isInternalTextureView:(bool)arg10;
- (struct __IOSurface { }*)iosurface;
- (unsigned long long)iosurfacePlane;
- (bool)isCompressed;
- (bool)isDrawable;
- (bool)isFramebufferOnly;
- (bool)isShareable;
- (bool)isSparse;
- (unsigned long long)mipmapLevelCount;
- (id)newRemoteTextureViewForDevice:(id)arg1;
- (id)newTextureViewWithPixelFormat:(unsigned long long)arg1;
- (id)newTextureViewWithPixelFormat:(unsigned long long)arg1 textureType:(unsigned long long)arg2 levels:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 slices:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
- (id)newTextureViewWithPixelFormat:(unsigned long long)arg1 textureType:(unsigned long long)arg2 levels:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 slices:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 swizzle:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; })arg5;
- (id)newTextureViewWithPixelFormatInternal:(unsigned long long)arg1 isInternalTextureView:(bool)arg2;
- (unsigned long long)numFaces;
- (unsigned long long)parentRelativeLevel;
- (unsigned long long)parentRelativeSlice;
- (id)parentTexture;
- (unsigned long long)pixelFormat;
- (void)replaceRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1 mipmapLevel:(unsigned long long)arg2 slice:(unsigned long long)arg3 withBytes:(const void*)arg4 bytesPerRow:(unsigned long long)arg5 bytesPerImage:(unsigned long long)arg6;
- (void)replaceRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1 mipmapLevel:(unsigned long long)arg2 withBytes:(const void*)arg3 bytesPerRow:(unsigned long long)arg4;
- (id)rootResource;
- (unsigned long long)rotation;
- (unsigned long long)sampleCount;
- (unsigned long long)setPurgeableState:(unsigned long long)arg1;
- (struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; })swizzle;
- (unsigned int)swizzleKey;
- (unsigned long long)tailSizeInBytes;
- (unsigned int)textureRef;
- (unsigned long long)textureType;
- (unsigned long long)uniqueIdentifier;
- (unsigned long long)usage;
- (unsigned long long)width;

@end
