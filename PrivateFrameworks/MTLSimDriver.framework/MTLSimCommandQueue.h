/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/MTLSimDriver.framework/MTLSimDriver
 */

@interface MTLSimCommandQueue : _MTLCommandQueue <MTLCommandQueueSPI> {
    unsigned int  _commandQueueRef;
    <MTLDevice> * _device;
    MTLSimBufferStoragePool * bufferPool;
    unsigned long long  bufferStorageByteCount;
    MTLSimCommandStoragePool * commandPool;
}

@property (getter=isStatEnabled, nonatomic) bool StatEnabled;
@property (getter=getStatLocations, nonatomic) unsigned long long StatLocations;
@property (getter=getStatOptions, nonatomic) unsigned long long StatOptions;
@property int backgroundTrackingPID;
@property (readonly) unsigned long long bufferStorageByteCount;
@property (readonly) NSObject<OS_dispatch_queue> *commitQueue;
@property (readonly) bool commitSynchronously;
@property (readonly) NSObject<OS_dispatch_queue> *completionQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) <MTLDevice> *device;
@property (readonly) bool disableCrossQueueHazardTracking;
@property bool executionEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) bool isOpenGLQueue;
@property (copy) NSString *label;
@property (readonly) unsigned long long maxCommandBufferCount;
@property (getter=isProfilingEnabled) bool profilingEnabled;
@property (readonly) unsigned long long qosLevel;
@property bool skipRender;
@property (readonly) Class superclass;

- (id)availableCounters;
- (unsigned long long)bufferStorageByteCount;
- (id)commandBuffer;
- (id)commandBufferWithDescriptor:(id)arg1;
- (id)commandBufferWithUnretainedReferences;
- (id)counterInfo;
- (void)dealloc;
- (id)device;
- (unsigned long long)getBackgroundGPUPriority;
- (struct BufferStorageEntry { id x1; unsigned long long x2; struct BufferStorageEntry {} *x3; }*)getBufferStorage;
- (struct StorageEntry { unsigned long long x1; void *x2; id x3; struct StorageEntry {} *x4; }*)getCommandBufferStorage;
- (unsigned long long)getGPUPriority;
- (id)getRequestedCounters;
- (id)initWithDevice:(id)arg1 commandQueueRef:(unsigned int)arg2 descriptor:(id)arg3;
- (id)initWithDevice:(id)arg1 maxCommandBufferCount:(unsigned long long)arg2;
- (int)requestCounters:(id)arg1;
- (void)returnBufferStorage:(struct BufferStorageEntry { id x1; unsigned long long x2; struct BufferStorageEntry {} *x3; }*)arg1;
- (void)returnCommandBufferStorage:(struct StorageEntry { unsigned long long x1; void *x2; id x3; struct StorageEntry {} *x4; }*)arg1;
- (bool)setBackgroundGPUPriority:(unsigned long long)arg1;
- (bool)setBackgroundGPUPriority:(unsigned long long)arg1 offset:(unsigned short)arg2;
- (void)setCompletionQueue:(id)arg1;
- (bool)setGPUPriority:(unsigned long long)arg1;
- (bool)setGPUPriority:(unsigned long long)arg1 offset:(unsigned short)arg2;
- (void)submitCommandBuffers:(const id*)arg1 count:(unsigned long long)arg2;

@end
