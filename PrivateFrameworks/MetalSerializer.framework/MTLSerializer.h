/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/MetalSerializer.framework/MetalSerializer
 */

@interface MTLSerializer : NSObject {
    void * _commandBufferIndex;
    bool  _deserializerGeneratesResourceRefs;
    <MTLDevice> * _device;
    void * _eventNotifications;
    struct MTLSerializerFeatures { 
        bool supportsGenerateResourceRefs; 
        bool supportsReflectionSerializationVersion; 
        bool supportsSharedTextures; 
        bool supportsScripts; 
        bool supportsOpenGL; 
        bool supportsIOSurfaceTextureWithRotation; 
        bool supportsCorrectBaseVertex; 
        bool supportsCorrectSwizzleChannels; 
    }  _features;
    <MTLSerializerObjectRefAllocator> * _objectIndex;
    unsigned long long  _reflectionSerializationVersion;
    NSObject<OS_dispatch_queue> * _serialQueue;
}

@property (nonatomic, readonly) bool deserializerGeneratesResourceRefs;
@property unsigned long long reflectionSerializationVersion;
@property (readonly) bool supportsCorrectBaseVertex;
@property (readonly) bool supportsOpenGL;

- (void)argumentBufferLayoutConstantAtIndex:(unsigned long long)arg1 layoutRef:(unsigned int)arg2 allocator:(id)arg3;
- (void)argumentEncoderConstantAtIndex:(unsigned long long)arg1 encoderRef:(unsigned int)arg2 bufferRef:(unsigned int)arg3 allocator:(id)arg4;
- (void)argumentEncoderSetArgumentBuffer:(id)arg1 offset:(unsigned long long)arg2 encoderRef:(unsigned int)arg3 allocator:(id)arg4;
- (void)argumentEncoderSetBuffers:(const id*)arg1 offsets:(const unsigned long long*)arg2 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 encoderRef:(unsigned int)arg4 allocator:(id)arg5;
- (void)argumentEncoderSetSamplerStates:(const id*)arg1 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 encoderRef:(unsigned int)arg3 allocator:(id)arg4;
- (void)argumentEncoderSetTextures:(const id*)arg1 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 encoderRef:(unsigned int)arg3 allocator:(id)arg4;
- (void)bufferGPUAddress:(id)arg1 allocator:(id)arg2;
- (unsigned int)computePipelineWithReplyData:(const void*)arg1 replyDataSize:(unsigned long long)arg2 pipelineInfo:(struct { unsigned short x1; unsigned int x2; unsigned long long x3; }*)arg3 errorMessage:(id*)arg4;
- (void)copyImageBytesFromSource:(char *)arg1 toDestination:(char *)arg2 dataSize:(unsigned long long)arg3 region:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg4 bytesPerRow:(unsigned long long)arg5 bytesPerImage:(unsigned long long)arg6 mipmapLevel:(unsigned long long)arg7 slice:(unsigned long long)arg8 texture:(id)arg9;
- (unsigned long long)dataSizeForRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1 pixelFormat:(unsigned long long)arg2 bytesPerRow:(unsigned long long)arg3 bytesPerImage:(unsigned long long)arg4;
- (void)dealloc;
- (void)deleteArgumentBufferLayoutRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteArgumentEncoderRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteBufferRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteCommandQueueRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteComputePipelineStateRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteDepthStencilStateRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteEventRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteFenceRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteFunctionRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteHeapRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteRenderPipelineStateRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteSamplerStateRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)deleteTextureRef:(unsigned int)arg1 allocator:(id)arg2;
- (bool)deserializerGeneratesResourceRefs;
- (id)didModifyRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 buffer:(id)arg2;
- (void)doesAliasResources:(const id*)arg1 count:(unsigned long long)arg2 all:(bool)arg3 resource:(id)arg4 allocator:(id)arg5;
- (id)getBytesFromRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1 bytesPerRow:(unsigned long long)arg2 bytesPerImage:(unsigned long long)arg3 mipmapLevel:(unsigned long long)arg4 slice:(unsigned long long)arg5 texture:(id)arg6 outDataSize:(unsigned long long*)arg7;
- (void)getComputeInfoWithAllocator:(id)arg1;
- (unsigned int)handleNewObjectReplyData:(const void*)arg1 replyDataSize:(unsigned long long)arg2;
- (unsigned int)handleNewObjectReplyData:(const void*)arg1 replyDataSize:(unsigned long long)arg2 errorMessage:(id*)arg3;
- (void)heapBufferSizeAndAlignWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 allocator:(id)arg3;
- (void)heapTextureSizeAndAlignWithDescriptor:(id)arg1 allocator:(id)arg2;
- (id)initWithDevice:(id)arg1;
- (id)initWithDevice:(id)arg1 deserializerGeneratesResourceRefs:(bool)arg2;
- (id)initWithDevice:(id)arg1 deserializerGeneratesResourceRefs:(bool)arg2 deserializerVersion:(unsigned int)arg3;
- (id)initWithDevice:(id)arg1 objectRefAllocator:(id)arg2 deserializerGeneratesResourceRefs:(bool)arg3;
- (id)initWithDevice:(id)arg1 objectRefAllocator:(id)arg2 deserializerGeneratesResourceRefs:(bool)arg3 deserializerVersion:(unsigned int)arg4;
- (void)makeAliasableResource:(id)arg1 allocator:(id)arg2;
- (void)maxAvailableSizeWithAlignment:(unsigned long long)arg1 heap:(id)arg2 allocator:(id)arg3;
- (void)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1 allocator:(id)arg2;
- (void)minimumTextureBufferAlignmentForPixelFormat:(unsigned long long)arg1 allocator:(id)arg2;
- (unsigned int)newArgumentBufferLayoutRef;
- (unsigned int)newArgumentBufferLayoutWithStructType:(id)arg1 allocator:(id)arg2;
- (unsigned int)newArgumentEncoderRef;
- (unsigned int)newArgumentEncoderWithLayout:(unsigned int)arg1 allocator:(id)arg2;
- (unsigned int)newBufferRef;
- (unsigned int)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 heap:(id)arg3 offset:(unsigned long long)arg4 useOffset:(bool)arg5 allocator:(id)arg6;
- (unsigned int)newCommandBufferRef;
- (unsigned int)newCommandQueueRef;
- (unsigned int)newComputePipelineStateRef;
- (unsigned int)newComputePipelineStateWithSerializedDescriptor:(id)arg1 allocator:(id)arg2;
- (unsigned int)newDepthStencilStateRef;
- (id)newDepthStencilStateWithDescriptor:(id)arg1;
- (unsigned int)newDepthStencilStateWithDescriptor:(id)arg1 allocator:(id)arg2;
- (unsigned int)newEventRef;
- (unsigned int)newFenceRef;
- (unsigned int)newFenceWithAllocator:(id)arg1;
- (unsigned int)newFunctionRef;
- (unsigned int)newFunctionWithIR:(id)arg1;
- (unsigned int)newHeapRef;
- (unsigned int)newHeapWithDescriptor:(id)arg1 allocator:(id)arg2;
- (unsigned int)newIOSurfaceTextureWithDescriptor:(id)arg1 plane:(unsigned long long)arg2 allocator:(id)arg3;
- (unsigned int)newNotificationRef;
- (unsigned int)newRenderPipelineStateRef;
- (unsigned int)newRenderPipelineStateWithSerializedDescriptor:(id)arg1 allocator:(id)arg2;
- (unsigned int)newSamplerStateRef;
- (id)newSamplerStateWithDescriptor:(id)arg1;
- (unsigned int)newSamplerStateWithDescriptor:(id)arg1 allocator:(id)arg2;
- (unsigned int)newSharedEventWithAllocator:(id)arg1;
- (unsigned int)newSharedEventWithHandle:(id)arg1 allocator:(id)arg2;
- (unsigned int)newSharedEventWithMachPort:(unsigned int)arg1 allocator:(id)arg2;
- (unsigned int)newSharedEventWithOptions:(long long)arg1 allocator:(id)arg2;
- (unsigned int)newSharedTextureWithDescriptor:(id)arg1 allocator:(id)arg2;
- (unsigned int)newSharedTextureWithHandle:(id)arg1;
- (unsigned int)newTextureRef;
- (unsigned int)newTextureViewWithPixelFormat:(unsigned long long)arg1 baseTexture:(id)arg2 allocator:(id)arg3;
- (unsigned int)newTextureViewWithPixelFormat:(unsigned long long)arg1 textureType:(unsigned long long)arg2 levels:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 slices:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 baseTexture:(id)arg5 allocator:(id)arg6;
- (unsigned int)newTextureViewWithPixelFormat:(unsigned long long)arg1 textureType:(unsigned long long)arg2 levels:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 slices:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 swizzle:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; })arg5 baseTexture:(id)arg6 allocator:(id)arg7;
- (unsigned int)newTextureWithBuffer:(id)arg1 descriptor:(id)arg2 offset:(unsigned long long)arg3 bytesPerRow:(unsigned long long)arg4 allocator:(id)arg5;
- (id)newTextureWithDescriptor:(id)arg1;
- (unsigned int)newTextureWithDescriptor:(id)arg1 allocator:(id)arg2;
- (unsigned int)newTextureWithDescriptor:(id)arg1 heap:(id)arg2 offset:(unsigned long long)arg3 useOffset:(bool)arg4 allocator:(id)arg5;
- (unsigned int)newTiledTextureWithBuffer:(id)arg1 descriptor:(id)arg2 offset:(unsigned long long)arg3 bytesPerRow:(unsigned long long)arg4 allocator:(id)arg5;
- (unsigned int)notifyListenerForEventRef:(unsigned int)arg1 atValue:(unsigned long long)arg2 allocator:(id)arg3;
- (const char *)payloadFromReplyData:(const char *)arg1 replyDataSize:(unsigned long long)arg2;
- (unsigned long long)reflectionSerializationVersion;
- (void)releaseArgumentBufferLayoutRef:(unsigned int)arg1;
- (void)releaseArgumentEncoderRef:(unsigned int)arg1;
- (void)releaseBufferRef:(unsigned int)arg1;
- (void)releaseCommandBufferRef:(unsigned int)arg1;
- (void)releaseCommandQueueRef:(unsigned int)arg1;
- (void)releaseComputePipelineStateRef:(unsigned int)arg1;
- (void)releaseDepthStencilStateRef:(unsigned int)arg1;
- (void)releaseEventRef:(unsigned int)arg1;
- (void)releaseFenceRef:(unsigned int)arg1;
- (void)releaseFunctionRef:(unsigned int)arg1;
- (void)releaseHeapRef:(unsigned int)arg1;
- (void)releaseNotificationRef:(unsigned int)arg1;
- (void)releaseRenderPipelineStateRef:(unsigned int)arg1;
- (void)releaseSamplerStateRef:(unsigned int)arg1;
- (void)releaseTextureRef:(unsigned int)arg1;
- (void*)replaceRegion:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1 mipmapLevel:(unsigned long long)arg2 slice:(unsigned long long)arg3 dataSize:(unsigned long long)arg4 bytesPerRow:(unsigned long long)arg5 bytesPerImage:(unsigned long long)arg6 texture:(id)arg7 allocator:(id)arg8;
- (void)setReflectionSerializationVersion:(unsigned long long)arg1;
- (void)sharedEventSetSignaledValue:(unsigned long long)arg1 eventRef:(unsigned int)arg2 allocator:(id)arg3;
- (void)sharedEventSignaledValueForEventRef:(unsigned int)arg1 allocator:(id)arg2;
- (void)sharedEventWaitSignaledValue:(unsigned long long)arg1 timeoutMS:(unsigned long long)arg2 eventRef:(unsigned int)arg3 allocator:(id)arg4;
- (void)sizeInfoForHeap:(id)arg1 allocator:(id)arg2;
- (bool)supportsCorrectBaseVertex;
- (bool)supportsOpenGL;
- (void)uniqueIdentifierForComputePipelineState:(id)arg1 allocator:(id)arg2;
- (void)uniqueIdentifierForRenderPipelineState:(id)arg1 allocator:(id)arg2;
- (void)uniqueIdentifierForSamplerState:(id)arg1 allocator:(id)arg2;
- (void)uniqueIdentifierForTexture:(id)arg1 allocator:(id)arg2;

@end
