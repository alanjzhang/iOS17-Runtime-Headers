/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/Preferences.framework/Preferences
 */

@interface PSTableCell : UITableViewCell {
    int  _alignment;
    UITraitCollection * _cachedTraitCollection;
    bool  _cellEnabled;
    bool  _checked;
    UIImageView * _checkedImageView;
    NSArray * _constraints;
    PSTableCellHighlightContext * _customHighlightContext;
    bool  _forceHideDisclosureIndicator;
    NSString * _hiddenTitle;
    bool  _isCopyable;
    bool  _lazyIcon;
    NSString * _lazyIconAppID;
    bool  _lazyIconDontUnload;
    bool  _lazyIconForceSynchronous;
    NSNumber * _lazyIconShapeOverride;
    NSURL * _lazyIconURL;
    NSString * _lazyIconUTTypeIdentifier;
    UILongPressGestureRecognizer * _longTapRecognizer;
    SEL  _pAction;
    id  _pTarget;
    bool  _reusedCell;
    bool  _shouldHideTitle;
    PSSpecifier * _specifier;
    long long  _type;
    NSURLSession * _urlSession;
    id  _value;
}

@property (nonatomic, retain) UITraitCollection *cachedTraitCollection;
@property (nonatomic, retain) NSArray *constraints;
@property (nonatomic) bool forceHideDisclosureIndicator;
@property (nonatomic) bool isCopyable;
@property (nonatomic, retain) NSNumber *lazyIconShapeOverride;
@property (nonatomic, retain) NSURL *lazyIconURL;
@property (nonatomic, retain) NSString *lazyIconUTTypeIdentifier;
@property (nonatomic, retain) UILongPressGestureRecognizer *longTapRecognizer;
@property (nonatomic) bool reusedCell;
@property (nonatomic, retain) PSSpecifier *specifier;
@property (nonatomic) long long type;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/Preferences.framework/Preferences

+ (Class)cellClassForSpecifier:(id)arg1;
+ (long long)cellStyle;
+ (long long)cellTypeFromString:(id)arg1;
+ (double)defaultCellHeight;
+ (id)reuseIdentifierForBasicCellTypes:(long long)arg1;
+ (id)reuseIdentifierForClassAndType:(long long)arg1;
+ (id)reuseIdentifierForSpecifier:(id)arg1;
+ (id)stringFromCellType:(long long)arg1;

- (void).cxx_destruct;
- (id)_checkmarkImage:(bool)arg1;
- (id)_contentString;
- (id)_copyableText;
- (id)_disclosureChevronImage:(bool)arg1;
- (void)_invalidateHighlightContext;
- (void)_updateAccessoryTypeForSpecifier:(id)arg1;
- (id)_urlSession;
- (SEL)action;
- (id)blankIcon;
- (id)cachedTraitCollection;
- (bool)canBeChecked;
- (bool)canBecomeFirstResponder;
- (bool)canReload;
- (SEL)cellAction;
- (bool)cellEnabled;
- (void)cellRemovedFromView;
- (id)cellTarget;
- (id)constraints;
- (void)copy:(id)arg1;
- (void)dealloc;
- (bool)forceHideDisclosureIndicator;
- (void)forceSynchronousIconLoadOnNextIconLoad;
- (id)getIcon;
- (id)getIconFromIconServices;
- (id)getLazyIcon;
- (id)getLazyIconID;
- (void)handleTraitCollectionChange:(id)arg1;
- (void)highlightCellForDuration:(double)arg1 animateUnighlight:(bool)arg2;
- (id)iconImageView;
- (unsigned long long)iconShape;
- (struct CGSize { double x1; double x2; })iconSizeForShape:(unsigned long long)arg1 scale:(double)arg2;
- (id)imageDescriptor;
- (bool)isChecked;
- (bool)isCopyable;
- (void)layoutSubviews;
- (id)lazyIconQueue:(id)arg1;
- (id)lazyIconShapeOverride;
- (id)lazyIconUTTypeIdentifier;
- (void)loadISIconFromSpecifier:(id)arg1;
- (void)longPressed:(id)arg1;
- (id)longTapRecognizer;
- (bool)modernLayoutEnabled;
- (void)reloadWithSpecifier:(id)arg1 animated:(bool)arg2;
- (bool)reusedCell;
- (void)setAction:(SEL)arg1;
- (void)setAlignment:(int)arg1;
- (void)setCachedTraitCollection:(id)arg1;
- (void)setCellAction:(SEL)arg1;
- (void)setCellEnabled:(bool)arg1;
- (void)setCellTarget:(id)arg1;
- (void)setChecked:(bool)arg1;
- (void)setConstraints:(id)arg1;
- (void)setForceHideDisclosureIndicator:(bool)arg1;
- (void)setHighlighted:(bool)arg1 animated:(bool)arg2;
- (void)setIcon:(id)arg1;
- (void)setIsCopyable:(bool)arg1;
- (void)setLazyIconShapeOverride:(id)arg1;
- (void)setLazyIconUTTypeIdentifier:(id)arg1;
- (void)setLongTapRecognizer:(id)arg1;
- (void)setReusedCell:(bool)arg1;
- (void)setSelected:(bool)arg1 animated:(bool)arg2;
- (void)setShouldHideTitle:(bool)arg1;
- (void)setSpecifier:(id)arg1;
- (void)setTarget:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setType:(long long)arg1;
- (void)setValue:(id)arg1;
- (void)setValueChangedTarget:(id)arg1 action:(SEL)arg2 specifier:(id)arg3;
- (void)setupModernLayoutConstraints;
- (bool)shouldUseModernLayout;
- (id)specifier;
- (id)target;
- (double)textFieldOffset;
- (id)title;
- (id)titleLabel;
- (id)titleTextLabel;
- (long long)type;
- (id)value;
- (id)valueLabel;

// PSTableCell (CustomizationExtensions)

- (bool)isCopyable;
- (id)lazyIconURL;
- (id)longTapRecognizer;
- (void)setIsCopyable:(bool)arg1;
- (void)setLazyIconURL:(id)arg1;
- (void)setLongTapRecognizer:(id)arg1;

// PSTableCell (SyntheticEvents)

- (id)_automationID;
- (id)scriptingInfoWithChildren;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/AccessibilityBundles/PreferencesFramework.axbundle/PreferencesFramework

+ (void)_setAccessibilityData:(id)arg1 onCell:(id)arg2;

- (bool)_accessibilityElementServesAsHeadingLandmark;
- (id)_accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (bool)_accessibilityIsSpeakThisElement;
- (bool)_accessibilityLanguageOverriddesUser;
- (void)_accessibilityLoadAccessibilityInformation;
- (void)_accessibilityLoadAccessibilityInformationWithSpecifier:(id)arg1;
- (struct CGPoint { double x1; double x2; })_accessibilityMaxScrubberPosition;
- (struct CGPoint { double x1; double x2; })_accessibilityMinScrubberPosition;
- (id)_accessibilityUserTestingChildren;
- (struct CGPoint { double x1; double x2; })accessibilityActivationPoint;
- (void)accessibilityDecrement;
- (id)accessibilityHint;
- (void)accessibilityIncrement;
- (id)accessibilityLabel;
- (bool)accessibilityRespondsToUserInteraction;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityValue;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;
- (bool)isAccessibilityElement;
- (void)prepareForReuse;
- (void)refreshCellContentsWithSpecifier:(id)arg1;

// PSTableCell (SafeCategory)

+ (Class)safeCategoryBaseClass;

@end
