/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/CarKit.framework/CarKit
 */

@interface CARSession : NSObject {
    bool  _activated;
    bool  _authenticated;
    bool  _clientIsCarPlayShell;
    CARSessionConfiguration * _configuration;
    struct OpaqueFigEndpoint { } * _endpoint;
    CARInputDeviceManager * _inputDeviceManager;
    bool  _isPaired;
    CARObserverHashTable * _observers;
    bool  _saveInfoResponse;
    NSString * _sourceVersion;
    NSNumber * _systemNightMode;
    long long  _voiceTriggerMode;
}

@property (getter=isActivated, nonatomic, readonly) bool activated;
@property (getter=isAuthenticated, nonatomic, readonly) bool authenticated;
@property (nonatomic, readonly) bool clientIsCarPlayShell;
@property (nonatomic, readonly) CARSessionConfiguration *configuration;
@property (nonatomic, readonly, copy) NSNumber *electronicTollCollectionAvailable;
@property (nonatomic, retain) CARInputDeviceManager *inputDeviceManager;
@property (nonatomic, readonly) bool isPaired;
@property (nonatomic, readonly, copy) NSNumber *limitUserInterfaces;
@property (nonatomic, readonly, copy) NSNumber *nightMode;
@property (nonatomic, retain) CARObserverHashTable *observers;
@property (nonatomic, readonly) bool saveInfoResponse;
@property (nonatomic, readonly, copy) NSString *sourceVersion;
@property (nonatomic, retain) NSNumber *systemNightMode;
@property (nonatomic, readonly) long long voiceTriggerMode;

- (void).cxx_destruct;
- (id)MFiCertificateSerialNumber;
- (id)_endpointValueForKey:(struct __CFString { }*)arg1;
- (void)_fetchActivationStatus;
- (void)_fetchAuthenticationStatus;
- (id)_fig_safe_description;
- (void)_newObserverAdded:(id)arg1;
- (bool)_sessionReady;
- (void)_updateCarCapabilities;
- (void)_updateConfiguration;
- (void)addObserver:(id)arg1;
- (id)borrowScreenForClient:(id)arg1 reason:(id)arg2;
- (bool)carOwnsMainAudio;
- (bool)carOwnsScreen;
- (bool)clientIsCarPlayShell;
- (id)configuration;
- (struct OpaqueFigEndpointRemoteControlSession { }*)createRemoteControlSession:(id)arg1 channelID:(id)arg2 withoutReply:(bool)arg3 qualityOfService:(id)arg4 streamPriority:(id)arg5 error:(id*)arg6;
- (id)description;
- (id)electronicTollCollectionAvailable;
- (struct OpaqueFigEndpoint { }*)endpoint;
- (id)initWithFigEndpoint:(struct OpaqueFigEndpoint { }*)arg1 clientIsCarPlayShell:(bool)arg2 saveInfoResponse:(bool)arg3;
- (id)inputDeviceManager;
- (bool)isActivated;
- (bool)isAuthenticated;
- (bool)isPaired;
- (id)lastNavigatingBundleIdentifier;
- (id)limitUserInterfaces;
- (long long)mapInterfaceStyleForScreenUUID:(id)arg1;
- (unsigned long long)navigationOwner;
- (id)nightMode;
- (id)observers;
- (bool)recognizingSpeech;
- (void)releaseTurnByTurnOwnership;
- (void)removeObserver:(id)arg1;
- (void)requestCarUI;
- (void)requestCarUIForURL:(id)arg1;
- (void)requestTurnByTurnOwnership;
- (bool)saveInfoResponse;
- (void)sendCommand:(id)arg1 withParameters:(id)arg2;
- (void)setInputDeviceManager:(id)arg1;
- (void)setInputMode:(unsigned long long)arg1 forInputDevice:(id)arg2;
- (void)setObservers:(id)arg1;
- (void)setSystemNightMode:(id)arg1;
- (id)sourceVersion;
- (id)systemNightMode;
- (void)takeScreenForClient:(id)arg1 reason:(id)arg2;
- (void)takeScreenForConnection;
- (long long)userInterfaceStyleForScreenUUID:(id)arg1;
- (long long)voiceTriggerMode;

@end
