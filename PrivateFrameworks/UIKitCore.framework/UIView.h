/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UIView : UIResponder <AVKitLayoutItem, CALayerDelegate, DebugHierarchyObject_Fallback, EKUIViewHierarchy, MKInfoCardThemeListener, MKStackingViewControllerSizableView, NSCoding, NSISEngineDelegate, NSISVariableDelegate, NUIArrangementItem, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UILargeContentViewerItem_Private, UILayoutItem_Internal, UITextEffectsOrdering, UITraitChangeObservable, UITraitChangeObservableInternal, UITraitEnvironment, _UIDropInteractionOwning, _UIFallbackEnvironment, _UIFocusEnvironmentPrivate, _UIFocusItemContainerInternal, _UIFocusItemContainerPrivate, _UIFocusItemDebuggable, _UIFocusItemInternal, _UIFocusItemPrivate, _UIFocusRegionContainer, _UIFocusRegionContainerInternal, _UIGeometryChangeObserver, _UIGestureOwning, _UILayoutItem, _UILegacyFocusRegion, _UIMultilineTextContentSizing, _UIPopoverPresentationControllerSourceItem_Internal, _UIScrollViewScrollObserver_Internal, _UITraitEnvironmentInternal, _UITraitOverrideDelegate, _UIViewSubtreeMonitor> {
    _UIViewLayoutEngineRelativeAlignmentRectOriginCache * __alignmentRectOriginCache;
    unsigned long long  __autoresizingMaskForPreviousAutoresizingLayoutConstraints;
    UITraitCollection * __lastNotifiedTraitCollection;
    UIViewAnimationInfo * _animationInfo;
    NSISVariable * _boundsHeightVariable;
    NSISVariable * _boundsWidthVariable;
    UITraitCollection * _cachedTraitCollection;
    NSMutableArray * _constraintsExceptingSubviewAutoresizingConstraints;
    unsigned short  _countOfFocusedAncestorTrackingViewsInSubtree;
    NSMutableArray * _gestureRecognizers;
    unsigned short  _imminentLayoutSubviewsCount;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _inferredLayoutMargins;
    NSMutableArray * _internalConstraints;
    UIKeyboardLayoutGuide * _keyboardLayoutGuide;
    CALayer * _layer;
    CALayer * _layerRetained;
    NSISEngine * _layoutEngine;
    UILayoutGuide * _layoutMarginsGuide;
    unsigned short  _layoutSubviewsCount;
    NSISVariable * _minXVariable;
    NSISVariable * _minYVariable;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _minimumSafeAreaInsets;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _rawLayoutMargins;
    UILayoutGuide * _readableContentGuide;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _safeAreaInsets;
    UILayoutGuide * _safeAreaLayoutGuide;
    long long  _sceneDraggingBehaviorOnPan;
    NSMapTable * _stashedLayoutVariableObservations;
    NSArray * _subviewCache;
    unsigned short  _tintAdjustmentDimmingCount;
    _UITraitChangeRegistry * _traitChangeRegistry;
    unsigned short  _unsatisfiableConstraintsLoggingSuspensionCount;
    _UIViewBackingAux * _viewBackingAux;
    UIViewController * _viewDelegate;
    struct { 
        unsigned int userInteractionDisabled : 1; 
        unsigned int implementsDrawRect : 1; 
        unsigned int implementsDidScroll : 1; 
        unsigned int implementsMouseTracking : 1; 
        unsigned int implementsIntrinsicContentSize : 1; 
        unsigned int hasBackgroundColor : 1; 
        unsigned int hasBackgroundColorSystemColorName : 1; 
        unsigned int hasInteractionTintColor : 1; 
        unsigned int isOpaque : 1; 
        unsigned int becomeFirstResponderWhenCapable : 1; 
        unsigned int interceptMouseEvent : 1; 
        unsigned int isDeallocInitiated : 1; 
        unsigned int isInUIViewDealloc : 1; 
        unsigned int hasPreparedForWindowDealloc : 1; 
        unsigned int debugFlash : 1; 
        unsigned int isAncestorOfFirstResponder : 1; 
        unsigned int dontAutoresizeSubviews : 1; 
        unsigned int autoresizeMask : 6; 
        unsigned int patternBackground : 1; 
        unsigned int fixedBackgroundPattern : 1; 
        unsigned int dontAnimate : 1; 
        unsigned int superLayerIsView : 1; 
        unsigned int layerKitPatternDrawing : 1; 
        unsigned int multipleTouchEnabled : 1; 
        unsigned int exclusiveTouch : 1; 
        unsigned int hasViewController : 1; 
        unsigned int needsDidAppearOrDisappear : 1; 
        unsigned int deliversTouchesForGesturesToSuperview : 1; 
        unsigned int deliversPressesForGesturesToSuperview : 1; 
        unsigned int chargeEnabled : 1; 
        unsigned int skipsSubviewEnumeration : 1; 
        unsigned int needsDisplayOnBoundsChange : 1; 
        unsigned int hasTiledLayer : 1; 
        unsigned int hasContentSizeCategoryLimits : 1; 
        unsigned int traversalMark : 1; 
        unsigned int appearanceIsInvalid : 1; 
        unsigned int monitorsSubtree : 1; 
        unsigned int hostsAutolayoutEngine : 1; 
        unsigned int constraintsAreClean : 1; 
        unsigned int subviewLayoutConstraintsAreClean : 1; 
        unsigned int intrinsicContentSizeConstraintsAreClean : 1; 
        unsigned int strictDescendantNeedsDoubleUpdateConstraints : 1; 
        unsigned int strictDescendantNeedsDoubleUpdateConstraintsIsInvalid : 1; 
        unsigned int hasStoredLayoutEngineWidth : 1; 
        unsigned int determiningWidthForDoubleUpdateConstraints : 1; 
        unsigned int inSecondConstraintsPass : 1; 
        unsigned int potentiallyHasDanglyConstraints : 1; 
        unsigned int doesNotTranslateAutoresizingMaskIntoConstraints : 1; 
        unsigned int autolayoutIsClean : 1; 
        unsigned int autolayoutBoundsAreClean : 1; 
        unsigned int layoutFlushingDisabled : 1; 
        unsigned int layingOutFromConstraints : 1; 
        unsigned int wantsAutolayout : 1; 
        unsigned int subviewWantsAutolayout : 1; 
        unsigned int isApplyingValuesFromEngine : 1; 
        unsigned int autolayoutIsSendingSetBoundsWithNoChanges : 1; 
        unsigned int isResizingDueToParentResize : 1; 
        unsigned int isInLayoutSubviewsOrVCCallback : 1; 
        unsigned int isInAnimatedLayout : 1; 
        unsigned int isSubviewUpdatingAutoresizingConstraints : 1; 
        unsigned int isUpdatingConstraints : 1; 
        unsigned int isReapplyingStillActiveBrokenConstraints : 1; 
        unsigned int isSuppressingUnsatisfiableConstraintsLoggingForNestedLayoutEngines : 1; 
        unsigned int isHostingUpdateConstraintsPassDuringLayout : 1; 
        unsigned int isRunningEngineLevelConstraintsPass : 1; 
        unsigned int isUpdatingLayoutEngineHostConstraints : 1; 
        unsigned int isExpectingToFlushPendingLayoutChangeNotifications : 1; 
        unsigned int invalidatesIntrinsicContentSizeForSubviewAutoLayoutChanges : 1; 
        unsigned int systemLayoutFittingSizeNeedsUpdate : 1; 
        unsigned int systemLayoutFittingSizeNeedsUpdateInWholeSubtree : 1; 
        unsigned int isCalculatingSystemLayoutFittingSize : 1; 
        unsigned int suppressEncapsulationConstraints : 1; 
        unsigned int isFetchingSizeForTAMIC_NOEngineHost : 1; 
        unsigned int stayHiddenAwaitingReuse : 1; 
        unsigned int stayHiddenAfterReuse : 1; 
        unsigned int skippedLayoutWhileHiddenForReuse : 1; 
        unsigned int isPendingHiddenForAnimation : 1; 
        unsigned int hasMaskView : 1; 
        unsigned int isSettingMaskView : 1; 
        unsigned int hasVisualAltitude : 1; 
        unsigned int hasBackdropMaskViews : 1; 
        unsigned int backdropMaskViewFlags : 5; 
        unsigned int delaysTouchesForSystemGestures : 1; 
        unsigned int subclassShouldDelayTouchForSystemGestures : 1; 
        unsigned int hasMotionEffects : 1; 
        unsigned int backdropOverlayMode : 2; 
        unsigned int tintAdjustmentMode : 2; 
        unsigned int isReferenceView : 1; 
        unsigned int focusState : 2; 
        unsigned int hasUserInterfaceIdiom : 1; 
        unsigned int userInterfaceIdiom : 3; 
        unsigned int ancestorDefinesTintColor : 1; 
        unsigned int ancestorDefinesTintAdjustmentMode : 1; 
        unsigned int ancestorIgnoresInvertColors : 1; 
        unsigned int needsTraitCollectionDidChangePropagation : 1; 
        unsigned int isRootOfTraitCollectionDidChangePropagation : 1; 
        unsigned int implementsTraitCollectionForChildEnvironment : 1; 
        unsigned int implementsBaselineOffsetsAtSize : 1; 
        unsigned int coloredViewBounds : 1; 
        unsigned int coloredAlignmentRects : 1; 
        unsigned int preservesSuperviewMargins : 4; 
        unsigned int insettingLayoutMarginsFromSafeArea : 4; 
        unsigned int safeAreaInsetsFrozen : 1; 
        unsigned int viewDelegateContentOverlayInsetsAreClean : 1; 
        unsigned int hasGeometryObservers : 1; 
        unsigned int notifyObserversForBaselineChanges : 1; 
        unsigned int notifySuperviewForBaselineChanges : 1; 
        unsigned int observingGeometryChangesForSelfCount : 4; 
        unsigned int hasTraitStorageList : 1; 
        unsigned int cachedTraitCollectionIsValid : 1; 
        unsigned int hasTraitOverrides : 1; 
        unsigned int dontUpdateInferredLayoutMargins : 1; 
        unsigned int areLayoutMarginsDirectional : 1; 
        unsigned int implementsViewForBaselineLayout : 1; 
        unsigned int tracksFocusedAncestors : 1; 
        unsigned int hasLayoutArrangements : 1; 
        unsigned int isHiddenManagedByLayoutArrangement : 1; 
        unsigned int hasAddedFocusGuides : 1; 
        unsigned int hasFocusSpeedBumpEdges : 1; 
        unsigned int hasFocusableContentMargins : 1; 
        unsigned int focusInteractionDisabled : 1; 
        unsigned int shouldReverseLayoutDirection : 1; 
        unsigned int cannotBeParentTraitEnvironment : 1; 
        unsigned int needsContentsFormatUpdate : 1; 
        unsigned int accessibilityIgnoresInvertColors : 1; 
        unsigned int ignoresLayerTransformForSafeAreaInsets : 1; 
        unsigned int accessibilityInterfaceStyleIntent : 2; 
        unsigned int accessibilityResolvedInterfaceStyle : 2; 
        unsigned int shouldArchiveUIAppearanceTags : 1; 
        unsigned int wantsDeepColorDrawing : 1; 
        unsigned int preferredContentsFormat : 3; 
        unsigned int tagEnabled : 1; 
        unsigned int chargeSet : 1; 
        unsigned int ignoreBackdropViewsWhenHiding : 1; 
        unsigned int areChildrenFocused : 1; 
        unsigned int hasInteractionsArray : 1; 
        unsigned int hasHitTestDirectionalInsets : 1; 
        unsigned int hasLayoutDebuggingIdentifier : 1; 
        unsigned int hasContentSizeNotificationToken : 1; 
        unsigned int hasPresentationControllerToNotifyOnLayoutSubviews : 1; 
        unsigned int semanticContentAttribute : 3; 
        unsigned int hasDynamicBackgroundColor : 1; 
        unsigned int forceEffectiveThemeDidChange : 1; 
        unsigned int allowsHighContrastForBackgroundColor : 1; 
        unsigned int hasPendingTraitStorageConstraints : 1; 
        unsigned int hasPendingLayoutAfterTraitStorageConstraintsUpdate : 1; 
        unsigned int hasEverBeenInAWindow : 1; 
        unsigned int hasFocusGroupIdentifier : 2; 
        unsigned int hasFocusGroupPriority : 1; 
        unsigned int hasFocusEffect : 2; 
        unsigned int conformsToUIFocusItemScrollableContainer : 2; 
        unsigned int allowsSkippingLayout : 1; 
        unsigned int isResolvingTraitCollection : 1; 
        unsigned int needsLayoutAndDisplayOnTintColorChanges : 1; 
        unsigned int subviewNeedsAnimationRestorationMessage : 1; 
        unsigned int isHostingTrackingForAnimationRestoration : 1; 
        unsigned int implementsFocusItemsInRect : 1; 
        unsigned int isPrivateSubview : 1; 
        unsigned int shouldAdaptToMaterials : 1; 
        unsigned int useMinimumSafeArea : 1; 
        unsigned int useMinimumSafeAreaFrozen : 1; 
        unsigned int minimumSafeAreaAccessed : 1; 
        unsigned int minimumSafeAreaIsClassicSafeArea : 1; 
        unsigned int minimumSafeAreaNeedsUpdate : 1; 
        unsigned int mt_hasCustomizedCaptureGroup : 1; 
        unsigned int mt_backgroundMergeBehavior : 2; 
        unsigned int shouldContinueRemovingFromSuperview : 1; 
        unsigned int isMaskingIntermediateLayer : 1; 
    }  _viewFlags;
    UIWindow * _window;
}

@property (setter=PG_setAllowsEdgeAntialiasing:, nonatomic) bool PG_allowsEdgeAntialiasing;
@property (setter=PG_setAllowsGroupBlending:, nonatomic) bool PG_allowsGroupBlending;
@property (setter=PG_setAnchorPoint:, nonatomic) struct CGPoint { double x1; double x2; } PG_anchorPoint;
@property (setter=PG_setCompositingFilter:, nonatomic, retain) id PG_compositingFilter;
@property (getter=_StatusBar_isInVisibleHierarchy, nonatomic, readonly) bool _StatusBar_isInVisibleHierarchy;
@property (setter=_setAccessoryViewFrame:, nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _accessoryViewFrame;
@property (nonatomic, readonly) <_UIGestureOwning> *_actingGestureParent;
@property (setter=_setActiveSizeToFitLayoutEngine:, nonatomic) NSISEngine *_activeSizeToFitLayoutEngine;
@property (setter=_setAlignmentRectOriginCache:, nonatomic, retain) _UIViewLayoutEngineRelativeAlignmentRectOriginCache *_alignmentRectOriginCache;
@property (nonatomic, readonly) unsigned long long _axesForDerivingIntrinsicContentSizeFromLayoutSize;
@property (nonatomic, readonly) UIView *_backdropMaskViewForColorTint;
@property (nonatomic, readonly) UIView *_backdropMaskViewForFilters;
@property (nonatomic, readonly) UIView *_backdropMaskViewForGrayscaleTint;
@property (nonatomic, readonly) NSArray *_backdropMaskViews;
@property (setter=_setBackgroundMergeBehavior:, nonatomic) long long _backgroundMergeBehavior;
@property (nonatomic, readonly, retain) NSISVariable *_boundsHeightVariable;
@property (nonatomic, readonly, retain) NSISVariable *_boundsWidthVariable;
@property (getter=_canBeParentTraitEnvironment, setter=_setCanBeParentTraitEnvironment:, nonatomic) bool _canBeParentTraitEnviroment;
@property (nonatomic, readonly) CNContactStyle *_cnui_contactStyle;
@property (nonatomic, readonly, retain) NSArray *_constraintsExceptingSubviewAutoresizingConstraints;
@property (setter=_setContinuousCornerRadius:, nonatomic) double _continuousCornerRadius;
@property (setter=_setCornerRadius:, nonatomic) double _cornerRadius;
@property (setter=_setCountOfFocusedAncestorTrackingViewsInSubtree:, nonatomic) unsigned long long _countOfFocusedAncestorTrackingViewsInSubtree;
@property (setter=_setCountOfMotionEffectsInSubtree:, nonatomic) unsigned long long _countOfMotionEffectsInSubtree;
@property (nonatomic, readonly) double _currentScreenScale;
@property (setter=_setDisableDictationTouchCancellation:, nonatomic) bool _disableDictationTouchCancellation;
@property (setter=_setDisableLayoutFlushingCount:, nonatomic) long long _disableLayoutFlushingCount;
@property (setter=_setDontUpdateInferredLayoutMargins:, nonatomic) bool _dontUpdateInferredLayoutMargins;
@property (getter=_draggingSourceDelegate, setter=_setDraggingSourceDelegate:, nonatomic) <_UIViewInternalDraggingSourceDelegate> *_draggingSourceDelegate;
@property (nonatomic, readonly) UIWindow *_eventReceivingWindow;
@property (setter=_setFlipsHorizontalAxis:, nonatomic) bool _flipsHorizontalAxis;
@property (nonatomic, readonly) long long _focusItemDeferralMode;
@property (setter=_setFrameIgnoringLayerTransform:, nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _frameIgnoringLayerTransform;
@property (nonatomic, readonly) long long _hiddenManagedByLayoutArrangementCount;
@property (nonatomic, readonly) bool _ignoreRemoveAllAnimations;
@property (setter=_setInferredLayoutMargins:, nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } _inferredLayoutMargins;
@property (nonatomic, readonly) UIKBRenderConfig *_inheritedRenderConfig;
@property (setter=_setInternalConstraints:, nonatomic, retain) NSMutableArray *_internalConstraints;
@property (nonatomic, readonly) bool _isInLayoutSubviews;
@property (nonatomic, readonly) bool _isUnsatisfiableConstraintsLoggingSuspended;
@property (nonatomic, readonly) long long _keyboardOrientation;
@property (setter=_setLastNotifiedTraitCollection:, nonatomic, retain) UITraitCollection *_lastNotifiedTraitCollection;
@property (setter=_setLayoutDebuggingIdentifier:, nonatomic, copy) NSString *_layoutDebuggingIdentifier;
@property (setter=_setLayoutEngine:, nonatomic, retain) NSISEngine *_layoutEngine;
@property (nonatomic, readonly) bool _layoutHeightDependsOnWidth;
@property (setter=_setLayoutMarginsGuideIgnoresSystemMinimumMargins:, nonatomic) bool _layoutMarginsGuideIgnoresSystemMinimumMargins;
@property (nonatomic, readonly) NSMapTable *_lfld_constraintsAffectingVariableValueChanges;
@property (nonatomic, readonly) long long _lfld_count;
@property (nonatomic, readonly) NSString *_lfld_currentLayoutMethodName;
@property (nonatomic, readonly) NSMutableArray *_lfld_geometryChangeRecords;
@property (nonatomic, readonly) NSMutableSet *_lfld_setNeedsLayoutCallStacks;
@property (nonatomic, readonly) NSMutableArray *_lfld_variableChangeRecords;
@property (nonatomic, readonly) bool _lightStyleRenderConfig;
@property (getter=_localOverrideTraitCollection, setter=_setLocalOverrideTraitCollection:, nonatomic, retain) UITraitCollection *_localOverrideTraitCollection;
@property (nonatomic, readonly, retain) MKMapView *_mapKit_mapView;
@property (nonatomic, readonly, retain) CALayer *_mapkit_currentLayer;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _mapkit_doubleFrame;
@property (nonatomic, readonly) bool _mapkit_hasPointerInteraction;
@property (nonatomic, readonly) bool _mapkit_isDarkModeEnabled;
@property (nonatomic, readonly) long long _mapkit_userInterfaceDirection;
@property (setter=_setMaskView:, nonatomic, retain) UIView *_maskView;
@property (nonatomic, readonly, retain) NSISVariable *_minXVariable;
@property (nonatomic, readonly, retain) NSISVariable *_minYVariable;
@property (setter=_setMultilineContextWidth:, nonatomic) double _multilineContextWidth;
@property (nonatomic, readonly, retain) NSMutableArray *_mutableLayoutArrangements;
@property (nonatomic, readonly, retain) NSMutableArray *_mutableLayoutGuides;
@property (nonatomic, readonly) NSArray *_nativeInteractions;
@property (setter=_setNeedsContentsFormatUpdate:, nonatomic) bool _needsContentsFormatUpdate;
@property (nonatomic, readonly) UIShape *_outlineShape;
@property (getter=_overrideUserInterfaceRenderingMode, setter=_setOverrideUserInterfaceRenderingMode:, nonatomic) long long _overrideUserInterfaceRenderingMode;
@property (getter=_overrideUserInterfaceStyle, setter=_setOverrideUserInterfaceStyle:, nonatomic) long long _overrideUserInterfaceStyle;
@property (getter=_overrideVibrancyTrait, setter=_setOverrideVibrancyTrait:, nonatomic) long long _overrideVibrancyTrait;
@property (nonatomic, readonly) long long _pendingHiddenCount;
@property (getter=_presentationControllerToNotifyOnLayoutSubviews, setter=_setPresentationControllerToNotifyOnLayoutSubviews:, nonatomic) UIPresentationController *_presentationControllerToNotifyOnLayoutSubviews;
@property (setter=_setRawLayoutMargins:, nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } _rawLayoutMargins;
@property (nonatomic, readonly) UIResolvedShape *_resolvedOutlineShape;
@property (nonatomic, readonly) struct CGVector { double x1; double x2; } _scaleFromLayerTransforms;
@property (setter=_setSceneDraggingBehaviorOnPan:, nonatomic) long long _sceneDraggingBehaviorOnPan;
@property (setter=_setShouldAdaptToMaterials:, nonatomic) bool _shouldAdaptToMaterials;
@property (setter=_setShouldArchiveUIAppearanceTags:, nonatomic) bool _shouldArchiveUIAppearanceTags;
@property (setter=_setShouldNotifyGeometryObserversForBaselineChanges:, nonatomic) bool _shouldNotifyGeometryObserversForBaselineChanges;
@property (nonatomic, readonly) bool _shouldReverseLayoutDirection;
@property (nonatomic, readonly) NSMapTable *_stashedLayoutVariableObservations;
@property (nonatomic, readonly) _UITouchForceObservable *_touchForceObservable;
@property (setter=_setTracksFocusedAncestors:, nonatomic) bool _tracksFocusedAncestors;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _ui_bounds;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _ui_frame;
@property (nonatomic, readonly) UIView *_ui_superview;
@property (nonatomic) bool _ui_usesManualLayout;
@property (nonatomic, readonly) UIView *_ui_view;
@property (getter=_userInterfaceIdiom, setter=_setUserInterfaceIdiom:, nonatomic) long long _userInterfaceIdiom;
@property (setter=_setViewDelegateContentOverlayInsetsAreClean:, nonatomic) bool _viewDelegateContentOverlayInsetsAreClean;
@property (nonatomic, readonly) bool _wantsConstraintBasedLayout;
@property (readonly) double _widthForButtonBarItemLayout;
@property (nonatomic, readonly) UIAccessibilityHUDItem *accessibilityHUDRepresentation;
@property (nonatomic) bool accessibilityIgnoresInvertColors;
@property (nonatomic) bool allowsGroupBlending;
@property (nonatomic) bool allowsGroupOpacity;
@property (nonatomic, readonly, copy) NSString *appliedContentSizeCategoryLimitsDescription;
@property (nonatomic) bool areChildrenFocused;
@property (nonatomic, readonly, copy) <UITraitEnvironment> *asc_layoutTraitEnvironment;
@property (nonatomic, readonly) NSLayoutYAxisAnchor *bottomAnchor;
@property (getter=_boundingPath, setter=_setBoundingPath:, nonatomic, retain) _UIBoundingPath *boundingPath;
@property (getter=_boundingPathForSubtree, nonatomic, readonly) _UIBoundingPath *boundingPathForSubtree;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (nonatomic, readonly) bool canBecomeFocused;
@property (nonatomic) struct CGPoint { double x1; double x2; } center;
@property (nonatomic, readonly) NSLayoutXAxisAnchor *centerXAnchor;
@property (nonatomic, readonly) NSLayoutYAxisAnchor *centerYAnchor;
@property (nonatomic, readonly) UIBezierPath *collisionBoundingPath;
@property (nonatomic, readonly) unsigned long long collisionBoundsType;
@property (nonatomic) long long compositingMode;
@property (getter=_isContainedInHostedFocusSystem, nonatomic, readonly) bool containedInHostedFocusSystem;
@property (getter=_contentSizeNotificationToken, setter=_setContentSizeNotificationToken:, nonatomic, retain) id contentSizeNotificationToken;
@property (nonatomic, readonly) <UICoordinateSpace> *coordinateSpace;
@property (getter=_currentScreenScale, nonatomic, readonly) double currentScreenScale;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } customAlignmentRectInsets;
@property (nonatomic) double customBaselineOffsetFromBottom;
@property (nonatomic) double customFirstBaselineOffsetFromTop;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool deliversPressesForGesturesToSuperview;
@property (nonatomic) bool deliversTouchesForGesturesToSuperview;
@property (readonly, copy) NSString *description;
@property (getter=_dynamicDropInteraction, setter=_setDynamicDropInteraction:, nonatomic) UIDropInteraction *dynamicDropInteraction;
@property (nonatomic, readonly) long long effectiveUserInterfaceLayoutDirection;
@property (nonatomic, readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } ekui_affineTransform;
@property (nonatomic, readonly) double ekui_height;
@property (nonatomic, readonly) long long ekui_horizontalSizeClass;
@property (nonatomic, readonly) long long ekui_interfaceOrientation;
@property (nonatomic, readonly) <EKUIViewHierarchy> *ekui_rootViewHierarchy;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } ekui_size;
@property (nonatomic, readonly) UIColor *ekui_tintColor;
@property (nonatomic, readonly) long long ekui_verticalSizeClass;
@property (nonatomic, readonly) double ekui_width;
@property (getter=_isEligibleForFocusInteraction, nonatomic, readonly) bool eligibleForFocusInteraction;
@property (getter=_isEligibleForFocusOcclusion, nonatomic, readonly) bool eligibleForFocusOcclusion;
@property (getter=isEnabled, nonatomic) bool enabled;
@property (nonatomic, readonly) NSLayoutYAxisAnchor *firstBaselineAnchor;
@property (getter=_focusBehavior, nonatomic, readonly) <_UIFocusBehavior> *focusBehavior;
@property (nonatomic, copy) UIFocusEffect *focusEffect;
@property (nonatomic, copy) NSString *focusGroupIdentifier;
@property (nonatomic) long long focusGroupPriority;
@property (getter=_isFocusInteractionEnabled, setter=_setFocusInteractionEnabled:, nonatomic) bool focusInteractionEnabled;
@property (nonatomic, readonly) <UIFocusItemContainer> *focusItemContainer;
@property (getter=_focusMapContainer, nonatomic, readonly) <_UIFocusRegionContainer> *focusMapContainer;
@property (getter=_focusSystem, nonatomic, readonly) UIFocusSystem *focusSystem;
@property (getter=_focusSystemSceneComponent, nonatomic, readonly) _UIFocusSystemSceneComponent *focusSystemSceneComponent;
@property (getter=_focusTouchSensitivityStyle, nonatomic, readonly) long long focusTouchSensitivityStyle;
@property (getter=isFocused, nonatomic, readonly) bool focused;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (nonatomic, readonly) <_UIGestureOwning> *gestureParent;
@property (nonatomic, readonly) NSArray *gestureRecognizers;
@property (nonatomic, readonly) bool hasContent;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSLayoutDimension *heightAnchor;
@property (nonatomic) struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; } hitTestDirectionalInsets;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } hitTestInsets;
@property (getter=bs_isHitTestingDisabled, setter=bs_setHitTestingDisabled:, nonatomic) bool hitTestingDisabled;
@property (nonatomic, retain) UIHoverStyle *hoverStyle;
@property (nonatomic, retain) UIColor *interactionTintColor;
@property (nonatomic) bool invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview;
@property (getter=_isBoundingPathNonRectangular, nonatomic, readonly) bool isBoundingPathNonRectangular;
@property (nonatomic, readonly) bool isTransparentFocusItem;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } jet_focusedFrame;
@property (nonatomic) long long juLayoutDirection;
@property (nonatomic, readonly) UIKeyboardLayoutGuide *keyboardLayoutGuide;
@property (nonatomic, readonly) UIKeyboardSceneDelegate *keyboardSceneDelegate;
@property (nonatomic, retain) UIImage *largeContentImage;
@property (nonatomic, readonly) UIImage *largeContentImage;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } largeContentImageInsets;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } largeContentImageInsets;
@property (nonatomic, copy) NSString *largeContentTitle;
@property (nonatomic, readonly, copy) NSString *largeContentTitle;
@property (nonatomic, readonly) NSLayoutYAxisAnchor *lastBaselineAnchor;
@property (nonatomic, readonly) CALayer *layer;
@property (setter=_setLayoutMarginsGuide:, nonatomic, retain) UILayoutGuide *layoutMarginsGuide;
@property (nonatomic, readonly) NSLayoutXAxisAnchor *leadingAnchor;
@property (nonatomic, readonly) NSLayoutXAxisAnchor *leftAnchor;
@property (getter=_linearFocusMovementSequences, nonatomic, readonly, copy) NSArray *linearFocusMovementSequences;
@property (getter=_maskView, setter=_setMaskView:, nonatomic, retain) UIView *maskView;
@property (nonatomic, copy) NSString *maximumContentSizeCategory;
@property (nonatomic) struct CGSize { double x1; double x2; } maximumLayoutSize;
@property (getter=_mayRemainFocused, nonatomic, readonly) bool mayRemainFocused;
@property (nonatomic, copy) NSString *minimumContentSizeCategory;
@property (nonatomic) struct CGSize { double x1; double x2; } minimumLayoutSize;
@property (nonatomic, readonly) <MKInfoCardTheme> *mk_theme;
@property (getter=_monitorsSubtree, setter=_setMonitorsSubtree:, nonatomic) bool monitorsSubtree;
@property (setter=mt_setBackgroundEffects:, nonatomic, copy) NSArray *mt_backgroundEffects;
@property (setter=mt_setCaptureGroupName:, nonatomic, copy) NSString *mt_captureGroupName;
@property (setter=mt_setContentEffects:, nonatomic, copy) NSArray *mt_contentEffects;
@property (setter=mt_setVisualEffect:, nonatomic, copy) UIVisualEffect *mt_visualEffect;
@property (nonatomic) bool neverCacheEffectiveLayoutSize;
@property (setter=nsli_setPiercingToken:) unsigned long long nsli_piercingToken;
@property (nonatomic) long long overrideUserInterfaceStyle;
@property (nonatomic, readonly) <UIFocusEnvironment> *parentFocusEnvironment;
@property (nonatomic, copy) UIPasteConfiguration *pasteConfiguration;
@property (nonatomic, readonly, copy) NSArray *preferredFocusEnvironments;
@property (getter=_preferredFocusMovementStyle, nonatomic, readonly) long long preferredFocusMovementStyle;
@property (nonatomic, readonly) UIView *preferredFocusedView;
@property (getter=_previewingSegueTemplateStorage, setter=_setPreviewingSegueTemplateStorage:, nonatomic, retain) UIStoryboardPreviewingSegueTemplateStorage *previewingSegueTemplateStorage;
@property (setter=_setReadableContentGuide:, nonatomic, retain) UILayoutGuide *readableContentGuide;
@property (nonatomic, readonly) NSLayoutXAxisAnchor *rightAnchor;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } safeAreaInsets;
@property (nonatomic, readonly) UILayoutGuide *safeAreaLayoutGuide;
@property (getter=_safeAreaWidthExceedsReadableWidth, nonatomic, readonly) bool safeAreaWidthExceedsReadableWidth;
@property (nonatomic) bool scalesLargeContentImage;
@property (nonatomic, readonly) bool scalesLargeContentImage;
@property (nonatomic) long long semanticContentAttribute;
@property (nonatomic) bool showsLargeContentViewer;
@property (nonatomic, readonly) bool showsLargeContentViewer;
@property (nonatomic) bool skipsSubviewEnumeration;
@property (readonly) Class superclass;
@property (nonatomic) long long tag;
@property (nonatomic, readonly) NSLayoutYAxisAnchor *topAnchor;
@property (nonatomic, readonly) long long tp_userInterfaceLayoutDirection;
@property (nonatomic, readonly) NSLayoutXAxisAnchor *trailingAnchor;
@property (nonatomic, readonly) UITraitCollection *traitCollection;
@property (nonatomic, readonly) <UITraitOverrides> *traitOverrides;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } transform;
@property (getter=isUserInteractionEnabled, nonatomic) bool userInteractionEnabled;
@property (getter=_viewDelegate, nonatomic, readonly) UIViewController *viewDelegate;
@property (nonatomic) bool viewTraversalMark;
@property (nonatomic) bool wantsDeepColorDrawing;
@property (nonatomic, readonly) NSLayoutDimension *widthAnchor;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

+ (void)_addHierarchyTrackingVisitor:(id)arg1;
+ (id)_appearanceWhenContainedIn:(id)arg1;
+ (void)_beginSuspendingMotionEffectsForReason:(id)arg1;
+ (id)_defaultInteractionTintColorForIdiom:(long long)arg1;
+ (void)_endSuspendingMotionEffectsForReason:(id)arg1;
+ (bool)_motionEffectsEnabled;
+ (bool)_motionEffectsSupported;
+ (void)_performForcedAppearanceModifications:(id /* block */)arg1;
+ (void)_performSystemAppearanceModifications:(id /* block */)arg1;
+ (bool)_preventsAppearanceProxyCustomization;
+ (void)_recenterMotionEffects;
+ (void)_removeHierarchyTrackingVisitor:(id)arg1;
+ (void)_setAnimatedPropertiesEnabled:(bool)arg1;
+ (void)_setShouldEnableUIKitParallaxEffects:(bool)arg1;
+ (bool)_supportsInvalidatingFocusCache;
+ (void)_updateOrientationForMotionEngine:(long long)arg1;
+ (bool)_wantsDeepColorByDefault;
+ (id)appearance;
+ (id)appearanceForTraitCollection:(id)arg1;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedIn:(Class)arg2;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedInInstancesOfClasses:(id)arg2;
+ (id)appearanceMatchingProperties:(id)arg1 whenContainedInInstancesOfClasses:(id)arg2;
+ (id)appearanceWhenContainedIn:(Class)arg1;
+ (id)appearanceWhenContainedInInstancesOfClasses:(id)arg1;
+ (void)initialize;
+ (Class)layerClass;
+ (long long)userInterfaceLayoutDirectionForSemanticContentAttribute:(long long)arg1;
+ (long long)userInterfaceLayoutDirectionForSemanticContentAttribute:(long long)arg1 relativeToLayoutDirection:(long long)arg2;

- (void).cxx_destruct;
- (id)_accessibilityHigherContrastTintColorForColor:(id)arg1;
- (unsigned long long)_accessibilityInterfaceStyleIntent;
- (unsigned long long)_accessibilityResolvedInterfaceStyle;
- (void)_accessibilitySetInterfaceStyleIntent:(unsigned long long)arg1;
- (void)_accessibilitySetResolvedInterfaceStyle:(unsigned long long)arg1;
- (id)_activeSizeToFitLayoutEngine;
- (void)_addConstraintPendingAnimatedChanges:(id)arg1;
- (void)_addMotionEffect:(id)arg1;
- (void)_alignmentRectInsetsHaveChangedForChildImageView:(id)arg1;
- (id)_alignmentRectOriginCache;
- (bool)_allowsFocusToLeaveViaHeading:(unsigned long long)arg1;
- (void)_ancestorWillUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_appearanceContainer;
- (Class)_appearanceGuideClass;
- (bool)_appearanceIsInvalid;
- (id)_appearanceTraitCollection;
- (bool)_applyKeyPathsAndRelativeValues:(id)arg1 forMotionEffect:(id)arg2;
- (void)_applyPendingTraitStorageConstraints;
- (void)_applyResolvedShape:(id)arg1;
- (void)_applyShape:(id)arg1;
- (id)_attributesForFocusRegionContent;
- (long long)_backdropMaskViewFlags;
- (id)_backdropMaskViewForColorTint;
- (id)_backdropMaskViewForFilters;
- (id)_backdropMaskViewForFlag:(long long)arg1;
- (id)_backdropMaskViewForGrayscaleTint;
- (id)_backdropMaskViews;
- (struct CGColor { }*)_backgroundCGColor;
- (double)_baselineOffsetFromBottom;
- (bool)_becomeFirstResponderWhenPossible;
- (void)_beginOcclusion:(id)arg1;
- (id)_boundsHeightVariable;
- (id)_boundsWidthVariable;
- (bool)_cachedTraitCollectionIsValid;
- (bool)_canBeParentTraitEnvironment;
- (bool)_canBecomeFirstResponderWhenPossible;
- (id)_childFocusRegionsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inCoordinateSpace:(id)arg2;
- (void)_clearBecomeFirstResponderWhenCapable;
- (void)_clearSafeAreaInsets;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_clippingRectInCoordinateSpace:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_concreteDefaultLayoutMargins;
- (id)_constraintsArray;
- (id)_constraintsExceptingSubviewAutoresizingConstraints;
- (id)_contentHeightVariable;
- (double)_contentMargin;
- (id)_contentSizeNotificationToken;
- (id)_contentWidthVariable;
- (id)_contentXOffsetVariable;
- (id)_contentYOffsetVariable;
- (double)_continuousCornerRadius;
- (double)_convertVisualAltitude:(double)arg1 fromView:(id)arg2;
- (double)_convertVisualAltitude:(double)arg1 toView:(id)arg2;
- (id)_cornerCurve;
- (double)_cornerRadius;
- (unsigned long long)_countOfFocusedAncestorTrackingViewsInSubtree;
- (unsigned long long)_countOfMotionEffectsInSubtree;
- (id)_currentFocusAnimationCoordinator;
- (long long)_currentUserInterfaceIdiom;
- (void)_decrementHiddenManagedByLayoutArrangementCount;
- (id)_defaultFocusEffect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_defaultFocusRegionFrame;
- (long long)_defaultTintAdjustmentMode;
- (bool)_definesDynamicTintColor;
- (bool)_definesTintColor;
- (void)_diagnoseFocusInteractionEligibilityForReport:(id)arg1;
- (void)_diagnoseFocusabilityForReport:(id)arg1;
- (void)_didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (bool)_disableGeometryObserverNotification;
- (bool)_dontUpdateInferredLayoutMargins;
- (bool)_drawsAsBackdropOverlay;
- (unsigned long long)_edgesPropagatingSafeAreaInsetsToSubviews;
- (void)_endOcclusion:(id)arg1;
- (id)_extantFocusItemsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_extraInfoForTraitTrace;
- (bool)_fakeShouldAnimatePropertyWithKey:(id)arg1;
- (void)_finishTrackingForAnimationRestoration;
- (double)_firstBaselineOffsetFromTop;
- (id)_firstCommonAncestorToView:(id)arg1 givenCommonAncestor:(id)arg2;
- (void)_flushConstraintsPendingAnimatedChanges;
- (id)_focusBehavior;
- (id)_focusDebugOverlayParentView;
- (id)_focusGesturesForFailureRequirements;
- (unsigned long long)_focusGuideBehaviorForFocusMovement:(id)arg1;
- (long long)_focusItemDeferralMode;
- (id)_focusMapContainer;
- (id)_focusRegionFocusSystem;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_focusRegionFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_focusRegionFrameInCoordinateSpace:(id)arg1;
- (id)_focusRegionGuides;
- (id)_focusRegionView;
- (id)_focusSystem;
- (id)_focusSystemSceneComponent;
- (long long)_focusTouchSensitivityStyle;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_focusableContentMargins;
- (long long)_focusedSound;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameIgnoringLayerTransform;
- (id)_frameLayoutItem;
- (id)_fulfillPromisedFocusRegion;
- (void)_gatherKeyResponders:(id)arg1 indexOfSelf:(unsigned long long*)arg2 visibilityTest:(id /* block */)arg3 passingTest:(id /* block */)arg4 subviewsTest:(id /* block */)arg5;
- (id)_generateBackdropMaskImage;
- (id)_generateBackdropMaskViewForFlag:(long long)arg1;
- (void)_geometryChanged:(const struct { int x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; struct CATransform3D { double x_6_1_1; double x_6_1_2; double x_6_1_3; double x_6_1_4; double x_6_1_5; double x_6_1_6; double x_6_1_7; double x_6_1_8; double x_6_1_9; double x_6_1_10; double x_6_1_11; double x_6_1_12; double x_6_1_13; double x_6_1_14; double x_6_1_15; double x_6_1_16; } x6; id x7; id x8; id x9; id x10; }*)arg1 forAncestor:(id)arg2;
- (bool)_hasBaseline;
- (bool)_hasLayoutArrangements;
- (long long)_hiddenManagedByLayoutArrangementCount;
- (id)_idleModeLayoutAttributes;
- (bool)_ignoreRemoveAllAnimations;
- (bool)_ignoresLayerTransformForSafeAreaInsets;
- (double)_imageButtonMargin;
- (void)_incrementHiddenManagedByLayoutArrangementCount;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_inferredLayoutMargins;
- (id)_inheritedInteractionTintColor;
- (id)_interactionTintColor;
- (id)_internalConstraints;
- (double)_internalFirstBaselineOffsetFromTop;
- (double)_internalLastBaselineOffsetFromBottom;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (void)_invalidateAppearance;
- (void)_invalidateAppearanceForSubviewsOfClass:(Class)arg1;
- (void)_invalidateAppearanceForTraitCollection:(id)arg1;
- (void)_invalidateBaselineConstraints;
- (void)_invalidateConfiguration;
- (bool)_isChargeEnabled;
- (bool)_isContainedInHostedFocusSystem;
- (bool)_isEligibleForFocusGivenAlpha;
- (bool)_isEligibleForFocusOcclusion;
- (bool)_isFocusDirectionFlippedHorizontally;
- (bool)_isFocusInteractionEnabled;
- (bool)_isFocusedOrAncestorOfFocusedView;
- (bool)_isHasBaselinePropertyChangeable;
- (bool)_isInAnimatedLayout;
- (bool)_isLazyFocusItemContainer;
- (bool)_isPromiseFocusRegion;
- (bool)_isTransparentFocusRegion;
- (id)_lastNotifiedTraitCollection;
- (id)_layoutDebuggingIdentifier;
- (id)_layoutEngine;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_layoutGuide:(id)arg1 adjustedLayoutFrameForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_layoutMarginsDidChangeFromOldMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)_layoutMarginsGuideIfExists;
- (bool)_layoutMarginsGuideIgnoresSystemMinimumMargins;
- (void)_layoutMarginsWillChange;
- (bool)_legacy_isEligibleForFocusInteraction;
- (id)_localOverrideTraitCollection;
- (id)_maskView;
- (bool)_mayRemainFocused;
- (id)_minXVariable;
- (id)_minYVariable;
- (id)_motionEffects;
- (bool)_motionEffectsAreSuspended;
- (id)_mutableLayoutArrangements;
- (id)_mutableLayoutGuides;
- (bool)_needsContentsFormatUpdate;
- (id)_nextKeyResponder;
- (id)_normalInheritedTintColor;
- (void)_noteTraitsDidChangeRecursively;
- (void)_objc_initiateDealloc;
- (id)_outlineShape;
- (id)_parentTraitEnvironment;
- (long long)_pendingHiddenCount;
- (id)_preferredConfigurationForFocusAnimation:(long long)arg1 inContext:(id)arg2;
- (double)_preferredDurationForFocusAnimation:(long long)arg1 inContext:(id)arg2;
- (double)_preferredDurationScaleFactorForFocusAnimation:(long long)arg1 inContext:(id)arg2;
- (id)_preferredFocusRegionCoordinateSpace;
- (bool)_prefersFocusContainment;
- (void)_prepareForWindowDealloc;
- (void)_prepareForWindowHostingSceneRemoval;
- (id)_previewingSegueTemplateStorage;
- (id)_previewingSegueTemplateStorageForLocation:(struct CGPoint { double x1; double x2; })arg1 inView:(id)arg2;
- (id)_previousKeyResponder;
- (void)_processDidChangeRecursivelyFromOldTraits:(id)arg1 toCurrentTraits:(id)arg2 forceNotification:(bool)arg3;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_rawLayoutMargins;
- (void)_receiveVisitor:(id)arg1;
- (void)_registerForGeometryChanges;
- (id)_registerForTraitTokenChanges:(id)arg1 withHandler:(id /* block */)arg2;
- (id)_registerForTraitTokenChanges:(id)arg1 withTarget:(id)arg2 action:(SEL)arg3;
- (void)_removeAllAnimationsIncludingSubviewsTrackingForAnimationRestoration;
- (void)_removeBackdropMaskViews;
- (void)_removeMotionEffect:(id)arg1;
- (id)_resolvedOutlineShape;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_responderExternalTouchRectForWindow:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_responderSelectionRectForWindow:(id)arg1;
- (void)_restoreRemovedAnimationsIncludingSubviews;
- (long long)_rotaryFocusMovementAxis;
- (void)_safeAreaInsetsDidChangeFromOldInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_safeAreaInsetsForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inSuperview:(id)arg2;
- (bool)_safeAreaInsetsFrozen;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_safeAreaInsetsInSuperview:(id)arg1;
- (void)_safeAreaInsetsWillChange;
- (id)_safeAreaLayoutGuideIfExists;
- (bool)_safeAreaWidthExceedsReadableWidth;
- (long long)_sceneDraggingBehaviorOnPan;
- (id)_screen;
- (void)_searchForFocusRegionsInContext:(id)arg1;
- (unsigned int)_secureName;
- (void)_setActiveSizeToFitLayoutEngine:(id)arg1;
- (void)_setAlignmentRectOriginCache:(id)arg1;
- (void)_setAppearanceIsInvalid:(bool)arg1;
- (void)_setBackdropMaskView:(id)arg1 forFlag:(long long)arg2;
- (void)_setBackdropMaskViewFlags:(long long)arg1;
- (void)_setCanBeParentTraitEnvironment:(bool)arg1;
- (void)_setChargeEnabled:(bool)arg1;
- (void)_setContentSizeNotificationToken:(id)arg1;
- (void)_setContinuousCornerRadius:(double)arg1;
- (void)_setCornerRadius:(double)arg1;
- (void)_setCountOfFocusedAncestorTrackingViewsInSubtree:(unsigned long long)arg1;
- (void)_setCountOfMotionEffectsInSubtree:(unsigned long long)arg1;
- (void)_setDontUpdateInferredLayoutMargins:(bool)arg1;
- (void)_setDrawsAsBackdropOverlay:(bool)arg1;
- (void)_setDrawsAsBackdropOverlayWithBlendMode:(long long)arg1;
- (void)_setFirstResponder:(id)arg1;
- (void)_setFocusInteractionEnabled:(bool)arg1;
- (void)_setFocusableContentMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setFrameIgnoringLayerTransform:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setIdleModeLayoutAttributes:(id)arg1;
- (void)_setIgnoresLayerTransformForSafeAreaInsets:(bool)arg1;
- (void)_setInAnimatedLayout:(bool)arg1;
- (void)_setInferredLayoutMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setInteractionTintColor:(id)arg1;
- (void)_setInternalConstraints:(id)arg1;
- (void)_setLastNotifiedTraitCollection:(id)arg1;
- (void)_setLayoutDebuggingIdentifier:(id)arg1;
- (void)_setLayoutEngine:(id)arg1;
- (void)_setLayoutMarginsGuide:(id)arg1;
- (void)_setLayoutMarginsGuideIgnoresSystemMinimumMargins:(bool)arg1;
- (void)_setLocalOverrideTraitCollection:(id)arg1;
- (void)_setMaskView:(id)arg1;
- (void)_setNeedsContentsFormatUpdate;
- (void)_setNeedsContentsFormatUpdate:(bool)arg1;
- (void)_setNeedsNonDeferredFocusUpdate;
- (void)_setPreviewingSegueTemplateStorage:(id)arg1;
- (void)_setRawLayoutMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setReadableContentGuide:(id)arg1;
- (void)_setSafeAreaInsetsFrozen:(bool)arg1;
- (void)_setSafeAreaInsetsFrozen:(bool)arg1 updateForUnfreeze:(bool)arg2;
- (void)_setSceneDraggingBehaviorOnPan:(long long)arg1;
- (void)_setShouldArchiveUIAppearanceTags:(bool)arg1;
- (void)_setShouldNotifyGeometryObserversForBaselineChanges:(bool)arg1;
- (void)_setSpeedBumpEdges:(unsigned long long)arg1;
- (void)_setTouchInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setTracksFocusedAncestors:(bool)arg1;
- (void)_setTraitStorageConstraints:(id)arg1;
- (void)_setTraitStorageSubviews:(id)arg1;
- (void)_setTransform3D:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)_setViewDelegateContentOverlayInsetsAreClean:(bool)arg1;
- (void)_setVisualAltitude:(double)arg1;
- (void)_setVisualAltitudeBias:(struct CGSize { double x1; double x2; })arg1;
- (id)_shapeInCoordinateSpace:(id)arg1;
- (bool)_shouldAlwaysDiagnoseFocusInteractionEligibility;
- (bool)_shouldAnimatePropertyAdditivelyWithKey:(id)arg1;
- (bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (bool)_shouldArchiveUIAppearanceTags;
- (bool)_shouldInvalidateBaselineConstraintsForSize:(struct CGSize { double x1; double x2; })arg1 oldSize:(struct CGSize { double x1; double x2; })arg2;
- (bool)_shouldNotifyGeometryObserversForBaselineChanges;
- (bool)_shouldUpdateFocusInContext:(id)arg1;
- (unsigned long long)_speedBumpEdges;
- (id)_stashedLayoutVariableObservations;
- (bool)_supportsBecomeFirstResponderWhenPossible;
- (long long)_systemDefaultFocusGroupPriority;
- (double)_systemSpacingBelowView:(id)arg1 multiplier:(double)arg2;
- (double)_systemSpacingBelowView:(id)arg1 systemSpacingInvalidationRecorder:(id*)arg2;
- (double)_textButtonMargin;
- (id)_textServicesResponderProxy;
- (id)_tintColorArchivingKey;
- (void)_tintColorDidChange;
- (long long)_topToBottomLeftToRightViewCompare:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_touchInsets;
- (double)_touchSloppinessFactor;
- (bool)_tracksFocusedAncestors;
- (void)_traitCollectionDidChangeInternal:(const struct _UITraitCollectionChangeDescription { id x1; id x2; id x3; bool x4; struct _UITraitCollectionTraitChanges { bool x_5_1_1; bool x_5_1_2; } x5; }*)arg1;
- (void)_traitCollectionDidChangeOnSubtreeInternal:(const struct _UITraitCollectionChangeDescription { id x1; id x2; id x3; bool x4; struct _UITraitCollectionTraitChanges { bool x_5_1_1; bool x_5_1_2; } x5; }*)arg1;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
- (void)_traitOverridesDidChange:(id)arg1;
- (id)_traitStorageConstraints;
- (id)_traitStorageSubviews;
- (id)_traitTrace;
- (id)_traitTrace:(id)arg1;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })_transform3D;
- (bool)_unapplyMotionEffect:(id)arg1;
- (void)_unregisterForGeometryChanges;
- (void)_updateCombinedInsetsIfNecessary;
- (void)_updateInferredLayoutMargins;
- (void)_updateInferredLayoutMarginsFromSuperview:(id)arg1;
- (void)_updateLayoutMarginsGuideConstraintsIfNecessary;
- (void)_updateSafeAreaInsets;
- (bool)_viewDelegateContentOverlayInsetsAreClean;
- (double)_visualAltitude;
- (struct CGSize { double x1; double x2; })_visualAltitudeBias;
- (bool)_wantsAnimationRestoration;
- (bool)_wantsDeepDrawing;
- (bool)_wantsKeyCommandsWhenDeferred;
- (void)_willUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_window;
- (void)dealloc;
- (id)nsli_boundsHeightVariable;
- (id)nsli_boundsWidthVariable;
- (id)nsli_contentHeightVariable;
- (id)nsli_contentWidthVariable;
- (id)nsli_contentXOffsetVariable;
- (id)nsli_contentYOffsetVariable;
- (id)nsli_heightVariable;
- (id)nsli_minXVariable;
- (id)nsli_minYVariable;
- (id)nsli_widthVariable;
- (id)snapshot;

// UIView (AddStickerAnimation)

+ (void)sticker_modifyAnimationsWithPreferredFrameRateRange:(struct CAFrameRateRange { float x1; float x2; float x3; })arg1 updateReason:(unsigned int)arg2 animations:(id /* block */)arg3;

// UIView (AdditionalLayoutSupport)

- (void)_accumulateViewConstraintsIntoArray:(id)arg1;
- (void)_addBoundsMatchingConstraintsForView:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_alignmentBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_alignmentFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_alignmentRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_allLayoutEngines;
- (id)_autolayoutTrace;
- (id)_autolayoutTraceAtLevel:(long long)arg1 recursively:(bool)arg2;
- (id)_autolayoutTraceRecursively:(bool)arg1;
- (double)_baselineOffsetFromNearestEdgeForLayoutAttribute:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsForAlignmentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)_canBecomeLayoutEngineDelegate;
- (void)_clearConstraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspended;
- (void)_clearLayoutVariableObservationsOnlyToSupportTAMICChange:(bool)arg1;
- (void)_configureAutolayoutFlagsNeedingLayout:(bool)arg1;
- (id)_constraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspendedCreateIfNecessary:(bool)arg1;
- (id)_constraintsValidityDescription;
- (void)_createJostledViewsIfNecessary;
- (id)_defaultLayoutDescription;
- (void)_didInvalidateIntrinsicContentSize;
- (void)_discardLayoutEngine:(id)arg1;
- (void)_faultInContentOffsetGuide;
- (bool)_forceLayoutEngineSolutionInRationalEdges;
- (void)_handleDoubleUpdateConstraintsIfNecessary;
- (void)_handleLayoutArrangementConstraintsIfNecessary;
- (void)_handleLayoutEngineHostingConstraintsIfNecessary;
- (void)_handleSizeConstraintsAsAppropriate;
- (bool)_hasLayoutEngine;
- (bool)_hostsLayoutEngine;
- (bool)_hostsLayoutEngineAllowsTAMIC_NO;
- (bool)_inSecondConstraintsPass;
- (void)_informContainerThatSubviewsNeedUpdateConstraintsNeedingLayout:(bool)arg1;
- (void)_initializeHostedLayoutEngine;
- (void)_invalidateIntrinsicContentSizeNeedingLayout:(bool)arg1;
- (bool)_isFloatingLayoutItem;
- (bool)_isUnsatisfiableConstraintsLoggingSuspended;
- (void)_is_layout;
- (bool)_is_needsLayout;
- (void)_is_setNeedsLayout;
- (id)_layoutDebuggingTitle;
- (id)_layoutDescriptionIfDifferentFromDefault;
- (id)_layoutEngineCreateIfNecessary;
- (id)_layoutEngineIfAvailable;
- (bool)_layoutEngineRelativeAlignmentRectOriginIsValid;
- (void)_mergeConstraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspendedToAncestor:(id)arg1;
- (double)_multilineContextWidth;
- (bool)_needsDoubleUpdateConstraintsPass;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_nsis_bounds;
- (struct CGSize { double x1; double x2; })_nsis_contentSize;
- (struct CGPoint { double x1; double x2; })_nsis_origin;
- (void)_parentalLayoutEngineDidChangeTo:(id)arg1;
- (bool)_preWhitetailUsesAutoresizingConstraints;
- (double)_preferredMaxLayoutWidth;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_previousFittingSizeInfo;
- (void)_recalculateStrictDescendantNeedsDoubleUpdateConstraints;
- (bool)_recordBaselineLoweringInfo;
- (id)_recursiveConstraintsTraceAtLevel:(long long)arg1;
- (id)_recursiveLayoutEngineDescription;
- (void)_recursiveUpdateConstraintsIfNeededCollectingViews:(id)arg1 forSecondPass:(bool)arg2;
- (id)_referenceView;
- (bool)_requiresExplicitLayoutMarginsGuideForAttribute:(long long)arg1 getAttributeForGuide:(int*)arg2;
- (void)_resetNeedsSystemLayoutFittingSizeUpdateInSubtreeForLayoutEngine:(id)arg1;
- (void)_resetToBeginningOfDoublePass;
- (id)_rootView;
- (void)_scheduleUpdateConstraintsPassAsEngineHostNeedingLayout:(bool)arg1;
- (void)_sendUpdateConstraintsIfNecessaryForSecondPass:(bool)arg1;
- (void)_setHostsLayoutEngine:(bool)arg1;
- (void)_setInSecondConstraintsPass:(bool)arg1;
- (void)_setMultilineContextWidth:(double)arg1;
- (void)_setNeedsUpdateConstraints;
- (void)_setNeedsUpdateConstraintsNeedingLayout:(bool)arg1;
- (void)_setPreviousFittingSizeInfo:(id)arg1;
- (void)_setSubviewWantsAutolayoutTripWantsAutolayout:(bool)arg1;
- (void)_setWantsAutolayout;
- (void)_snipDangliesWithForce:(bool)arg1 repairIfPossibleForViewThatMoved:(id)arg2 newSuperview:(id)arg3 oldSuperview:(id)arg4;
- (void)_startObservingVariablesOnlyToSupportTAMICChange:(bool)arg1;
- (void)_stopObservingVariablesOnlyToSupportTAMICChange:(bool)arg1;
- (bool)_supportsContentDimensionVariables;
- (void)_switchToLayoutEngine:(id)arg1;
- (struct CGSize { double x1; double x2; })_systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(bool*)arg4;
- (bool)_uiib_hostsLayoutEngine;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (void)_uiib_setHostsLayoutEngine:(bool)arg1;
- (id)_uili_existingBaseFrameVariables;
- (id)_uili_existingObservationEligibleLayoutVariables;
- (bool)_uili_isFocusGuide;
- (id)_uili_observableLayoutEngineForBaseFrameVariables:(bool)arg1;
- (void)_uili_removeLayoutVariableObservationsOnlyToSupportTAMICChange:(bool)arg1;
- (bool)_uili_requiresObservationForVariable:(id)arg1;
- (void)_uili_stashLayoutVariableObservation:(id)arg1 forVariable:(id)arg2;
- (void)_updateConstraintsIfNeededCollectingViews:(id)arg1 forSecondPass:(bool)arg2;
- (void)_updateConstraintsIfNeededWithViewForVariableChangeNotifications:(id)arg1;
- (void)_updateSystemConstraints;
- (bool)_useContentDimensionVariablesForConstraintLowering;
- (id)_viewForLoweringBaselineLayoutAttribute:(int)arg1;
- (bool)_wantsAutolayout;
- (bool)_wantsBaselineUpdatingFollowingConstraintsPass;
- (void)_withUnsatisfiableConstraintsLoggingSuspendedIfEngineDelegateExists:(id /* block */)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (int)nsis_orientationHintForVariable:(id)arg1;
- (bool)nsis_shouldIntegralizeVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (bool)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (unsigned long long)nsli_autoresizingMask;
- (bool)nsli_canHostIndependentVariableAnchor;
- (id)nsli_constraintWithAnchor:(id)arg1 relatedBy:(long long)arg2 toAnchor:(id)arg3 withSystemSpacingMultipliedBy:(double)arg4;
- (struct CGSize { double x1; double x2; })nsli_convertSizeFromEngineSpace:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })nsli_convertSizeToEngineSpace:(struct CGSize { double x1; double x2; })arg1;
- (bool)nsli_defaultResolvedValue:(double*)arg1 forSymbolicConstant:(id)arg2 inConstraint:(id)arg3 error:(id*)arg4;
- (id)nsli_description;
- (bool)nsli_descriptionIncludesPointer;
- (struct CGSize { double x1; double x2; })nsli_engineToUserScalingCoefficients;
- (bool)nsli_isCollectingConstraintChangesForLaterCoordinatedFlush:(id)arg1;
- (bool)nsli_isFlipped;
- (bool)nsli_isLegalConstraintItem;
- (bool)nsli_isRTL;
- (id)nsli_layoutAnchorForAttribute:(long long)arg1;
- (id)nsli_layoutEngine;
- (bool)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 container:(id)arg4;
- (bool)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4;
- (bool)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4 onBehalfOfLayoutGuide:(id)arg5;
- (bool)nsli_resolvedValue:(double*)arg1 forSymbolicConstant:(id)arg2 inConstraint:(id)arg3 error:(id*)arg4;
- (id)nsli_superitem;

// UIView (Animation)

+ (bool)_addCompletion:(id /* block */)arg1;
+ (bool)_addCompletionWithPosition:(id /* block */)arg1;
+ (void)_addOrPerformCompletion:(id /* block */)arg1;
+ (void)_addOrPerformCompletionWithPosition:(id /* block */)arg1;
+ (id /* block */)_alongsideAnimations;
+ (void)_animateWithAttributes:(id)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_completeAnimationWithUUID:(id)arg1 duration:(double)arg2 curve:(long long)arg3 reverse:(bool)arg4;
+ (id)_currentAnimationAttributes;
+ (long long)_currentAnimationCurve;
+ (double)_currentAnimationDuration;
+ (id)_currentAnimationSettings;
+ (id)_currentViewAnimationState;
+ (id)_defaultUIViewActionForLayer:(id)arg1 forKey:(id)arg2;
+ (id)_defaultUIViewAnimationForLayer:(id)arg1 forKey:(id)arg2;
+ (int)_degreesToRotateFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
+ (void)_disableAnimationTracking:(id)arg1;
+ (void)_disableAnimationTracking:(id)arg1 clearTrackedAnimations:(bool)arg2;
+ (double)_durationForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
+ (id)_enableAnimationTracking;
+ (id)_enableAnimationTracking:(bool)arg1;
+ (void)_finalizeStoppedAnimationWithUUID:(id)arg1 reverseAnimation:(bool)arg2;
+ (void)_finalizeStoppedAnimationWithUUID:(id)arg1 reverseAnimation:(bool)arg2 state:(id)arg3 performCompletionsImmediately:(bool)arg4;
+ (void)_finishAnimationTracking;
+ (bool)_hasActiveAnimationContext;
+ (void)_inheritAnimationParameters;
+ (bool)_isAnimationTracking;
+ (bool)_isInAnimationBlock;
+ (bool)_isInAnimationBlockWithAnimationsEnabled;
+ (bool)_isInKeyframeAnimationBlockWithAnimationsEnabled;
+ (bool)_isInRetargetableAnimationBlock;
+ (void)_performWithAnimation:(id /* block */)arg1;
+ (id)_performWithAnimationTracking:(id /* block */)arg1;
+ (void)_performWithDurationOverride:(double)arg1 animations:(id /* block */)arg2;
+ (void)_performWithState:(id)arg1 trackingIdentifier:(id)arg2 duration:(double)arg3 delay:(double)arg4 animations:(id /* block */)arg5;
+ (void)_performWithoutAnimation:(id /* block */)arg1;
+ (void)_setAlongsideAnimations:(id /* block */)arg1;
+ (void)_setAlongsideAnimations:(id /* block */)arg1 toRunByEndOfBlock:(id /* block */)arg2;
+ (void)_setAnimationAttributes:(id)arg1;
+ (void)_setAnimationAttributes:(id)arg1 skipDelegateAssignment:(bool)arg2;
+ (id)_startAnimationTracking;
+ (void)_stopAnimationWithUUID:(id)arg1;
+ (void)_updateModelValuesForAnimationWithUUID:(id)arg1 useInitialValues:(bool)arg2 animatable:(bool)arg3 stateBlock:(id /* block */)arg4 animationBlock:(id /* block */)arg5;
+ (bool)areAnimationsEnabled;
+ (void)beginAnimations:(id)arg1;
+ (void)beginAnimations:(id)arg1 context:(void*)arg2;
+ (void)commitAnimations;
+ (void)disableAnimation;
+ (void)enableAnimation;
+ (void)endAnimations;
+ (double)inheritedAnimationDuration;
+ (void)performWithoutAnimation:(id /* block */)arg1;
+ (void)setAnimationAutoreverses:(bool)arg1;
+ (void)setAnimationBeginsFromCurrentState:(bool)arg1;
+ (void)setAnimationCurve:(long long)arg1;
+ (void)setAnimationDelay:(double)arg1;
+ (void)setAnimationDelegate:(id)arg1;
+ (void)setAnimationDidStopSelector:(SEL)arg1;
+ (void)setAnimationDuration:(double)arg1;
+ (void)setAnimationFrameInterval:(double)arg1;
+ (void)setAnimationFromCurrentState:(bool)arg1;
+ (void)setAnimationPosition:(struct CGPoint { double x1; double x2; })arg1;
+ (void)setAnimationPreventsAdditive:(bool)arg1;
+ (void)setAnimationRepeatAutoreverses:(bool)arg1;
+ (void)setAnimationRepeatCount:(float)arg1;
+ (void)setAnimationStartDate:(id)arg1;
+ (void)setAnimationStartTime:(double)arg1;
+ (void)setAnimationTransition:(long long)arg1 forView:(id)arg2 cache:(bool)arg3;
+ (void)setAnimationWillStartSelector:(SEL)arg1;
+ (void)setAnimationsEnabled:(bool)arg1;

- (id)_basicAnimationWithKeyPath:(id)arg1;
- (void)_clearAnimationFilters;
- (id)_deferredAnimationForKey:(id)arg1;
- (void)_enumerateDescendentViews:(id /* block */)arg1;
- (void)_generateDeferredAnimations:(id)arg1;
- (id)_initialValueForKey:(id)arg1;
- (id)_initialValueForLayer:(id)arg1 keyPath:(id)arg2 usePresentationValue:(bool)arg3;
- (bool)_isInTransitionBlock;
- (void)_removeAllAnimations:(bool)arg1;
- (void)_removePropertyAnimationsForLayerKeyPath:(id)arg1;

// UIView (Deprecated)

+ (void)setAnimationTransition:(long long)arg1 forView:(id)arg2;

// UIView (DictationSPI)

- (bool)_disableDictationTouchCancellation;
- (void)_setDisableDictationTouchCancellation:(bool)arg1;

// UIView (Dragging)

- (id)_firstAncestorInteractionConformingToProtocol:(id)arg1;

// UIView (Geometry)

- (void)_applyISEngineLayoutValuesToBoundsOnly:(bool)arg1;
- (bool)_clipsGlyphPathFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 shouldContinueSuperviewTraversal:(bool*)arg2;
- (id)_hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;
- (bool)_needsLayoutOnAnimatedFrameChangeForNewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_resizeWithOldSuperviewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setFrameWithAlignmentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)_unconditionallyWantsSetBoundsFromISEngineLayout;

// UIView (Hierarchy)

+ (void)_testIfFirstView:(id)arg1 secondView:(id)arg2 areDescendantsOfView:(id)arg3 results:(bool)arg4;

- (bool)_allowsHighContrastForBackgroundColor;
- (bool)_associatedViewControllerForwardsAppearanceCallbacks:(id)arg1 performHierarchyCheck:(bool)arg2 isRoot:(bool)arg3;
- (id)_backgroundColor;
- (void)_didRemoveSubview:(id)arg1;
- (bool)_isInLayoutSubviews;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 copySublayers:(bool)arg4;
- (void)_promoteSelfOrDescendantToFirstResponderIfNecessary;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectToScrollToVisibleInCellInWindow:(id)arg1;
- (void)_setAllowsHighContrastForBackgroundColor:(bool)arg1;
- (void)_setBackgroundColor:(id)arg1;
- (void)_setTraitStorageList:(id)arg1;
- (void)_setViewsJostledDuringUpdateConstraintsPass:(id)arg1;
- (id)_viewsJostledDuringUpdateConstraintsPass;
- (id)_viewsJostledDuringUpdateConstraintsPassSuppressingDebugAssertion:(bool)arg1;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)_willMoveToWindow:(id)arg1;
- (void)_willMoveToWindow:(id)arg1 withAncestorView:(id)arg2;
- (void)_willRemoveSubview:(id)arg1;

// UIView (InProcessAnimations_Internal)

- (void)_setPresentationValue:(id)arg1 forKey:(id)arg2;
- (void)_setPresentationValue:(id)arg1 velocity:(id)arg2 preferredFrameRateRangeMaximum:(int)arg3 forKey:(id)arg4;

// UIView (Internal)

+ (void)_animateByRetargetingAnimations:(id /* block */)arg1 completion:(id /* block */)arg2;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)_animateUsingDefaultTimingWithOptions:(unsigned long long)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateUsingSpringBehavior:(id)arg1 tracking:(bool)arg2 animations:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)_animateUsingSpringInteractive:(bool)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateUsingSpringWithDampingRatio:(double)arg1 response:(double)arg2 tracking:(bool)arg3 dampingRatioSmoothing:(double)arg4 responseSmoothing:(double)arg5 targetSmoothing:(double)arg6 projectionDeceleration:(double)arg7 animations:(id /* block */)arg8 completion:(id /* block */)arg9;
+ (void)_animateUsingSpringWithDampingRatio:(double)arg1 response:(double)arg2 tracking:(bool)arg3 dampingRatioSmoothing:(double)arg4 responseSmoothing:(double)arg5 targetSmoothing:(double)arg6 projectionDeceleration:(double)arg7 retargetImpulse:(double)arg8 animations:(id /* block */)arg9 completion:(id /* block */)arg10;
+ (void)_animateUsingSpringWithDampingRatio:(double)arg1 response:(double)arg2 tracking:(bool)arg3 initialDampingRatio:(double)arg4 initialResponse:(double)arg5 dampingRatioSmoothing:(double)arg6 responseSmoothing:(double)arg7 targetSmoothing:(double)arg8 projectionDeceleration:(double)arg9 animations:(id /* block */)arg10 completion:(id /* block */)arg11;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 mass:(double)arg4 stiffness:(double)arg5 damping:(double)arg6 initialVelocity:(double)arg7 animations:(id /* block */)arg8 completion:(id /* block */)arg9;
+ (void)_animateUsingSpringWithTension:(double)arg1 friction:(double)arg2 interactive:(bool)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)_animateWithAnimationAndComposerGetter:(id /* block */)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateWithAnimationAndComposerGetter:(id /* block */)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3 animationStateSetup:(id /* block */)arg4;
+ (void)_animateWithFrictionBounceAnimations:(id /* block */)arg1 completion:(id /* block */)arg2;
+ (void)_createTransformerWithInputAnimatableProperties:(id)arg1 modelValueSetter:(id /* block */)arg2 presentationValueSetter:(id /* block */)arg3;
+ (void)_createTransformerWithInputAnimatableProperties:(id)arg1 presentationValueChangedCallback:(id /* block */)arg2;
+ (void)_createUnsafeTransformerWithInputAnimatableProperties:(id)arg1 modelValueSetter:(id /* block */)arg2 presentationValueSetter:(id /* block */)arg3;
+ (id)_disabledColorForTintColor:(id)arg1;
+ (void)_initializeForIdiom:(long long)arg1;
+ (void)_performWithoutRetargetingAnimations:(id /* block */)arg1;
+ (void)_registerClassForIdiomInitializationIfNeccessary;
+ (void)animateBridgedWithContext:(id)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;

- (id)_actingGestureParent;
- (id)_actingParentViewForGestureRecognizers;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (bool)_allowsArchivingAsSubview;
- (bool)_alwaysHandleScrollerMouseEvent;
- (void)_animatePropertyWithKey:(id)arg1 currentValue:(id)arg2 targetValue:(id)arg3 newValueCallback:(id /* block */)arg4;
- (bool)_appliesExclusiveTouchToSubviewTree;
- (void)_applyAppearanceInvocations;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsForSceneDraggingConstrainedToSafeArea:(bool)arg1;
- (bool)_canDrawContent;
- (bool)_canHandleStatusBarTouchAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_canHostViewControllerContentScrollView;
- (bool)_canSkipTraitsAndOverlayUpdatesForViewControllerToNotifyOnLayoutResetState:(bool)arg1;
- (void)_collectKeyViews:(id)arg1;
- (void)_collectKeyViews:(id)arg1 visibilityTest:(id /* block */)arg2 passingTest:(id /* block */)arg3;
- (void)_collectKeyViews:(id)arg1 visibilityTest:(id /* block */)arg2 passingTest:(id /* block */)arg3 subviewsTest:(id /* block */)arg4;
- (bool)_containedInAbsoluteResponderChain;
- (bool)_controlsOwnScaleFactor;
- (double)_currentScreenScale;
- (bool)_delaysTouchesForSystemGestures;
- (long long)_depthComparison:(id)arg1;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(bool)arg3;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (id)_disabledColor;
- (id)_encodableSubviews;
- (void)_encodeBackgroundColorWithCoder:(id)arg1;
- (void)_encodeFrameWithCoder:(id)arg1;
- (void)_ensureViewsAreInstalledInRelativeOrder:(id*)arg1 viewCount:(long long)arg2 insertionStartIndex:(long long)arg3;
- (id)_eventReceivingWindow;
- (id)_firstResponder;
- (bool)_gestureRecognizerShouldReceiveTouch:(id)arg1;
- (id)_gestureRecognizers;
- (id)_initWithLayer:(id)arg1;
- (id)_interceptEvent:(id)arg1;
- (id)_interceptMouseEvent:(struct __GSEvent { }*)arg1;
- (void)_invalidateSubviewCache;
- (bool)_isAncestorOfFirstResponder;
- (bool)_isGestureOwningType:(long long)arg1;
- (bool)_isInAWindow;
- (bool)_isInExclusiveTouchSubviewTree;
- (bool)_isMemberOfViewControllerHierarchy:(id)arg1;
- (bool)_isRootForKeyResponderCycle;
- (bool)_isView;
- (void)_monitoredView:(id)arg1 didMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_monitoredView:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (bool)_monitorsSubtree;
- (bool)_monitorsView:(id)arg1;
- (id)_nativeInteractions;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)_presentationControllerToNotifyOnLayoutSubviews;
- (id)_projectedTargetForKey:(id)arg1 decelerationFactor:(double)arg2;
- (id)_providedFocusFallbackScroller;
- (void)_recursivelyNameLayerTree;
- (void)_removeAllRetargetableAnimations:(bool)arg1;
- (void)_replaceLayer:(id)arg1;
- (id)_rootForKeyResponderCycle;
- (id)_scroller;
- (void)_setDelaysTouchesForSystemGestures:(bool)arg1;
- (void)_setInterceptMouseEvent:(bool)arg1;
- (void)_setIsAncestorOfFirstResponder:(bool)arg1;
- (void)_setMonitorsSubtree:(bool)arg1;
- (void)_setPresentationControllerToNotifyOnLayoutSubviews:(id)arg1;
- (void)_setTargetVelocity:(id)arg1 forKey:(id)arg2;
- (void)_setUserInterfaceIdiom:(long long)arg1;
- (void)_setVelocity:(id)arg1 forKey:(id)arg2;
- (bool)_shouldApplyExclusiveTouch;
- (bool)_shouldDecodeSubviews;
- (bool)_shouldDelayTouchForSystemGestures:(id)arg1;
- (bool)_shouldIgnoreAutofillSave;
- (bool)_shouldInheritScreenScaleAsContentScaleFactor;
- (bool)_shouldResignFirstResponderWithInteractionDisabled;
- (bool)_shouldUseViewForSceneDraggingBehavior;
- (bool)_subclassImplementsDrawRect;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)arg1;
- (bool)_subviewPreventsSkipLayout:(id)arg1;
- (id)_targetVelocityForKey:(id)arg1;
- (bool)_touchesInsideShouldHideCalloutBar;
- (void)_unsubscribeToScrollNotificationsIfNecessary:(id)arg1;
- (long long)_userInterfaceIdiom;
- (id)_velocityForKey:(id)arg1;
- (id)_viewControllerForAncestor;
- (id)_viewControllerToNotifyOnLayoutSubviews;
- (id)_viewDelegate;
- (void)_viewDidMoveFromScreen:(id)arg1 toScreen:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_visualAltitudeSensitiveBoundsWithInfiniteEdges:(unsigned long long)arg1;
- (void)_webCustomViewWillBeRemovedFromSuperview;

// UIView (MaterialThemes)

- (long long)_backgroundMergeBehavior;
- (long long)_overrideUserInterfaceRenderingMode;
- (void)_setBackgroundMergeBehavior:(long long)arg1;
- (void)_setOverrideUserInterfaceRenderingMode:(long long)arg1;
- (void)_setShouldAdaptToMaterials:(bool)arg1;
- (bool)_shouldAdaptToMaterials;

// UIView (MultiLayer)

- (id)_allSublayers;
- (id)_allSubviews;
- (id)_outermostLayer;

// UIView (Rendering)

+ (void)flush;
+ (void)throttledFlush;

- (void*)_createIOSurfaceWithPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_enableLayerKitPatternDrawing:(bool)arg1;
- (bool)_ignoreBackdropViewsWhenHiding;
- (id)_imageFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_imageFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 gamut:(long long)arg2;
- (bool)_isHiddenForReuse;
- (bool)_prefersDrawingWithForcedScaleFactorInClassicMode;
- (void)_resetContentRect;
- (void)_resetContentStretch;
- (void)_setContentRectInPixels:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forContentSize:(struct CGSize { double x1; double x2; })arg2;
- (void)_setContentStretchInPixels:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forContentSize:(struct CGSize { double x1; double x2; })arg2 shouldTile:(bool)arg3;
- (void)_setHiddenForReuse:(bool)arg1;
- (void)_setIgnoreBackdropViewsWhenHiding:(bool)arg1;
- (void)_setShouldRasterize:(bool)arg1;

// UIView (ScrollNotification)

- (void)_didScroll;
- (void)_observeScrollViewDidScroll:(id)arg1;

// UIView (StatusBarAdditions_Internal)

- (void)_ui_addSubLayoutItem:(id)arg1;
- (void)_ui_addToView:(id)arg1 atIndex:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_ui_bounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_ui_frame;
- (void)_ui_insertSubLayoutItem:(id)arg1 atIndex:(long long)arg2;
- (void)_ui_removeFromParentLayoutItem;
- (id)_ui_superview;
- (bool)_ui_usesManualLayout;
- (id)_ui_view;

// UIView (SyntheticEvents)

- (id)_scriptingInfo;

// UIView (UIAccessibilityInvertColorsInternal)

- (bool)_ancestorHasInvertFilterApplied;

// UIView (UIActivityItemsConfiguration_Private)

- (id)_activityItemsConfigurationAtLocation:(struct CGPoint { double x1; double x2; })arg1;

// UIView (UIAutolayoutTAMIC_NO_EngineHosting)

+ (bool)_hostLayoutEngineOnlyTAMIC_YES;
+ (void)_resetHostLayoutEngineOnlyTAMIC_YES;
+ (void)_setHostLayoutEngineOnlyTAMIC_YES;

// UIView (UIAutoscrollAdditions)

- (id)_enclosingScrollableScrollerIncludingSelf;
- (id)_enclosingScrollerIncludingSelf;
- (bool)_isScrollingEnabled;

// UIView (UICatalystMacIdiomUnsupported_Internal)

- (void)_throwForUnsupportedNonMacIdiomBehaviorWithReason:(id)arg1;

// UIView (UICatalystMacIdiomUnsupported_Private)

+ (bool)_allowsUnsupportedMacIdiomBehavior;
+ (void)_setAllowsUnsupportedMacIdiomBehavior:(bool)arg1;

// UIView (UIConstraintBasedLayout)

+ (bool)requiresConstraintBasedLayout;

- (id)_alignmentDebuggingOverlayCreateIfNecessary:(bool)arg1;
- (void)_autoresizingConstraints_frameDidChange;
- (void)_calculateSubviewAlignmentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 superviewAlignmentBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 forAutoresizingMask:(unsigned long long)arg3 preservingNonzeroSuperviewAlignmentBoundsOriginForCompatibility:(bool)arg4;
- (struct CGSize { double x1; double x2; })_calculatedSystemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(bool*)arg4;
- (void)_constantsForHorizontalAutoresizingConstraints:(double*)arg1 :(double*)arg2;
- (void)_constantsForVerticalAutoresizingConstraints:(double*)arg1 :(double*)arg2;
- (void)_constraints_subviewWillChangeSuperview:(id)arg1;
- (id)_containerForContentSizeConstraints;
- (struct CGSize { double x1; double x2; })_contentCompressionResistancePriorities;
- (bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (struct CGSize { double x1; double x2; })_contentHuggingPriorities;
- (id)_debuggableDescriptionForConstraintsAffectingAxis:(long long)arg1;
- (id)_debuggableDescriptionForConstraintsAffectingHorizontalAxis;
- (id)_debuggableDescriptionForConstraintsAffectingVerticalAxis;
- (id)_descendantWithAmbiguousLayout;
- (id)_descriptionForLayoutTrace;
- (void)_disableLayoutFlushing;
- (void)_enableLayoutFlushing;
- (void)_engineHostConstraints_frameDidChange;
- (id)_engineHostingWidthConstraint;
- (void)_faultInGuidesForConstraint:(id)arg1;
- (bool)_forwardsSystemLayoutFittingSizeToContentView:(id)arg1;
- (bool)_hasAmbiguousLayout;
- (void)_initializeLayoutEngine;
- (struct CGSize { double x1; double x2; })_intrinsicSizeWithinSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_invalidateLayoutEngineHostConstraints;
- (bool)_isManuallyResizedBySuperview;
- (id)_layoutEngineHostConstraints;
- (bool)_layoutEngine_isEngineMergingAllowedBetweenEngine:(id)arg1 itemEngine:(id)arg2 forConstraint:(id)arg3 initialView:(id)arg4;
- (id)_layoutVariablesWithAmbiguousValue;
- (void)_makeTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(bool)arg2 returningConstraintsForViewsNeedingSecondPass:(id*)arg3 currentTargetWidth:(double)arg4;
- (float)_priorityForEngineHostConstraints;
- (void)_recursiveInvalidateDescendantsNeedingDoubleUpdateConstraintsCollectingViews:(id)arg1;
- (void)_relaxLayoutEngineHostConstraintsForAxis:(long long)arg1;
- (void)_resetLayoutEngineHostConstraintsForAxis:(long long)arg1 collectingViews:(id)arg2;
- (void)_scheduleFaultingInGuidesForConstraint:(id)arg1;
- (void)_setContentCompressionResistancePriorities:(struct CGSize { double x1; double x2; })arg1;
- (void)_setContentHuggingPriorities:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })_systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)_uiib_invalidateAutoresizingConstraints;
- (bool)_uiib_tryToAddConstraint:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (void)_updateLayoutEngineHostConstraints;
- (void)_viewHierarchyUnpreparedForConstraint:(id)arg1;
- (void)nsli_addConstraint:(id)arg1;
- (id)nsli_installedConstraints;
- (id)nsli_layoutMarginsItem;
- (double)nsli_marginOffsetForAttribute:(long long)arg1;
- (bool)nsli_removeConstraint:(id)arg1;

// UIView (UIConstraintBasedLayout_EngineDelegate)

- (id)_dummyFittingSizeInfo;
- (void)_invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel;

// UIView (UIContentSizeCategoryLimit)

- (id)_appliedContentSizeCategoryLimitsDescription;
- (void)_contentSizeCategoryLimitsDidChange;
- (id)_maximumContentSizeCategory;
- (id)_minimumContentSizeCategory;
- (void)_setMaximumContentSizeCategory:(id)arg1;
- (void)_setMinimumContentSizeCategory:(id)arg1;

// UIView (UIDebugging)

+ (bool)_toolsDebugShouldDetectClippedViews;

- (bool)_UIViewDebuggingIsViewClipping;
- (id)_backdropGroups;
- (void)_detectAndHandleClippedView;
- (void)_dumpClippedViewWithScreenshotIfNecessary;
- (id)_parentDescription;
- (bool)_shouldAppendTextInViewDescription;
- (void)_strokeClippedViewIfNecessary;
- (id)description;

// UIView (UIDisableLayoutFlushingCount)

- (long long)_disableLayoutFlushingCount;
- (void)_setDisableLayoutFlushingCount:(long long)arg1;

// UIView (UIDragging)

- (bool)_accessibilityAddItemsToDragSessionAtPlatformPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_accessibilityAddItemsToDragSessionAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_accessibilityBeginDragAtPlatformPoint:(struct CGPoint { double x1; double x2; })arg1 endpoint:(id)arg2 completion:(id /* block */)arg3;
- (void)_accessibilityBeginDragAtPoint:(struct CGPoint { double x1; double x2; })arg1 endpoint:(id)arg2 completion:(id /* block */)arg3;
- (bool)_accessibilityCanAddItemsToDragSession;
- (bool)_accessibilityCanDrag;
- (bool)_accessibilityCanDrop;
- (id)_accessibilityDragInteractionsForAddingItems;
- (bool)_beginDragWithInteractionTouches:(id)arg1;
- (bool)_beginDragWithTouches:(id)arg1 orInitialCentroid:(struct CGPoint { double x1; double x2; })arg2 accessibilityEndpoint:(id)arg3;
- (id)_draggingSourceDelegate;
- (void)_setDraggingSourceDelegate:(id)arg1;

// UIView (UIHoverStyle_Internal)

- (id)_preferredHoverEffect;
- (id)_preferredHoverShape;
- (bool)_providesCustomPointerInteraction;

// UIView (UIInterfaceActionRepresentationView)

- (id)_enclosingInterfaceActionGroupView;
- (id)_enclosingInterfaceActionRepresentationView;

// UIView (UIKB_UIViewExtras)

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessoryViewFrame;
- (unsigned long long)_clipCorners;
- (unsigned long long)_clipCornersOfView:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_compatibleBounds;
- (void)_convertToAutolayoutSizingIfNecessary;
- (void)_didChangeKeyplaneWithContext:(id)arg1;
- (double)_findAutolayoutHeightConstraint;
- (bool)_hasAutolayoutHeightConstraint;
- (id)_inheritedRenderConfig;
- (id)_kb_description;
- (bool)_lightStyleRenderConfig;
- (void)_removeAutolayoutSizingConstraints;
- (id)_rootInputWindowController;
- (struct CGVector { double x1; double x2; })_scaleFromLayerTransforms;
- (void)_setAccessoryViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setRenderConfig:(id)arg1;

// UIView (UIKitManual)

- (bool)__isKindOfUIView;
- (id)_layer;

// UIView (UIKit_StandardEditActions)

- (bool)_canPerformDefaultImplementationForStandardEditAction:(SEL)arg1;
- (id)_findInteractionIfExists;
- (bool)_hasDefaultImplementationForStandardEditAction:(SEL)arg1;
- (bool)_isFindAction:(SEL)arg1;

// UIView (UILargeContentViewerInternal)

- (void)_decodeLargeContentViewerPropertiesWithCoder:(id)arg1;
- (void)_encodeLargeContentViewerPropertiesWithCoder:(id)arg1;
- (id)_largeContentStoredProperties;
- (id)_largeContentStoredPropertiesCreatingIfNecessary:(bool)arg1;
- (id)_largeContentViewerGestureManager;
- (void)_setLargeContentStoredProperties:(id)arg1;
- (void)_setLargeContentViewerGestureManager:(id)arg1;

// UIView (UILargeContentViewerPrivate)

- (id)_largeContentViewerItemAtPoint:(struct CGPoint { double x1; double x2; })arg1;

// UIView (UINavigationBarAdditions)

- (void)_uinavigationbar_prepareToAppearInNavigationItem:(id)arg1 onLeft:(bool)arg2;

// UIView (UIReferenceLibraryViewController_UIViewExtensions)

+ (id)_viewWithLayoutConstraints;

- (void)_constrainViewToSuperview;

// UIView (UIScrollAdditions)

- (bool)_shouldEnclosedScrollViewFlashIndicators:(id)arg1;

// UIView (UISystemStatusUISupport)

- (bool)_StatusBar_isInVisibleHierarchy;

// UIView (UITextEffectsWindowAdditions)

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_convertViewPointToSceneSpaceForKeyboard:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)_keyboardOrientation;

// UIView (UIViewAnimationWithBlocks)

+ (void)_animateWithAnimationSettings:(id)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 start:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 factory:(id)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_animateWithFilter:(int)arg1 filterView:(id)arg2 filterValue:(double)arg3 duration:(double)arg4 delay:(double)arg5 options:(unsigned long long)arg6 completion:(id /* block */)arg7;
+ (bool)_shouldTrackActionWithAnimator:(id)arg1;
+ (bool)_shouldTrackAnimationsWithAnimator;
+ (void)_transitionWithView:(id)arg1 duration:(double)arg2 options:(unsigned long long)arg3 transitionOptions:(id)arg4 completion:(id /* block */)arg5;
+ (void)animateWithDuration:(double)arg1 animations:(id /* block */)arg2;
+ (void)animateWithDuration:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 usingSpringWithDamping:(double)arg3 initialSpringVelocity:(double)arg4 options:(unsigned long long)arg5 animations:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)animateWithSpringDuration:(double)arg1 bounce:(double)arg2 initialSpringVelocity:(double)arg3 delay:(double)arg4 options:(unsigned long long)arg5 animations:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)conditionallyAnimate:(bool)arg1 withAnimation:(id /* block */)arg2 layout:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)modifyAnimationsWithRepeatCount:(double)arg1 autoreverses:(bool)arg2 animations:(id /* block */)arg3;
+ (void)performSystemAnimation:(unsigned long long)arg1 onViews:(id)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned long long)arg4 completion:(id /* block */)arg5;
+ (void)transitionWithView:(id)arg1 duration:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;

// UIView (UIViewAnimationWithBlocksPrivate)

+ (void)_conditionallyModifyAnimations:(bool)arg1 withPreferredFrameRateRange:(struct CAFrameRateRange { float x1; float x2; float x3; })arg2 updateReason:(unsigned int)arg3 animations:(id /* block */)arg4;
+ (void)_modifyAnimationsByDecomposingGeometricTypes:(bool)arg1 animations:(id /* block */)arg2;
+ (void)_modifyAnimationsWithPreferredFrameRateRange:(struct CAFrameRateRange { float x1; float x2; float x3; })arg1 reason:(id)arg2 animations:(id /* block */)arg3;
+ (void)_modifyAnimationsWithPreferredFrameRateRange:(struct CAFrameRateRange { float x1; float x2; float x3; })arg1 updateReason:(unsigned int)arg2 animations:(id /* block */)arg3;

// UIView (UIViewAnimation_ForSystemShellOnly)

+ (double)_durationForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2 withBaseDuration:(double)arg3;

// UIView (UIViewBoundingPathSupport)

- (void)_addBoundingPathChangeObserver:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_inscribedRectInBoundingPathByInsettingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 onEdges:(unsigned long long)arg2 withOptions:(unsigned long long)arg3;
- (bool)_isBoundingPathNonRectangular;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_largestInscribedRectInBoundingPathWithCenter:(struct CGPoint { double x1; double x2; })arg1 aspectRatio:(double)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_minimumSafeAreaInsets;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectTuckedAgainstBoundingPathEdge:(unsigned long long)arg1 withSize:(double)arg2 cornerRadii:(struct UIRectCornerRadii { double x1; double x2; double x3; double x4; })arg3 minimumPadding:(double)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectTuckedInBoundingPathCorner:(unsigned long long)arg1 withSize:(struct CGSize { double x1; double x2; })arg2 cornerRadii:(struct UIRectCornerRadii { double x1; double x2; double x3; double x4; })arg3 minimumPadding:(double)arg4;
- (void)_removeBoundingPathChangeObserver:(id)arg1;
- (bool)_usesMinimumSafeAreas;

// UIView (UIViewBoundingPathSupportInternal)

- (id)_boundingPath;
- (id)_boundingPathForSubtree;
- (id)_effectiveBoundingPathAndBoundingPathView:(id*)arg1;
- (void)_setBoundingPath:(id)arg1;

// UIView (UIViewKeyframeAnimations)

+ (void)addKeyframeWithRelativeStartTime:(double)arg1 relativeDuration:(double)arg2 animations:(id /* block */)arg3;
+ (void)animateKeyframesWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;

// UIView (UIViewLayoutConstraintCreation)

- (id)_layoutRect;

// UIView (UIViewRTL)

+ (bool)_enableLegacyRTL;
+ (bool)_enableRTL;
+ (bool)_legacyRTLPreferenceEnabled;

- (bool)_shouldReverseLayoutDirection;

// UIView (UIViewStyleAdditions)

- (int)_style;

// UIView (UIView_ForSpringBoardOnly)

- (id)_containingScrollView;

// UIView (ViewService)

- (bool)_allowsLinkPreviewInteractionInViewServices;

// UIView (VisualDescriptionAdditions)

- (id)_visualRecursiveDescription;

// UIView (XcodeDebuggerSupport)

+ (void)_enableToolsDebugAlignmentRects:(bool)arg1;
+ (void)_enableToolsDebugColorViewBounds:(bool)arg1;
+ (bool)_toolsDebugAlignmentRects;
+ (bool)_toolsDebugColorViewBounds;

- (id)_colorViewBoundsOverlayCreateIfNecessary:(bool)arg1;
- (id)_hierarchyRepresentation;
- (void)_removeColorViewBoundsOverlays;
- (id)_representationOfHierarchyForXcode;

// UIView (_UIBarCustomizationChiclet)

- (struct CGPoint { double x1; double x2; })_getSourceCenter;
- (void)_setSourceCenter:(struct CGPoint { double x1; double x2; })arg1;

// UIView (_UIButtonBarItemLayout)

- (double)_widthForButtonBarItemLayout;

// UIView (_UICollectionViewRTLMirroring)

- (bool)_flipsHorizontalAxis;
- (void)_setFlipsHorizontalAxis:(bool)arg1;

// UIView (_UIConstraintBasedLayoutEmbedding)

- (unsigned long long)_axesForDerivingIntrinsicContentSizeFromLayoutSize;
- (struct { double x1; double x2; })_baselineOffsetsAtSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)_layoutHeightDependsOnWidth;
- (struct CGSize { double x1; double x2; })_layoutSizeThatFits:(struct CGSize { double x1; double x2; })arg1 fixedAxes:(unsigned long long)arg2;
- (bool)_wantsConstraintBasedLayout;

// UIView (_UIConstraintBasedLayoutMeasuring)

- (void)_measureViewWithSize:(struct CGSize { double x1; double x2; })arg1 temporaryConstraints:(id)arg2 suspendingSystemConstraints:(bool)arg3 withOptimizedEngineBlock:(id /* block */)arg4;

// UIView (_UIDragEventSupport)

- (id)_dynamicDropInteraction;
- (void)_setDynamicDropInteraction:(id)arg1;

// UIView (_UIDynamicUserInterfaceStyleSPI)

- (void)_dynamicUserInterfaceTraitDidChange;
- (long long)_overrideUserInterfaceStyle;
- (long long)_overrideVibrancyTrait;
- (void)_setOverrideUserInterfaceStyle:(long long)arg1;
- (void)_setOverrideVibrancyTrait:(long long)arg1;

// UIView (_UIFallbackEnvironment)

- (void*)_fallbackTraitCollection;

// UIView (_UIFlocker)

- (id)_getGhostPortal;
- (void)_setGhostPortal:(id)arg1;

// UIView (_UIKitLayoutSpacing)

- (double)_defaultAutolayoutSpacing;
- (bool)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long*)arg1;
- (bool)_hasFontInfoForVerticalBaselineSpacing;
- (double)_paddingForBaselineSpacingFromEdge:(int)arg1 toNeighborEdge:(int)arg2;

// UIView (_UIKitLayoutSpacing_Private)

- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 inContainer:(id)arg3 isGuide:(bool)arg4;
- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 nextToNeighbor:(id)arg3 edge:(int)arg4 attribute:(long long)arg5 multiplier:(double)arg6;

// UIView (_UIKitViewLandmarks)

- (bool)__isLandmarkView;

// UIView (_UILACanvasSupport)

- (double)_calculatedIntrinsicHeight;
- (double)_proportionalFillLengthForOrderedArrangement:(id)arg1 relevantParentAxis:(long long)arg2;
- (void)_vendedBaselineViewDidMoveForFirst:(bool)arg1;
- (void)_vendedBaselineViewParametersDidChange;

// UIView (_UILayoutArrangementInternalAdditions)

- (bool)_la_isVisible;

// UIView (_UIMorphingView)

- (double)_uimorphingView_getInitialAlpha;
- (void)_uimorphingView_setInitialAlpha:(double)arg1;

// UIView (_UIOldConstraintBasedLayoutSupport)

- (void)_addCenterExpressionToExpression:(id)arg1 isVertical:(bool)arg2;
- (id)_centerExpressionInContainer:(id)arg1 vertical:(bool)arg2 contentInsetScale:(double)arg3 engine:(id)arg4;
- (void)_didAddDependentConstraint:(id)arg1;
- (void)_didRemoveDependentConstraint:(id)arg1;
- (id)_dimensionExpressionInContainer:(id)arg1 vertical:(bool)arg2 useContentVariables:(bool)arg3 engine:(id)arg4;
- (id)_edgeExpressionInContainer:(id)arg1 vertical:(bool)arg2 max:(bool)arg3 contentInsetScale:(double)arg4 engine:(id)arg5;
- (id)_lowerExpressionOneLevelWithCurrentXExpression:(id)arg1 YExpression:(id)arg2 vertical:(bool)arg3 container:(id)arg4 engine:(id)arg5;
- (void)_nsis_origin:(struct CGPoint { double x1; double x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3;
- (void)_oldEngineHostConstraints_frameDidChange;
- (void)_oldUpdateLayoutEngineHostConstraints;
- (bool)_old_nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4;
- (id)_scrollViewWantingUpdateInConstraint:(id)arg1;
- (id)_viewForBaselineLayout;

// UIView (_UIOrderedLayoutArrangementInternalAdditions)

- (bool)_ola_isCandidateForMultilineTextWidthDisambiguationWhenArranged;
- (bool)_ola_shouldUseImprovedMultilineTextDisambiguation;
- (void)_ola_willApplyMultilineTextWidthDisambiguationConstraint;

// UIView (_UIPickerReuse)

- (bool)_canBeReusedInPickerView;

// UIView (_UIPointerContentEffect)

- (void)_didStopBeingDisplayedInPointerContentEffect;
- (void)_willBeginBeingDisplayedInPointerContentEffect;

// UIView (_UIPointerInteractionAssistant)

- (bool)_allowAssistanceInSubtree;

// UIView (_UIPopoverPresentationControllerSourceItem_Internal)

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameInCoordinateSpace:(id)arg1 window:(id)arg2;
- (id)_nearestViewController;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_sourceRectForPresentationInWindow:(id)arg1;
- (id)_sourceViewForPresentationInWindow:(id)arg1;

// UIView (_UISearchBarCompatibilityClippingViewSupport)

- (bool)_isKnownUISearchBarComponentContainer;

// UIView (_UIShapeConvenience)

- (id)_uis_outline;

// UIView (_UITouchForceObservable)

- (id)_touchForceObservable;

// UIView (_UIViewBacking)

- (void)_insertPrivateSubview:(id)arg1 aboveLayer:(id)arg2;
- (void)_insertPrivateSubview:(id)arg1 belowLayer:(id)arg2;
- (void)_privateSubview_setValue:(id)arg1 forObservedLayerKeyPath:(id)arg2;
- (void)_privateSubview_updateGeometryWithCenter:(struct CGPoint { double x1; double x2; })arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;

// UIView (_UIViewBackingMaterialThemesSupport)

- (bool)_hasBackgroundMaterial;

// UIView (_UIViewLayoutFeedbackDebuggingSupport)

- (void)_lfld_addConstraintsAffectingVariableValueChange:(id)arg1;
- (void)_lfld_addGeometryChangeRecordWithPropertyName:(id)arg1 value:(id)arg2;
- (void)_lfld_addSetNeedsLayoutCallStack:(id)arg1;
- (void)_lfld_addVariableChangeRecordForVariable:(id)arg1 inLayoutEngine:(id)arg2;
- (id)_lfld_constraintsAffectingVariableValueChanges;
- (long long)_lfld_count;
- (id)_lfld_currentLayoutMethodName;
- (id)_lfld_description;
- (void)_lfld_discardLastCurrentLayoutMethodName;
- (id)_lfld_geometryChangeRecords;
- (void)_lfld_incrementCount;
- (id)_lfld_minimalDescription;
- (void)_lfld_prepareToResetCountIfNecessary;
- (void)_lfld_pushCurrentLayoutMethodName:(id)arg1;
- (void)_lfld_resetCount;
- (id)_lfld_setNeedsLayoutCallStacks;
- (id)_lfld_variableChangeRecords;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Cryptexes/OS/System/Library/Frameworks/WebKit.framework/WebKit

// UIView (WKHitTesting)

- (id)_web_findDescendantViewAtPoint:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;

// UIView (WKUIViewUtilities)

- (void)_web_setSubviews:(id)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/AccessibilityBundles/AVKit.axbundle/AVKit

- (bool)_accessibilityIsUsingRemoteParentActivateAction;
- (struct CGPoint { double x1; double x2; })accessibilityActivationPoint;

// UIView (SafeCategory)

+ (Class)safeCategoryBaseClass;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/AccessibilityBundles/EventKitUIFramework.axbundle/EventKitUIFramework

// UIView (AccessibilityDragAndDrop)

- (id)_accessibilityDragAndDropTargetViewForDrop:(bool)arg1;
- (id)_accessibilityDragAndDropTargetViewForDrop:(bool)arg1 eventGestureController:(id*)arg2;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/AccessibilityBundles/UIKit.axbundle/UIKit

+ (bool)_isSerializableAccessibilityElement;

- (id)__accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (bool)__accessibilitySupportsActivateAction;
- (bool)_acceessibilityUIKitIsUserInteractionDisabled;
- (id)_accessibilityAXAttributedLabel;
- (id)_accessibilityAllDragSourceDescriptors;
- (id)_accessibilityAllDropPointDescriptors;
- (id)_accessibilityAuditIssuesWithOptions:(id)arg1;
- (id)_accessibilityAutomaticIdentifier;
- (bool)_accessibilityAvoidsMockViewContainers;
- (bool)_accessibilityBlocksInteraction;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessibilityBounds;
- (id)_accessibilityCapturedImages;
- (id)_accessibilityCirclePathBasedOnBoundsWidth;
- (bool)_accessibilityDisplayFocusIndicatorForHoverTextView;
- (bool)_accessibilityFKAShouldBeProcessed;
- (void)_accessibilityFinalize;
- (id)_accessibilityFocusContainers:(bool)arg1;
- (id)_accessibilityFocusRingTintColor;
- (id)_accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)_accessibilityHitTestSubviews;
- (long long)_accessibilityHorizontalSizeClass;
- (id)_accessibilityImageData;
- (bool)_accessibilityInTopLevelTabLoop;
- (bool)_accessibilityIsFKARunningForFocusItem;
- (bool)_accessibilityIsInCollectionCell;
- (bool)_accessibilityIsInFocusableCell;
- (bool)_accessibilityIsInTableCell;
- (bool)_accessibilityIsTitleElement;
- (bool)_accessibilityIsUserInteractionEnabled;
- (id)_accessibilityLastFocusedChild;
- (double)_accessibilityMaxFuzzyHitTestDistance;
- (id)_accessibilityNavigationViewInfo;
- (id)_accessibilityObscuredScreenAllowedViews;
- (bool)_accessibilityObscuredScreenAllowsView:(id)arg1;
- (bool)_accessibilityOnlyComparesByXAxis;
- (bool)_accessibilityPointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)_accessibilityPostNotification:(id)arg1;
- (bool)_accessibilityPreventOcclusionForViewFromAboveFocusRegionForHoverTextView;
- (id)_accessibilityProxyView;
- (bool)_accessibilityServesAsFirstElement;
- (void)_accessibilitySetNavigationViewInfo:(id)arg1;
- (bool)_accessibilityShouldHitTestLayers;
- (bool)_accessibilityShowContextMenuForElement:(id)arg1 targetPointValue:(id)arg2;
- (id)_accessibilitySortedElementsWithin;
- (id)_accessibilitySortedElementsWithinWithOptions:(id)arg1;
- (id)_accessibilitySupportGesturesAttributes;
- (bool)_accessibilityUIViewCanPerformEscapeAction;
- (bool)_accessibilityUnfocusableViewCanBeFocusedForHoverText;
- (bool)_accessibilityUseAccessibilityFrameForHittest;
- (id)_accessibilityUserTestingChildren;
- (id)_accessibilityUserTestingChildrenInAccessibilitySortedOrder:(bool)arg1;
- (bool)_accessibilityUserTestingIsRightNavButton;
- (long long)_accessibilityVerticalSizeClass;
- (double)_accessibilityViewAlpha;
- (id)_accessibilityViewController;
- (void)_axPrintSubviews:(long long)arg1 string:(id)arg2;
- (id)_axResponderChain;
- (id)_axSubviews;
- (id)_childFocusViews;
- (id)_clippedViewHierarchyDescription;
- (bool)_isEligibleForFocusInteraction;
- (void)_notifyReferenceViewSizeChange;
- (id)_systemDefaultFocusGroupIdentifier;
- (bool)accessibilityActivate;
- (id)accessibilityContainer;
- (bool)accessibilityElementIsFocused;
- (bool)accessibilityElementsHidden;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrame;
- (id)accessibilityLanguage;
- (id)accessibilityPath;
- (bool)accessibilityPerformEscape;
- (bool)accessibilityRespondsToUserInteraction;
- (unsigned long long)accessibilityTraits;
- (bool)accessibilityViewIsModal;
- (bool)canBecomeFocused;
- (bool)isAccessibilityElement;
- (id)preferredFocusEnvironments;
- (void)setAlpha:(double)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setHidden:(bool)arg1;
- (void)setIsAccessibilityElement:(bool)arg1;
- (void)willMoveToWindow:(id)arg1;

// UIView (AutomationAccessibility)

- (void)_accessibilitySetUserTestingIsCancelButton:(bool)arg1;
- (void)_accessibilitySetUserTestingIsDefaultButton:(bool)arg1;
- (void)_accessibilitySetUserTestingIsDestructiveButton:(bool)arg1;
- (void)_accessibilitySetUserTestingIsPreferredButton:(bool)arg1;
- (bool)_accessibilityUserTestingIsBackNavButton;
- (bool)_accessibilityUserTestingIsCancelButton;
- (bool)_accessibilityUserTestingIsDefaultButton;
- (bool)_accessibilityUserTestingIsDestructiveButton;
- (bool)_accessibilityUserTestingIsPreferredButton;

// UIView (UIAXTextField)

- (double)_accessibilityFontSize;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/AVKit.framework/AVKit

// UIView (AVAdditions)

- (id)avkit_ancestorViewPassingTest:(id /* block */)arg1;
- (id)avkit_backdropGroupLeader;
- (bool)avkit_hasFullScreenLayoutClass;
- (id)avkit_hitTestControlForPoint:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)avkit_hitTestControlForPoint:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2 bestSoFar:(inout id*)arg3 shortestDistanceSoFar:(inout double*)arg4;
- (void)avkit_intrinsicContentSizeOfSubviewWasInvalidated:(id)arg1;
- (bool)avkit_isAncestorOfViewPassingTest:(id /* block */)arg1;
- (bool)avkit_isBeingDismissed;
- (bool)avkit_isBeingPresented;
- (bool)avkit_isBeingScrollTested;
- (bool)avkit_isBeingScrolled;
- (bool)avkit_isBeingScrolledQuickly;
- (bool)avkit_isCompletelyTransparent;
- (bool)avkit_isCounterRotatedForTransition;
- (bool)avkit_isDescendantOfNonPagingScrollView;
- (bool)avkit_isDescendantOfViewPassingTest:(id /* block */)arg1;
- (bool)avkit_isInAScrollView;
- (bool)avkit_isInAWindowAndVisible;
- (bool)avkit_isVideoGravityFrozen;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })avkit_largestInscribedRectInBoundingPathWithCenter:(struct CGPoint { double x1; double x2; })arg1 aspectRatio:(double)arg2;
- (void)avkit_makeSubtreeDisallowGroupBlending;
- (void)avkit_needsUpdateBackdropCaptureViewHidden;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })avkit_overrideLayoutMarginsForCounterRotation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })avkit_portionOfFrameUnobscuredBySuperviews;
- (void)avkit_reevaluateHiddenStateOfItem:(id)arg1;
- (void)avkit_setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inLayoutDirection:(long long)arg2;
- (bool)avkit_wantsAnimatedViewTransitions;

// UIView (AVKitLayoutItem)

- (id)avkit_constraintsFromCenterAnchorsToCenterAnchorsOfItem:(id)arg1;
- (id)avkit_constraintsFromCenterAndDimensionAnchorsToCenterAndDimensionAnchorsOfItem:(id)arg1;
- (id)avkit_constraintsFromDimensionAnchorsToSize:(struct CGSize { double x1; double x2; })arg1;
- (id)avkit_constraintsFromEdgeAnchorsToEdgeAnchorsOfItem:(id)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/ContactsUI.framework/ContactsUI

// UIView (ABDebugging)

- (void)abSetLayoutDebuggingColor:(id)arg1;
- (id)tintColorOverride;
- (id)tintColorOverrideDarkened;

// UIView (CNContactStyle)

- (void)_cnui_applyContactStyle;
- (id)_cnui_contactStyle;

// UIView (CNGroupIdentityHeaderViewController)

- (void)addBackgroundVisualEffectView:(id)arg1 withCornerRadius:(double)arg2;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/EventKitUI.framework/EventKitUI

// UIView (EKUIViewHierarchy)

- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })ekui_affineTransform;
- (double)ekui_height;
- (long long)ekui_horizontalSizeClass;
- (long long)ekui_interfaceOrientation;
- (id)ekui_rootViewHierarchy;
- (struct CGSize { double x1; double x2; })ekui_size;
- (id)ekui_tintColor;
- (long long)ekui_verticalSizeClass;
- (double)ekui_width;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/MapKit.framework/MapKit

// UIView (MKAdditions)

+ (double)_mapkit_currentAnimationDuration;
+ (id)_mapkit_currentAnimationTimingFunction;
+ (bool)_mapkit_shouldAdoptImplicitAnimationParameters;

- (void)_mapkit_addPointerInteraction;
- (void)_mapkit_addPointerInteractionWithDelegate:(id)arg1;
- (void)_mapkit_bringSubviewToFront:(id)arg1;
- (id)_mapkit_currentPointerInteraction;
- (bool)_mapkit_hasPointerInteraction;
- (void)_mapkit_insertSubview:(id)arg1 aboveSubview:(id)arg2;
- (void)_mapkit_insertSubview:(id)arg1 atIndex:(long long)arg2;
- (bool)_mapkit_isDarkModeEnabled;
- (void)_mapkit_removePointerInteraction;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_mapkit_translateRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 ifNeededFromSingleEdge:(unsigned long long)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_mapkit_userInterfaceOnlySafeAreaInsets;

// UIView (MKCrossPlatformOperations)

+ (void)_mapkit_animateFromCurrentStateWithDuration:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_mapkit_animateWithDuration:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_mapkit_performWithoutAnimation:(id /* block */)arg1;
+ (void)_maps_setDoesNotTranslateAutoresizingConstraintsForViewsDictionary:(id)arg1;

- (void)_mapKit_setNeedsDisplay;
- (bool)_mapkit_YCoordinate:(double)arg1 liesInDirection:(long long)arg2 startingFromYCoordinate:(double)arg3;
- (double)_mapkit_YCoordinateAtDistance:(double)arg1 inDirection:(long long)arg2 fromEdge:(long long)arg3;
- (double)_mapkit_YCoordinateAtDistance:(double)arg1 inDirection:(long long)arg2 fromYCoordinate:(double)arg3;
- (id)_mapkit_constraintsPinningSubviewToBounds:(id)arg1;
- (float)_mapkit_contentCompressionResistancePriorityForAxis:(long long)arg1;
- (float)_mapkit_contentHuggingPriorityForAxis:(long long)arg1;
- (struct CGSize { double x1; double x2; })_mapkit_fittingSize;
- (void)_mapkit_insertSubviewAboveAllOtherSubviews:(id)arg1;
- (void)_mapkit_insertSubviewBelowAllOtherSubviews:(id)arg1;
- (bool)_mapkit_isDescendantOfView:(id)arg1;
- (bool)_mapkit_isRTL;
- (void)_mapkit_layoutBelowIfNeeded;
- (void)_mapkit_layoutIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_mapkit_rectWithSize:(struct CGSize { double x1; double x2; })arg1 XCoordinate:(double)arg2 atDistance:(double)arg3 inDirection:(long long)arg4 fromEdge:(long long)arg5;
- (void)_mapkit_setBackgroundColor:(id)arg1;
- (void)_mapkit_setContentCompressionResistancePriority:(float)arg1 forAxis:(long long)arg2;
- (void)_mapkit_setContentHuggingPriority:(float)arg1 forAxis:(long long)arg2;
- (void)_mapkit_setNeedsLayout;
- (void)_mapkit_setNeedsUpdateConstraints;
- (struct CGSize { double x1; double x2; })_mapkit_sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)_mapkit_sizeToFit;
- (void)_mapkit_updateConstraintsIfNeeded;
- (long long)_mapkit_userInterfaceDirection;

// UIView (MKInfoCardThemeListener)

- (void)infoCardThemeChanged;

// UIView (MKInternalAdditions)

- (double)_mapkit_leadingMargin;
- (double)_mapkit_trailingMargin;

// UIView (MapKitAccessoryButtonAdditions)

- (id)_mapkit_accessoryControlToExtendWithCallout;

// UIView (MapKitExtras)

- (id)_findNearestViewController;
- (id)_mapKit_mapView;
- (unsigned long long)_mapkit_countOfSet:(id)arg1 minusSubset:(id)arg2;
- (id)_mapkit_currentLayer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_mapkit_doubleFrame;

// UIView (MapKitTheming)

- (id)mk_theme;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/PDFKit.framework/PDFKit

// UIView (FindFirstResponder)

- (id)findFirstResponder;

// UIView (PDFKitUIViewExtensions)

- (id)_PDFViewParentViewController;

// UIView (ViewExtensions)

- (id)PDFKitEnclosingScrollView;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/StoreKit.framework/StoreKit

// UIView (SKExtensions)

- (bool)_sk_isAtLeast50PercentOnScreen;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/AccessibilityUIUtilities.framework/AccessibilityUIUtilities

// UIView (AXConstraintBasedLayout)

- (unsigned long long)_ax_depth;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToConstant:(double)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToConstant:(double)arg2 priority:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4 priority:(float)arg5;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 priority:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 withOffset:(double)arg3 priority:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToConstant:(double)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToConstant:(double)arg2 priority:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4 priority:(float)arg5;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3 priority:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asLessThanOrEqualToConstant:(double)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asLessThanOrEqualToConstant:(double)arg2 priority:(float)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asLessThanOrEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asLessThanOrEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4 priority:(float)arg5;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asLessThanOrEqualToValueOfView:(id)arg2;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3 priority:(float)arg4;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 relatedBy:(long long)arg2 toItem:(id)arg3 attribute:(long long)arg4 multiplier:(double)arg5 constant:(double)arg6;
- (id)ax_addedConstraintForLayoutAttribute:(long long)arg1 relatedBy:(long long)arg2 toItem:(id)arg3 attribute:(long long)arg4 multiplier:(double)arg5 constant:(double)arg6 priority:(float)arg7;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToConstant:(double)arg2;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToConstant:(double)arg2 priority:(float)arg3;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4 priority:(float)arg5;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 priority:(float)arg3;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 withOffset:(double)arg3 priority:(float)arg4;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToConstant:(double)arg2;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToConstant:(double)arg2 priority:(float)arg3;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4 priority:(float)arg5;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3 priority:(float)arg4;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asLessThanOrEqualToConstant:(double)arg2;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asLessThanOrEqualToConstant:(double)arg2 priority:(float)arg3;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asLessThanOrEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asLessThanOrEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4 priority:(float)arg5;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asLessThanOrEqualToValueOfView:(id)arg2;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (void)ax_constrainLayoutAttribute:(long long)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3 priority:(float)arg4;
- (void)ax_constrainLayoutAttribute:(long long)arg1 relatedBy:(long long)arg2 toItem:(id)arg3 attribute:(long long)arg4 multiplier:(double)arg5 constant:(double)arg6;
- (void)ax_constrainLayoutAttribute:(long long)arg1 relatedBy:(long long)arg2 toItem:(id)arg3 attribute:(long long)arg4 multiplier:(double)arg5 constant:(double)arg6 priority:(float)arg7;
- (id)ax_firstCommonAncestorWithView:(id)arg1;
- (id)ax_pinConstraintsInAllDimensionsToView:(id)arg1;
- (void)ax_setContentHuggingAndCompressionResistance:(struct { float x1; float x2; float x3; float x4; })arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents

// UIView (AppStoreComponents)

- (bool)asc_isEqualToOrDescendantOfFocusItem:(id)arg1;
- (id)asc_layoutTraitEnvironment;
- (id)asc_nearestSuperviewPassingTest:(id /* block */)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/AppSupportUI.framework/AppSupportUI

// UIView (NUIClassCheck)

- (long long)_nui_baselineViewType;

// UIView (NUIContainerView)

- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })customAlignmentRectInsets;
- (double)customBaselineOffsetFromBottom;
- (double)customFirstBaselineOffsetFromTop;
- (double)effectiveBaselineOffsetFromBottom;
- (double)effectiveFirstBaselineOffsetFromTop;
- (struct CGSize { double x1; double x2; })effectiveLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview;
- (bool)isLayoutSizeDependentOnPerpendicularAxis;
- (struct CGSize { double x1; double x2; })maximumLayoutSize;
- (struct CGSize { double x1; double x2; })minimumLayoutSize;
- (bool)neverCacheEffectiveLayoutSize;
- (void)setCustomAlignmentRectInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setCustomBaselineOffsetFromBottom:(double)arg1;
- (void)setCustomFirstBaselineOffsetFromTop:(double)arg1;
- (void)setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:(bool)arg1;
- (void)setLayoutSize:(struct CGSize { double x1; double x2; })arg1 withContentPriority:(float)arg2;
- (void)setLayoutSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalContentPriority:(float)arg2 verticalContentPriority:(float)arg3;
- (void)setMaximumLayoutSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMinimumLayoutSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setNeverCacheEffectiveLayoutSize:(bool)arg1;
- (void)setUntransformedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

// UIView (NUIContainerViewHack)

- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (bool)_isContainerView;

// UIView (NUIPrivate)

- (struct CGSize { double x1; double x2; })calculateLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)canUseFastLayoutSizeCalulation;
- (id)contentLayoutSizeCacheDescription;
- (id)debugSizeCache;
- (id)debugSizeCacheDict;

// UIView (NUISubclassHelpers)

- (void)_didInvalidateIntrinsicContentSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })effectiveAlignmentRectInsets;
- (double)effectiveBaselineOffsetFromContentBottom;
- (double)effectiveFirstBaselineOffsetFromContentTop;
- (double)effectiveScreenScale;
- (void)setCurrentEffectiveLayoutSizeFittingSizeShouldNotBeCached;
- (double)systemSpacingToAdjecentSiblingView:(id)arg1 axis:(long long)arg2 baselineRelative:(bool)arg3 multiplier:(double)arg4;
- (double)systemSpacingToSuperView:(id)arg1 edge:(unsigned long long)arg2 baselineRelative:(bool)arg3 multiplier:(double)arg4;

// UIView (NUITestExtras)

- (struct CGSize { double x1; double x2; })sizeToBestFitAndLayoutIfNeeded;
- (struct CGSize { double x1; double x2; })testableEffectiveLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })testableSizeThatFits:(struct CGSize { double x1; double x2; })arg1;

// UIView (_NUISizeCache)

- (void)nukeContentLayoutSizeCacheFromOrbit;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/AppleMediaServicesUI.framework/AppleMediaServicesUI

// UIView (AppleMediaServicesUI)

- (double)ams_alpha;
- (id)ams_backgroundColor;
- (void)ams_layout;
- (void)ams_sendSubviewToBack:(id)arg1;
- (void)ams_setAlpha:(double)arg1;
- (void)ams_setBackgroundColor:(id)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI

// UIView (BaseBoardUI)

- (bool)bs_isHitTestingDisabled;
- (void)bs_setHitTestingDisabled:(bool)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/JetUI.framework/JetUI

- (bool)hasContent;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })jet_focusedFrame;
- (struct JUMeasurements { double x1; double x2; double x3; double x4; })measurementsWithFitting:(struct CGSize { double x1; double x2; })arg1 in:(id)arg2;

// UIView (JU_UITraitCollectionOverrides)

- (long long)juLayoutDirection;
- (void)setJuLayoutDirection:(long long)arg1;

// UIView (JU_UITraitCollectionOverrides_Private)

- (long long)_juLayoutDirectionFromLayoutDirectionValue:(id)arg1;
- (id)_juLayoutDirectionValue;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit

// UIView (BuddyPinAutoLayout)

- (void)ob_pinToEdges:(id)arg1;
- (id)ob_pinToEdgesConstraints:(id)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/Pegasus.framework/Pegasus

// UIView (PGAdditions)

+ (void)PG_animateUsingDefaultDampedSpringWithInitialSpringVelocity:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)PG_animateUsingDefaultTimingWithAnimations:(id /* block */)arg1 completion:(id /* block */)arg2;
+ (void)PG_animateUsingDefaultTimingWithOptions:(unsigned long long)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)PG_performWithoutAnimation:(id /* block */)arg1;
+ (void)PG_performWithoutRetargetingAnimation:(id /* block */)arg1;

- (id)PG_acquireAssertionToPreventAutoHideOfControlsWithReason:(id)arg1;
- (bool)PG_allowsEdgeAntialiasing;
- (bool)PG_allowsGroupBlending;
- (struct CGPoint { double x1; double x2; })PG_anchorPoint;
- (id)PG_compositingFilter;
- (double)PG_cornerRadius;
- (bool)PG_disablesLayerCloning;
- (void)PG_setAllowsEdgeAntialiasing:(bool)arg1;
- (void)PG_setAllowsGroupBlending:(bool)arg1;
- (void)PG_setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)PG_setCompositingFilter:(id)arg1;

// UIView (PGCABackdropLayerViewSupport)

- (id)PG_backdropGroupLeader;
- (bool)PG_preferredVisibilityForView:(id)arg1;

// UIView (PGVibrancyEffects)

- (void)PG_recursivelyDisallowGroupBlending;
- (void)PG_removeVibrancyEffect;
- (void)PG_updateVibrancyEffectForTintColor;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/PrintKitUI.framework/PrintKitUI

// UIView (UIPrintFormatter)

- (Class)_printFormatterClass;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forViewPrintFormatter:(id)arg2;
- (id)viewPrintFormatter;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI

// UIView (TPTelephonyUIUtilities)

+ (void)tpSetSemanticContentAttribute_recursive:(long long)arg1 startingAtView:(id)arg2;

// UIView (TelephonyUI)

- (void)tp_setCHCRPriority:(float)arg1;
- (long long)tp_userInterfaceLayoutDirection;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/TemplateKit.framework/TemplateKit

// UIView (TLKApperance)

- (void)tlk_updateForAppearance:(id)arg1;
- (void)tlk_updateWithCurrentAppearance;

// UIView (TLKSharedPublic)

- (void)tlks_setCornerRadius:(double)arg1 withStyle:(id)arg2;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/UIAccessibility.framework/UIAccessibility

// UIView (AXWebKitHelper)

- (struct CGPoint { double x1; double x2; })accessibilityConvertPointFromSceneReferenceCoordinates:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityConvertRectToSceneReferenceCoordinates:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

// UIView (UIAccessibilityElementTraversal)

+ (id)_accessibilityElementsAndContainersDescendingFromViews:(id)arg1 options:(id)arg2 sorted:(bool)arg3;
+ (id)_subviewsReplacedByModalViewSubviewsIfNecessary:(id)arg1;

- (bool)_accessibilityIsSortingInUpperFrame;
- (void)_accessibilitySetIsSortingInUpperFrame:(bool)arg1;
- (bool)_accessibilityShouldBeAddedToViewChildrenWithOptions:(id)arg1;
- (bool)_accessibilityShouldBeProcessed:(id)arg1;
- (bool)_accessibilityShouldUseSupplementaryViews;
- (id)_accessibilitySubviewsForGettingElementsWithOptions:(id)arg1;
- (id)_accessibilityViewChildrenWithOptions:(id)arg1;
- (void)_addAccessibilityElementsAndOrderedContainersWithOptions:(id)arg1 toCollection:(id)arg2;

// UIView (UIAccessibilityPrivate)

+ (id)_accessibilityTitleForSystemTag:(long long)arg1;

- (bool)_accessibilityAllowsSiblingsWhenOvergrown;
- (void)_accessibilityClearChildren;
- (id)_accessibilityComputedLabelForNavigationBarWithAssociatedBarButtonItem:(id)arg1;
- (struct CGSize { double x1; double x2; })_accessibilityFrameExpansion;
- (bool)_accessibilityOverridesInvalidFrames;
- (void)_accessibilitySetAllowsSiblingsWhenOvergrown:(bool)arg1;
- (void)_accessibilitySetFrameExpansion:(struct CGSize { double x1; double x2; })arg1;
- (void)_accessibilitySetOverridesInvalidFrames:(bool)arg1;
- (void)_accessibilitySetViewIsVisible:(bool)arg1;
- (id)_accessibilitySubviews;
- (bool)_accessibilityViewIsActive;
- (bool)_accessibilityViewIsVisible;
- (bool)_accessibilityViewIsVisibleIgnoringAXOverrides:(bool)arg1;
- (bool)_accessibilityViewIsVisibleIgnoringAXOverrides:(bool)arg1 stoppingBeforeContainer:(id)arg2;
- (id)_accessibleNonSupplementarySubviews;
- (id)_accessibleSubviews;
- (id)_accessibleSubviews:(int)arg1;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/usr/lib/libMainThreadChecker.dylib

- (void)accessibilityApplyInvertFilter;
- (id)accessibilityHUDRepresentation;
- (bool)accessibilityIgnoresInvertColors;
- (bool)accessibilityInvertFilterApplied;
- (void)accessibilityUnapplyInvertFilter;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (void)addConstraint:(id)arg1;
- (void)addConstraints:(id)arg1;
- (void)addGestureRecognizer:(id)arg1;
- (void)addInteraction:(id)arg1;
- (void)addLayoutGuide:(id)arg1;
- (void)addMotionEffect:(id)arg1;
- (void)addSubview:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })alignmentRectForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (bool)allowsGroupBlending;
- (bool)allowsGroupOpacity;
- (double)alpha;
- (struct CGPoint { double x1; double x2; })anchorPoint;
- (id)appliedContentSizeCategoryLimitsDescription;
- (bool)areChildrenFocused;
- (bool)autoresizesSubviews;
- (unsigned long long)autoresizingMask;
- (id)backgroundColor;
- (bool)becomeFirstResponder;
- (id)bottomAnchor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (void)bringSubviewToFront:(id)arg1;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (bool)cancelMouseTracking;
- (bool)cancelTouchTracking;
- (struct CGPoint { double x1; double x2; })center;
- (id)centerXAnchor;
- (id)centerYAnchor;
- (float)charge;
- (bool)clearsContextBeforeDrawing;
- (bool)clipsToBounds;
- (long long)compareTextEffectsOrdering:(id)arg1;
- (long long)compositingMode;
- (id)constraints;
- (id)constraintsAffectingLayoutForAxis:(long long)arg1;
- (id)constraintsAffectingLayoutForAxis:(long long)arg1 ofItem:(id)arg2;
- (void)constraintsDidChangeInEngine:(id)arg1;
- (bool)containsView:(id)arg1;
- (float)contentCompressionResistancePriorityForAxis:(long long)arg1;
- (float)contentHuggingPriorityForAxis:(long long)arg1;
- (long long)contentMode;
- (double)contentScaleFactor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentStretch;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromCoordinateSpace:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromView:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 toCoordinateSpace:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 toView:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromCoordinateSpace:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromView:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toCoordinateSpace:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toView:(id)arg2;
- (struct CGSize { double x1; double x2; })convertSize:(struct CGSize { double x1; double x2; })arg1 fromView:(id)arg2;
- (struct CGSize { double x1; double x2; })convertSize:(struct CGSize { double x1; double x2; })arg1 toView:(id)arg2;
- (id)coordinateSpace;
- (void)deferredBecomeFirstResponder;
- (bool)deliversPressesForGesturesToSuperview;
- (bool)deliversTouchesForGesturesToSuperview;
- (void)didAddSubview:(id)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })directionalLayoutMargins;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 afterScreenUpdates:(bool)arg2;
- (unsigned long long)edgesInsettingLayoutMarginsFromSafeArea;
- (unsigned long long)edgesPreservingSuperviewLayoutMargins;
- (long long)effectiveUserInterfaceLayoutDirection;
- (void)encodeWithCoder:(id)arg1;
- (bool)endEditing:(bool)arg1;
- (id)engine:(id)arg1 markerForConstraintToBreakAmongConstraints:(id)arg2;
- (void)engine:(id)arg1 willBreakConstraint:(id)arg2 dueToMutuallyExclusiveConstraints:(id)arg3;
- (void)exchangeSubviewAtIndex:(long long)arg1 withSubviewAtIndex:(long long)arg2;
- (void)exerciseAmbiguityInLayout;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })extent;
- (void)find:(id)arg1;
- (void)findAndReplace:(id)arg1;
- (void)findNext:(id)arg1;
- (void)findPrevious:(id)arg1;
- (id)firstBaselineAnchor;
- (id)focusEffect;
- (id)focusGroupIdentifier;
- (long long)focusGroupPriority;
- (id)focusGuides;
- (id)focusItemContainer;
- (id)focusItemsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)forceDisplayIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForAlignmentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameInView:(id)arg1;
- (struct CGPoint { double x1; double x2; })frameOrigin;
- (id)gestureParent;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)gestureRecognizers;
- (bool)hasAmbiguousLayout;
- (id)heightAnchor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })hitRect;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })hitTestDirectionalInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })hitTestInsets;
- (id)hoverStyle;
- (unsigned long long)indexOfGestureRecognizer:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)inputResponderController;
- (void)insertSubview:(id)arg1 above:(id)arg2;
- (void)insertSubview:(id)arg1 aboveSubview:(id)arg2;
- (void)insertSubview:(id)arg1 atIndex:(long long)arg2;
- (void)insertSubview:(id)arg1 below:(id)arg2;
- (void)insertSubview:(id)arg1 belowSubview:(id)arg2;
- (bool)insetsLayoutMarginsFromSafeArea;
- (id)interactionTintColor;
- (void)interactionTintColorDidChange;
- (id)interactions;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (bool)isAccessibilityElementByDefault;
- (bool)isDescendantOfView:(id)arg1;
- (bool)isElementAccessibilityExposedToInterfaceBuilder;
- (bool)isEnabled;
- (bool)isExclusiveTouch;
- (bool)isFirstResponder;
- (bool)isFocused;
- (bool)isHidden;
- (bool)isHiddenOrHasHiddenAncestor;
- (bool)isMultipleTouchEnabled;
- (bool)isOpaque;
- (bool)isTransparentFocusItem;
- (bool)isUserInteractionEnabled;
- (id)keyboardLayoutGuide;
- (id)keyboardSceneDelegate;
- (id)largeContentImage;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })largeContentImageInsets;
- (id)largeContentTitle;
- (id)lastBaselineAnchor;
- (id)layer;
- (void)layerWillDraw:(id)arg1;
- (void)layoutBelowIfNeeded;
- (id)layoutGuides;
- (void)layoutIfNeeded;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })layoutMargins;
- (void)layoutMarginsDidChange;
- (bool)layoutMarginsFollowReadableWidth;
- (id)layoutMarginsGuide;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)layoutSubviews;
- (id)leadingAnchor;
- (id)leftAnchor;
- (id)maskView;
- (id)maximumContentSizeCategory;
- (id)minimumContentSizeCategory;
- (id)motionEffects;
- (void)movedFromSuperview:(id)arg1;
- (void)movedFromWindow:(id)arg1;
- (void)movedToSuperview:(id)arg1;
- (void)movedToWindow:(id)arg1;
- (void)mt_addPrivateSubview:(id)arg1;
- (id)mt_backgroundEffects;
- (id)mt_captureGroupName;
- (id)mt_contentEffects;
- (void)mt_setBackgroundEffects:(id)arg1;
- (void)mt_setCaptureGroupName:(id)arg1;
- (void)mt_setContentEffects:(id)arg1;
- (void)mt_setVisualEffect:(id)arg1;
- (id)mt_visualEffect;
- (bool)needsDisplay;
- (bool)needsDisplayOnBoundsChange;
- (bool)needsUpdateConstraints;
- (struct CGImage { }*)newSnapshotWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)nextResponder;
- (struct CGPoint { double x1; double x2; })origin;
- (long long)overrideUserInterfaceStyle;
- (id)parentFocusEnvironment;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (struct CGPoint { double x1; double x2; })position;
- (id)preferredFocusedView;
- (bool)preservesSuperviewLayoutMargins;
- (id)readableContentGuide;
- (id)recursiveDescription;
- (void)recursivelyForceDisplayIfNeeded;
- (void)reduceWidth:(double)arg1;
- (id)registerForTraitChanges:(id)arg1 withAction:(SEL)arg2;
- (id)registerForTraitChanges:(id)arg1 withHandler:(id /* block */)arg2;
- (id)registerForTraitChanges:(id)arg1 withTarget:(id)arg2 action:(SEL)arg3;
- (void)removeAllGestureRecognizers;
- (void)removeConstraint:(id)arg1;
- (void)removeConstraints:(id)arg1;
- (void)removeFromSuperview;
- (void)removeGestureRecognizer:(id)arg1;
- (void)removeInteraction:(id)arg1;
- (void)removeLayoutGuide:(id)arg1;
- (void)removeMotionEffect:(id)arg1;
- (id)resizableSnapshotFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withCapInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 afterScreenUpdates:(bool)arg2 withCapInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withCapInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (void)resizeSubviewsWithOldSize:(struct CGSize { double x1; double x2; })arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)restoreUserActivityState:(id)arg1;
- (id)rightAnchor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsets;
- (void)safeAreaInsetsDidChange;
- (id)safeAreaLayoutGuide;
- (bool)scalesLargeContentImage;
- (id)scriptingInfoWithChildren;
- (long long)semanticContentAttribute;
- (void)sendSubviewToBack:(id)arg1;
- (void)setAccessibilityIgnoresInvertColors:(bool)arg1;
- (void)setAllowsGroupBlending:(bool)arg1;
- (void)setAllowsGroupOpacity:(bool)arg1;
- (void)setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setAreChildrenFocused:(bool)arg1;
- (void)setAutoresizesSubviews:(bool)arg1;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCharge:(float)arg1;
- (void)setClearsContext:(bool)arg1;
- (void)setClearsContextBeforeDrawing:(bool)arg1;
- (void)setClipsSubviews:(bool)arg1;
- (void)setClipsToBounds:(bool)arg1;
- (void)setCompositingMode:(long long)arg1;
- (void)setContentCompressionResistancePriority:(float)arg1 forAxis:(long long)arg2;
- (void)setContentHuggingPriority:(float)arg1 forAxis:(long long)arg2;
- (void)setContentMode:(long long)arg1;
- (void)setContentScaleFactor:(double)arg1;
- (void)setContentStretch:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentsPosition:(int)arg1;
- (void)setDeliversPressesForGesturesToSuperview:(bool)arg1;
- (void)setDeliversTouchesForGesturesToSuperview:(bool)arg1;
- (void)setDirectionalLayoutMargins:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setEdgesInsettingLayoutMarginsFromSafeArea:(unsigned long long)arg1;
- (void)setEdgesPreservingSuperviewLayoutMargins:(unsigned long long)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setExclusiveTouch:(bool)arg1;
- (void)setFixedBackgroundPattern:(bool)arg1;
- (void)setFocusEffect:(id)arg1;
- (void)setFocusGroupIdentifier:(id)arg1;
- (void)setFocusGroupPriority:(long long)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forFields:(int)arg2;
- (void)setFrameOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setGestureRecognizers:(id)arg1;
- (void)setHitTestDirectionalInsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setHitTestInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setHoverStyle:(id)arg1;
- (void)setInsetsLayoutMarginsFromSafeArea:(bool)arg1;
- (void)setInteractionTintColor:(id)arg1;
- (void)setInteractions:(id)arg1;
- (void)setLargeContentImage:(id)arg1;
- (void)setLargeContentImageInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLargeContentTitle:(id)arg1;
- (void)setLayoutMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLayoutMarginsFollowReadableWidth:(bool)arg1;
- (void)setMaskView:(id)arg1;
- (void)setMaximumContentSizeCategory:(id)arg1;
- (void)setMinimumContentSizeCategory:(id)arg1;
- (void)setMotionEffects:(id)arg1;
- (void)setMultipleTouchEnabled:(bool)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNeedsDisplayOnBoundsChange:(bool)arg1;
- (void)setNeedsFocusUpdate;
- (void)setNeedsLayout;
- (void)setNeedsUpdateConstraints;
- (void)setOpaque:(bool)arg1;
- (void)setOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setOverrideUserInterfaceStyle:(long long)arg1;
- (void)setPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPreservesSuperviewLayoutMargins:(bool)arg1;
- (void)setRotationBy:(float)arg1;
- (void)setSafeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setScalesLargeContentImage:(bool)arg1;
- (void)setSemanticContentAttribute:(long long)arg1;
- (void)setShowsLargeContentViewer:(bool)arg1;
- (void)setSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSkipsSubviewEnumeration:(bool)arg1;
- (void)setTag:(long long)arg1;
- (void)setTintAdjustmentMode:(long long)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTransform3D:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)setTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(bool)arg1;
- (void)setUserInteractionEnabled:(bool)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setViewTraversalMark:(bool)arg1;
- (void)setWantsDeepColorDrawing:(bool)arg1;
- (void)set_ui_frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)set_ui_usesManualLayout:(bool)arg1;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (bool)showsLargeContentViewer;
- (struct CGSize { double x1; double x2; })size;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)sizeToFit;
- (bool)skipsSubviewEnumeration;
- (id)snapshotView;
- (id)snapshotViewAfterScreenUpdates:(bool)arg1;
- (void)solutionDidChangeInEngine:(id)arg1;
- (void)stopSettingPresentationValueForKey:(id)arg1;
- (id)subviews;
- (id)superview;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (long long)tag;
- (int)textEffectsVisibilityLevel;
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (id)textInputView;
- (long long)tintAdjustmentMode;
- (id)tintColor;
- (void)tintColorDidChange;
- (id)topAnchor;
- (id)trailingAnchor;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (id)traitOverrides;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })transform3D;
- (bool)translatesAutoresizingMaskIntoConstraints;
- (void)unregisterForTraitChanges:(id)arg1;
- (void)updateConstraints;
- (void)updateConstraintsIfNeeded;
- (void)updateFocusIfNeeded;
- (void)updateTraitsIfNeeded;
- (void)updateUserActivityState:(id)arg1;
- (bool)useBlockyMagnificationInClassic;
- (void)viewDidMoveToSuperview;
- (id)viewForBaselineLayout;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;
- (bool)viewTraversalMark;
- (void)viewWillMoveToSuperview:(id)arg1;
- (id)viewWithTag:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleBounds;
- (bool)wantsDeepColorDrawing;
- (id)widthAnchor;
- (void)willMoveToSuperview:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (id)window;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/usr/lib/libViewDebuggerSupport.dylib

// UIView (DebugHierarchyAdditionsFallback)

+ (id)fallback_debugHierarchyAdditionalGroupingIDs;
+ (id)fallback_debugHierarchyChildGroupingID;
+ (id)fallback_debugHierarchyObjectsInGroupWithID:(id)arg1 onObject:(id)arg2 outOptions:(id*)arg3;
+ (id)fallback_debugHierarchyPropertyDescriptions;
+ (id)fallback_debugHierarchyValueForPropertyWithName:(id)arg1 onObject:(id)arg2 outOptions:(id*)arg3 outError:(id*)arg4;

// UIView (DebugHierarchyHelpers)

- (unsigned long long)__dbg_ambiguityStatusMask;
- (id)__dbg_constraintsAffectingLayoutForAxis:(long long)arg1;
- (double)__dbg_firstBaselineOffsetFromTop;
- (id)__dbg_formattedDisplayName;
- (bool)__dbg_hasAmbiguousLayout;
- (double)__dbg_lastBaselineOffsetFromBottom;
- (id)__dbg_layer;
- (id)__dbg_readableContentGuide;
- (bool)__dbg_renderingModeIsMultiLayer;
- (bool)__dbg_shouldIgnoreScrollableContentHeightAmbiguity;
- (bool)__dbg_shouldIgnoreScrollableContentWidthAmbiguity;
- (id)__dbg_snapshotImage;
- (id)__dbg_snapshotImageRenderedUsingDrawHierarchyInRect;
- (id)__dbg_viewController;
- (id)__dbg_viewForFirstBaselineLayout;
- (id)__dbg_viewForLastBaselineLayout;
- (bool)__dbg_wantsAutoLayout;

@end
