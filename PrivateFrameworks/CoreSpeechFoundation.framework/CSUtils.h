/* Generated by RuntimeBrowser
   Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/CoreSpeechFoundation.framework/CoreSpeechFoundation
 */

@interface CSUtils : NSObject

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/CoreSpeechFoundation.framework/CoreSpeechFoundation

+ (bool)allowExtendedRingBufferSize;
+ (id)deviceBuildVersion;
+ (id)deviceHwRevision;
+ (id)deviceIdentifier;
+ (id)deviceProductType;
+ (id)deviceProductVersion;
+ (bool)deviceRequirePowerAssertionHeld;
+ (bool)deviceRequirePreventStandbyAssertion;
+ (id)deviceUserAssignedName;
+ (id)dispatchWorkloopWithWithQOS:(unsigned int)arg1 name:(id)arg2 fixedPriority:(int)arg3;
+ (id)getResourcePathInSystemDomainMaskByAppending:(id)arg1;
+ (id)getResourcePathInSystemDomainMaskFromRootPathByAppending:(id)arg1;
+ (id)getSerialQueue:(id)arg1 qualityOfService:(unsigned int)arg2;
+ (id)getSerialQueue:(id)arg1 withQualityOfService:(unsigned int)arg2 andTargetQueue:(id)arg3;
+ (id)getSerialQueueWithQOS:(unsigned int)arg1 name:(id)arg2 fixedPriority:(unsigned char)arg3;
+ (bool)hasRemoteCoreSpeech;
+ (unsigned long long)horsemanDeviceType;
+ (bool)isASRViaSpeechAPIEnabled;
+ (bool)isAttentiveSiriEnabled;
+ (bool)isBridgeOS;
+ (bool)isCarplayWithFlexibleFollowupEnabled;
+ (bool)isContinuousConversationSupported;
+ (bool)isDarwinOS;
+ (bool)isFlexibleEndpointingEnabled;
+ (bool)isIOSDeviceSupportingBargeIn;
+ (bool)isLocalVoiceTriggerAvailable;
+ (bool)isMedocFeatureEnabled;
+ (void*)mmapWithFile:(id)arg1 mappedSizeOut:(id*)arg2;
+ (bool)platformSupportsImplicitUttAddition;
+ (long long)processIdentifier;
+ (bool)readOptimizationMadviseWithVaddr:(void*)arg1 mmapedSize:(unsigned long long)arg2 preLoadChunkSize:(unsigned long long)arg3;
+ (id)rootQueueWithFixedPriority:(int)arg1;
+ (bool)shouldBlockVoiceTriggerWhenOtherAppRecording;
+ (bool)shouldDeinterleaveAudioOnCS;
+ (bool)shouldDelayTwoShotFeedbackForMyriadDecision;
+ (bool)shouldDownloadVTAssetsOnDaemon;
+ (bool)supportAcousticProgressiveChecker;
+ (bool)supportAdBlocker;
+ (bool)supportAudioTappingSelfTrigger;
+ (bool)supportBeepCanceller:(unsigned long long)arg1;
+ (bool)supportBluetoothDeviceVoiceTrigger;
+ (bool)supportCSTwoShotDecision;
+ (bool)supportCircularBuffer;
+ (bool)supportCompactPlus;
+ (bool)supportContinuousAudioFingerprint;
+ (bool)supportContinuousVoiceTrigger;
+ (bool)supportEarconRemoval;
+ (bool)supportEndpointerWhileHostAsleep;
+ (bool)supportHandsFree;
+ (bool)supportHangUp;
+ (bool)supportHearstVoiceTrigger;
+ (bool)supportHomeKitAccessory;
+ (bool)supportHybridEndpointer;
+ (bool)supportJarvisVoiceTrigger;
+ (bool)supportKeywordDetector;
+ (bool)supportLanguageDetector;
+ (bool)supportLazySessionActivation;
+ (bool)supportMedocAnnounce;
+ (bool)supportMph;
+ (bool)supportMphAssets;
+ (bool)supportMyriadLightHouse;
+ (bool)supportNonInterruptibleSiri;
+ (bool)supportOpportunisticZLL;
+ (bool)supportPhatic;
+ (bool)supportPremiumAssets;
+ (bool)supportPremiumModel;
+ (bool)supportPremiumWatchAssets;
+ (bool)supportRaiseToSpeak;
+ (bool)supportRelayCall;
+ (bool)supportRemoraVoiceTrigger;
+ (bool)supportRemoteDarwinVoiceTrigger;
+ (bool)supportRingtoneA2DP;
+ (bool)supportSAT;
+ (bool)supportSelfTriggerSuppression:(unsigned long long)arg1 refChannelIdx:(unsigned long long)arg2;
+ (bool)supportSelfTriggerSuppressionWatch;
+ (bool)supportSessionActivateDelay;
+ (bool)supportSmartVolume;
+ (bool)supportStateFeedback;
+ (bool)supportTCU;
+ (bool)supportTTS;
+ (bool)supportTelephonyAudioTap;
+ (bool)supportTrialMitigationAssets;
+ (bool)supportVoiceID;
+ (bool)supportVoiceTriggerChannelSelection;
+ (bool)supportZeroFilter:(unsigned long long)arg1;
+ (bool)supportsANE;
+ (bool)supportsDictationOnDevice;
+ (bool)supportsDispatchWorkloop;
+ (bool)supportsEndpointingOnATV;
+ (bool)supportsHybridUnderstandingOnDevice;
+ (bool)supportsMagusForLanguageCode:(id)arg1;
+ (bool)supportsMphForLanguageCode:(id)arg1;
+ (bool)supportsSiriLiminal;
+ (bool)supportsSpeakerRecognitionAssets;
+ (bool)supportsSpeechRecognitionOnDevice;
+ (bool)supportsUnderstandingOnDevice;
+ (bool)supportsVoiceTriggerFides;
+ (double)systemUpTime;
+ (id)timeStampWithSaltGrain;
+ (void)withElapsedTimeLogging:(id)arg1 execute:(id /* block */)arg2;

// CSUtils (AudioDevice)

+ (id)audioPortSubtypeAsString:(unsigned int)arg1;
+ (unsigned long long)fetchHypotheticalRouteType;
+ (unsigned long long)fetchHypotheticalRouteTypeFromAudioSessionId:(unsigned int)arg1;
+ (bool)isBluetoothAudioDeviceConnected;
+ (bool)isBluetoothVehicleOutput;
+ (bool)isBuiltInRecordRoute:(id)arg1;
+ (bool)isBuiltInRouteWithRecordRoute:(id)arg1 playbackRoute:(id)arg2;
+ (bool)isDoAPAudioRouteWithRecordRoute:(id)arg1;
+ (bool)isHFPWithRecordRoute:(id)arg1;
+ (bool)isHeadphoneDeviceWithRecordRoute:(id)arg1 playbackRoute:(id)arg2;
+ (bool)isJarvisAudioRouteWithRecordRoute:(id)arg1;
+ (bool)isOutOfBandAudioRouteWithRecordRoute:(id)arg1;

// CSUtils (Bitset)

+ (unsigned int)getNumElementInBitset:(unsigned long long)arg1;
+ (void)iterateBitset:(unsigned long long)arg1 block:(id /* block */)arg2;

// CSUtils (Directory)

+ (void)URLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(id /* block */)arg3;
+ (id)_contentsOfDirectoryAtURL:(id)arg1 matchingPattern:(id)arg2 includingPropertiesForKeys:(id)arg3 error:(id*)arg4;
+ (bool)_createLoggingDirectoryIfNeeded:(id)arg1;
+ (id)_sharedDisposeLoggingQueue;
+ (void)_sortedURLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(id /* block */)arg3;
+ (id)_timeStampString;
+ (void)clearLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 exceedNumber:(unsigned long long)arg3;
+ (id)loggingFilePathWithDirectory:(id)arg1 token:(id)arg2 postfix:(id)arg3;
+ (void)purgeFilesWithExtensionInDirectory:(id)arg1 extension:(id)arg2 withFileToKep:(id)arg3;
+ (void)removeDirectory:(id)arg1;
+ (void)removeLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 beforeDays:(float)arg3;

// CSUtils (Json)

+ (id)_readValuesInNestedDictionary:(id)arg1 keyword:(id)arg2 depth:(long long)arg3 limitedDepth:(long long)arg4;
+ (id)readValuesFromJsonFile:(id)arg1 keyword:(id)arg2;

// CSUtils (Security)

+ (id)auditTokenToString:(struct { unsigned int x1[8]; })arg1;
+ (bool)checkEntitlementForToken:(struct { unsigned int x1[8]; })arg1 withEntitlement:(id)arg2;
+ (struct { unsigned int x1[8]; })getTokenFromDictionary:(id)arg1 withTokenKey:(id)arg2;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech

// CSUtils (AudioFile)

+ (bool)readAudioChunksFrom:(id)arg1 block:(id /* block */)arg2;

// CSUtils (AudioHardware)

+ (bool)hasRemoteBuiltInMic;
+ (bool)isRemoteDarwinWithDeviceId:(id)arg1;

// CSUtils (Json)

+ (id)_readValuesInNestedDictionary:(id)arg1 keyword:(id)arg2 depth:(long long)arg3 limitedDepth:(long long)arg4;
+ (id)readValuesFromJsonFile:(id)arg1 keyword:(id)arg2;

// CSUtils (LanguageCode)

+ (id)getSiriLanguageWithEndpointId:(id)arg1 fallbackLanguage:(id)arg2;
+ (id)getSiriLanguageWithFallback:(id)arg1;

// CSUtils (NSXPC)

+ (bool)xpcConnection:(id)arg1 hasEntitlement:(id)arg2;

// CSUtils (RecordContext)

+ (bool)isRecordContextAutoPrompt:(id)arg1;
+ (bool)isRecordContextBuiltInVoiceTrigger:(id)arg1;
+ (bool)isRecordContextDarwinVoiceTrigger:(id)arg1;
+ (bool)isRecordContextHearstDoubleTap:(id)arg1;
+ (bool)isRecordContextHearstVoiceTrigger:(id)arg1;
+ (bool)isRecordContextHomeButtonPress:(id)arg1;
+ (bool)isRecordContextJarvisButtonPress:(id)arg1;
+ (bool)isRecordContextJarvisVoiceTrigger:(id)arg1;
+ (bool)isRecordContextRaiseToSpeak:(id)arg1;
+ (bool)isRecordContextRemoraVoiceTrigger:(id)arg1;
+ (bool)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;
+ (bool)isRecordContextVoiceTrigger:(id)arg1;
+ (bool)isValidRecordContext:(id)arg1;
+ (id)recordContextString:(id)arg1;

// CSUtils (Statistics)

+ (id)distributionDictionary:(id)arg1;

// CSUtils (Trial)

+ (unsigned long long)getAssetTypeForNamespace:(id)arg1;
+ (void)getTrialIdsForAssetType:(unsigned long long)arg1 withCompletion:(id /* block */)arg2;

// Image: /Library/Developer/CoreSimulator/Volumes/iOS_21A328/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 17.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/SpeakerRecognition.framework/SpeakerRecognition

// CSUtils (AudioHardware)

+ (bool)hasRemoteBuiltInMic;
+ (bool)isRemoteDarwinWithDeviceId:(id)arg1;

// CSUtils (LanguageCode)

+ (id)getSiriLanguageWithEndpointId:(id)arg1 fallbackLanguage:(id)arg2;
+ (id)getSiriLanguageWithFallback:(id)arg1;

// CSUtils (RecordContext)

+ (bool)isRecordContextAutoPrompt:(id)arg1;
+ (bool)isRecordContextBuiltInVoiceTrigger:(id)arg1;
+ (bool)isRecordContextDarwinVoiceTrigger:(id)arg1;
+ (bool)isRecordContextHearstDoubleTap:(id)arg1;
+ (bool)isRecordContextHearstVoiceTrigger:(id)arg1;
+ (bool)isRecordContextHomeButtonPress:(id)arg1;
+ (bool)isRecordContextJarvisButtonPress:(id)arg1;
+ (bool)isRecordContextJarvisVoiceTrigger:(id)arg1;
+ (bool)isRecordContextRaiseToSpeak:(id)arg1;
+ (bool)isRecordContextRemoraVoiceTrigger:(id)arg1;
+ (bool)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;
+ (bool)isRecordContextVoiceTrigger:(id)arg1;
+ (bool)isValidRecordContext:(id)arg1;
+ (id)recordContextString:(id)arg1;

@end
